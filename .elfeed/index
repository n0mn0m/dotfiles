;;; Elfeed Database Index (version 4)

;; Dummy index for backwards compatablity:
(:version "0.0.3" :feeds #s(hash-table size 65 test equal rehash-size 1.5 rehash-threshold 0.800000011920929 data ()) :entries #s(hash-table size 65 test equal rehash-size 1.5 rehash-threshold 0.800000011920929 data ()) :index [cl-struct-avl-tree- [nil nil nil 0] elfeed-db-compare])

;; Real index:
(:version 4 :feeds #s(hash-table size 65 test equal rehash-size 1.5 rehash-threshold 0.8125 data ("https://blog.rust-lang.org/feed.xml" #s(elfeed-feed "https://blog.rust-lang.org/feed.xml" "https://blog.rust-lang.org/feed.xml" "Rust Blog" ((:name "Maintained by the Rust Team." :uri "https://github.com/rust-lang/blog.rust-lang.org/")) (:last-modified "Wed, 15 Jan 2020 15:17:31 GMT" :etag "W/\"5e1f2d0b-1432f\"")) "https://hynek.me/index.xml" #s(elfeed-feed "https://hynek.me/index.xml" "https://hynek.me/index.xml" "Homepage of Hynek Schlawack" ((:name "Hynek Schlawack" :uri "https://hynek.me/" :email "hs@ox.cx")) (:last-modified "Sun, 19 Jan 2020 06:21:42 GMT" :etag "\"a0c4-59c78302fc980\"")) "http://bitbashing.io/feed.xml" #s(elfeed-feed "http://bitbashing.io/feed.xml" "http://bitbashing.io/feed.xml" "Bit Bashing" nil (:last-modified "Tue, 29 Oct 2019 02:04:20 GMT" :canonical-url "https://bitbashing.io/feed.xml")) "https://neopythonic.blogspot.com/feeds/posts/default" #s(elfeed-feed "https://neopythonic.blogspot.com/feeds/posts/default" "https://neopythonic.blogspot.com/feeds/posts/default" "Neopythonic" ((:name "Guido van Rossum" :uri "http://www.blogger.com/profile/12821714508588242516" :email "noreply@blogger.com")) (:last-modified "Mon, 11 Nov 2019 10:57:31 GMT" :etag "W/\"7e7a6fa2277ebcf03463f00c245a5f449e366315b84041d4361df50e26508f33\"")) "http://www.fosslc.org/drupal/rss.xml" #s(elfeed-feed "http://www.fosslc.org/drupal/rss.xml" nil nil nil (:failures 1)) "https://www.archlinux.org/feeds/news/" #s(elfeed-feed "https://www.archlinux.org/feeds/news/" "https://www.archlinux.org/feeds/news/" "Arch Linux: Recent news updates" nil (:last-modified "Wed, 15 Jan 2020 20:14:45 GMT" :etag "\"73980e3737f704bd210d94a560b19fb0\"")) "https://www.bunniestudios.com/blog/?feed=rss2" #s(elfeed-feed "https://www.bunniestudios.com/blog/?feed=rss2" "https://www.bunniestudios.com/blog/?feed=rss2" "bunnie's blog" nil (:last-modified "Sat, 11 Jan 2020 02:19:46 GMT" :etag "\"2f566548ea18bfc21c29763ebced750b\"")) "https://blog.jessfraz.com/index.xml" #s(elfeed-feed "https://blog.jessfraz.com/index.xml" "https://blog.jessfraz.com/index.xml" "Ramblings from Jessie" nil (:etag "\"2a52a6cdaa619d4131eca233dff1d6e2-ssl-df\"")) "https://feeds.feedburner.com/TroyHunt" #s(elfeed-feed "https://feeds.feedburner.com/TroyHunt" "https://feeds.feedburner.com/TroyHunt" "Troy Hunt's Blog" nil (:last-modified "Tue, 21 Jan 2020 03:25:35 GMT" :etag "lqxfYpxkzAY8J1S204twm/sk+K4")) "https://www.freebsd.org/news/rss.xml" #s(elfeed-feed "https://www.freebsd.org/news/rss.xml" "https://www.freebsd.org/news/rss.xml" "FreeBSD News Flash" nil (:last-modified "Tue, 21 Jan 2020 03:25:46 GMT" :etag "\"5e266f3a-143c\"")) "http://250bpm.com/feed/pages/pagename/start/category/blog/t/250bpm-blogs/h/http%3A%2F%2Fwww.250bpm.com%2Fblog" #s(elfeed-feed "http://250bpm.com/feed/pages/pagename/start/category/blog/t/250bpm-blogs/h/http%3A%2F%2Fwww.250bpm.com%2Fblog" "http://250bpm.com/feed/pages/pagename/start/category/blog/t/250bpm-blogs/h/http%3A%2F%2Fwww.250bpm.com%2Fblog" "250bpm-blogs" nil nil) "https://easyperf.net/feed.xml" #s(elfeed-feed "https://easyperf.net/feed.xml" "https://easyperf.net/feed.xml" "Denis Bakhvalov" ((:name "{\"twitter\"=>\"dendibakh\"}")) (:last-modified "Mon, 13 Jan 2020 18:37:53 GMT" :etag "W/\"5e1cb901-39366\"")) "https://smalldatum.blogspot.com/feeds/posts/default" #s(elfeed-feed "https://smalldatum.blogspot.com/feeds/posts/default" "https://smalldatum.blogspot.com/feeds/posts/default" "Small Datum" ((:name "Mark Callaghan" :uri "http://www.blogger.com/profile/09590445221922043181" :email "noreply@blogger.com")) (:last-modified "Mon, 20 Jan 2020 14:50:43 GMT" :etag "W/\"378104ae815aa0cd88c7785ea012ae9d24666809771068220b8990b2a5163a58\"")) "http://fabiensanglard.net/rss.xml" #s(elfeed-feed "http://fabiensanglard.net/rss.xml" "http://fabiensanglard.net/rss.xml" "fabiensanglard.net" nil (:last-modified "Sun, 19 Jan 2020 06:05:12 GMT")) "https://eli.thegreenplace.net/feeds/all.atom.xml" #s(elfeed-feed "https://eli.thegreenplace.net/feeds/all.atom.xml" "https://eli.thegreenplace.net/feeds/all.atom.xml" "Eli Bendersky's website" nil (:last-modified "Tue, 07 Jan 2020 14:35:40 GMT" :etag "\"163cd0-59b8db0ac124e-gzip\"")) "http://www.gregcons.com/KateBlog/SyndicationService.asmx/GetRss" #s(elfeed-feed "http://www.gregcons.com/KateBlog/SyndicationService.asmx/GetRss" "http://www.gregcons.com/KateBlog/SyndicationService.asmx/GetRss" "Kate Gregory's Blog" nil (:last-modified "Mon, 20 Jan 2020 03:48:20 GMT" :etag "637150709000000000")) "http://joeduffyblog.com/feed.xml" #s(elfeed-feed "http://joeduffyblog.com/feed.xml" "http://joeduffyblog.com/feed.xml" "Joe Duffy's Blog" nil (:last-modified "Wed, 18 Sep 2019 23:12:39 GMT" :etag "W/\"5d82b9e7-8d2f6\"")) "http://blog.cleancoder.com/atom.xml" #s(elfeed-feed "http://blog.cleancoder.com/atom.xml" "http://blog.cleancoder.com/atom.xml" "The Clean Code Blog" ((:name "Uncle Bob Martin")) (:last-modified "Fri, 08 Nov 2019 16:58:49 GMT" :etag "W/\"5dc59ec9-2953d\"")) "https://kennykerr.ca/feed/" #s(elfeed-feed "https://kennykerr.ca/feed/" "https://kennykerr.ca/feed/" "Kenny Kerr" nil (:last-modified "Mon, 23 Dec 2019 09:47:11 GMT")) "https://tim.mcnamara.nz/rss" #s(elfeed-feed "https://tim.mcnamara.nz/rss" "https://tim.mcnamara.nz/rss" "Tim McNamara" nil nil) "https://programmingisterrible.com/rss" #s(elfeed-feed "https://programmingisterrible.com/rss" "https://programmingisterrible.com/rss" "programming is terrible" nil nil) "https://ferrisellis.com/index.xml" #s(elfeed-feed "https://ferrisellis.com/index.xml" "https://ferrisellis.com/index.xml" "Ferris Ellis" nil (:last-modified "Mon, 27 May 2019 23:53:53 GMT" :etag "W/\"5cec7891-6047\"")) "http://nullprogram.com/feed" #s(elfeed-feed "http://nullprogram.com/feed" "http://nullprogram.com/feed" "null program" ((:name "Christopher Wellons" :uri "https://nullprogram.com/" :email "wellons@nullprogram.com")) (:last-modified "Sun, 19 Jan 2020 20:31:08 GMT" :etag "W/\"5e24bc8c-2301d\"" :canonical-url "https://nullprogram.com/feed")) "http://lucumr.pocoo.org/feed.atom" #s(elfeed-feed "http://lucumr.pocoo.org/feed.atom" "http://lucumr.pocoo.org/feed.atom" "Armin Ronacher's Thoughts and Writings" nil (:last-modified "Mon, 06 Jan 2020 18:47:08 GMT" :etag "\"5e1380ac-30daf\"" :canonical-url "https://lucumr.pocoo.org/feed.atom")) "https://toorcamp.toorcon.net/feed" #s(elfeed-feed "https://toorcamp.toorcon.net/feed" "https://toorcamp.toorcon.net/feed" "ToorCamp" nil (:last-modified "Sat, 28 Dec 2019 04:32:34 GMT" :etag "\"083a28ffbd53a7b983e2db0885490f75-gzip\"" :canonical-url "https://toorcamp.toorcon.net/feed/")) "https://unexpectedeof.net/feeds/all.atom.xml" #s(elfeed-feed "https://unexpectedeof.net/feeds/all.atom.xml" nil nil nil (:failures 1)) "https://feeds.feedburner.com/PythonSoftwareFoundationNews" #s(elfeed-feed "https://feeds.feedburner.com/PythonSoftwareFoundationNews" "https://feeds.feedburner.com/PythonSoftwareFoundationNews" "Python Software Foundation News" ((:name "Marlene_zw" :uri "http://www.blogger.com/profile/12157871163204008115" :email "noreply@blogger.com")) (:last-modified "Tue, 21 Jan 2020 02:02:15 GMT" :etag "antCrcwdoFVnJheYRAYHN8q5WE8")) "http://feeds.feedburner.com/eclipselive" #s(elfeed-feed "http://feeds.feedburner.com/eclipselive" "http://feeds.feedburner.com/eclipselive" "Eclipse Foundation Youtube Channel" nil (:last-modified "Tue, 21 Jan 2020 03:25:33 GMT" :etag "JIPUIDR1ZCXju/DD8HWG7bQ7XT4")) "https://www.sebastiansylvan.com/index.xml" #s(elfeed-feed "https://www.sebastiansylvan.com/index.xml" "https://www.sebastiansylvan.com/index.xml" "A Random Walk Through Geek-Space" nil (:last-modified "Fri, 17 Aug 2018 06:00:08 GMT" :etag "\"2caa-5739b45a2b54a\"")) "https://hackaday.com/rss" #s(elfeed-feed "https://hackaday.com/rss" "https://hackaday.com/rss" "Hackaday" nil (:last-modified "Mon, 20 Jan 2020 17:51:59 GMT" :etag "W/\"aa94a725dd1640d3f1e9df9554dfedfc\"" :canonical-url "https://hackaday.com/feed/")) "https://thecrazyprogrammer.com/feed" #s(elfeed-feed "https://thecrazyprogrammer.com/feed" "https://thecrazyprogrammer.com/feed" "The Crazy Programmer" nil (:last-modified "Fri, 17 Jan 2020 11:54:26 GMT" :etag "W/\"1fbd6243fb2f2bc272da0fd2e87a0093\"" :canonical-url "https://www.thecrazyprogrammer.com/feed")) "https://feeds.feedburner.com/steveklabnik/words" #s(elfeed-feed "https://feeds.feedburner.com/steveklabnik/words" "https://feeds.feedburner.com/steveklabnik/words" "Steve Klabnik" ((:name "Steve Klabnik" :uri "https://words.steveklabnik.com" :email "steve@steveklabnik.com")) (:last-modified "Tue, 21 Jan 2020 02:40:42 GMT" :etag "Kh6zDPPL6P2HxR5dS2kIt9HoIzU")) "https://drewdevault.com/feed.xml" #s(elfeed-feed "https://drewdevault.com/feed.xml" "https://drewdevault.com/feed.xml" "Drew DeVault's Blog" nil (:last-modified "Fri, 17 Jan 2020 21:20:41 GMT" :etag "\"5e222529-14e1b\"")) "https://idea.popcount.org/rss.xml" #s(elfeed-feed "https://idea.popcount.org/rss.xml" "https://idea.popcount.org/rss.xml" "Marek's idea of the day" nil (:last-modified "Mon, 02 Dec 2019 10:36:00 GMT" :etag "W/\"5de4e910-6f23\"" :canonical-url "https://idea.popcount.org/cdn-cgi/maze/eJwlzUEOgjAQBdCrkL9uKlDZzJ5TKCGVTrWBajNtEw3h7sa4fou3I4CwhiXGh4vOh_UGBc-2VOEMuiD5ILlgUqggXE-Ss37HDQo1s8z2zs8Cwhjtkptx88yuMdroFgrC8VV4ts4JCEOrezPo7tzrzvw4WSkfEP6DQgLtx_EFuUstyw:VjrM3PYHV0kdnmKd47GU8jPBvNB-CjXfWil0Xr-AMxo")) "https://mwl.io/feed" #s(elfeed-feed "https://mwl.io/feed" "https://mwl.io/feed" "Michael Warren Lucas" nil (:etag "\"f5d11ecd1224ce88d2ddd2beb9adf1e9\"")) "https://blogs.msdn.microsoft.com/oldnewthing/feed" #s(elfeed-feed "https://blogs.msdn.microsoft.com/oldnewthing/feed" "https://blogs.msdn.microsoft.com/oldnewthing/feed" "The Old New Thing" nil (:last-modified "Fri, 17 Jan 2020 15:00:00 GMT" :etag "W/\"8000b5dfc008928302583f97221ab21f-gzip\"" :canonical-url "https://devblogs.microsoft.com/oldnewthing/feed")) "https://vorpus.org/blog/feeds/atom.xml" #s(elfeed-feed "https://vorpus.org/blog/feeds/atom.xml" "https://vorpus.org/blog/feeds/atom.xml" "njs blog" nil (:last-modified "Mon, 06 May 2019 19:46:21 GMT" :etag "\"c4cac-5883d5ac81d40\"")) "https://blog.acolyer.org/feed/" #s(elfeed-feed "https://blog.acolyer.org/feed/" "https://blog.acolyer.org/feed/" "the morning paper" nil (:last-modified "Mon, 20 Jan 2020 06:00:34 GMT")) "http://habitatchronicles.com/feed/" #s(elfeed-feed "http://habitatchronicles.com/feed/" "http://habitatchronicles.com/feed/" "Habitat Chronicles" nil (:last-modified "Fri, 30 Aug 2019 23:27:10 GMT" :etag "\"b1be112780588a6e6254c163488f77be-gzip\"")) "https://bg.battletech.com/feed/" #s(elfeed-feed "https://bg.battletech.com/feed/" "https://bg.battletech.com/feed/" "BattleTech: The Board Game of Armored Combat" nil (:last-modified "Tue, 07 Jan 2020 15:42:22 GMT" :etag "\"7f29030596751cd0f962a1d6de646da3\"")) "https://unixism.net/feed" #s(elfeed-feed "https://unixism.net/feed" "https://unixism.net/feed" "Unixism" nil (:last-modified "Fri, 18 Oct 2019 05:58:46 GMT" :etag "W/\"9c39f8740c389d068f590ce5e27b4c0f\"" :canonical-url "https://unixism.net/feed/")) "https://rhettinger.wordpress.com/feed/" #s(elfeed-feed "https://rhettinger.wordpress.com/feed/" "https://rhettinger.wordpress.com/feed/" "Deep Thoughts by Raymond Hettinger" nil (:last-modified "Mon, 14 Oct 2019 05:26:08 GMT")))) :entries #s(hash-table size 1095 test equal rehash-size 1.5 rehash-threshold 0.8125 data (("250bpm.com" . "http://250bpm.com/blog:157") #s(elfeed-entry ("250bpm.com" . "http://250bpm.com/blog:157") "The Missing Piece" "http://250bpm.com/blog:157" 1572154906.0 #s(elfeed-ref "00cb9a82c9dd2634b3dbe6f724d1cf1da31e42fb") html nil (dev se unread) "http://250bpm.com/feed/pages/pagename/start/category/blog/t/250bpm-blogs/h/http%3A%2F%2Fwww.250bpm.com%2Fblog" nil) ("250bpm.com" . "http://250bpm.com/blog:156") #s(elfeed-entry ("250bpm.com" . "http://250bpm.com/blog:156") "Happy Petrov Day!" "http://250bpm.com/blog:156" 1569549536.0 #s(elfeed-ref "add85b35094303a5726186a6a616c4feb24215e5") html nil (dev se unread) "http://250bpm.com/feed/pages/pagename/start/category/blog/t/250bpm-blogs/h/http%3A%2F%2Fwww.250bpm.com%2Fblog" nil) ("250bpm.com" . "http://250bpm.com/blog:155") #s(elfeed-entry ("250bpm.com" . "http://250bpm.com/blog:155") "On Becoming Clueless" "http://250bpm.com/blog:155" 1569298098.0 #s(elfeed-ref "6b00d02916c35d80bcaf64c0289a3aec3fb7e792") html nil (dev se unread) "http://250bpm.com/feed/pages/pagename/start/category/blog/t/250bpm-blogs/h/http%3A%2F%2Fwww.250bpm.com%2Fblog" nil) ("250bpm.com" . "http://250bpm.com/blog:154") #s(elfeed-entry ("250bpm.com" . "http://250bpm.com/blog:154") "Type-safeness in Shell" "http://250bpm.com/blog:154" 1557659859.0 #s(elfeed-ref "914a5d0d3c9d137e2e0d32f3e4799470794d87c4") html nil (dev se unread) "http://250bpm.com/feed/pages/pagename/start/category/blog/t/250bpm-blogs/h/http%3A%2F%2Fwww.250bpm.com%2Fblog" nil) ("250bpm.com" . "http://250bpm.com/blog:153") #s(elfeed-entry ("250bpm.com" . "http://250bpm.com/blog:153") "Hull: An alternative to shell that I'll never have time to implement" "http://250bpm.com/blog:153" 1556436617.0 #s(elfeed-ref "25113ed5ea2ff6c44c1828d57f044203f6ef6d95") html nil (dev se unread) "http://250bpm.com/feed/pages/pagename/start/category/blog/t/250bpm-blogs/h/http%3A%2F%2Fwww.250bpm.com%2Fblog" nil) ("250bpm.com" . "http://250bpm.com/blog:152") #s(elfeed-entry ("250bpm.com" . "http://250bpm.com/blog:152") "On the Nature of Programming Languages" "http://250bpm.com/blog:152" 1555929646.0 #s(elfeed-ref "14066ba4b76f3efd960512bff42ba5108860ea7a") html nil (dev se unread) "http://250bpm.com/feed/pages/pagename/start/category/blog/t/250bpm-blogs/h/http%3A%2F%2Fwww.250bpm.com%2Fblog" nil) ("250bpm.com" . "http://250bpm.com/blog:151") #s(elfeed-entry ("250bpm.com" . "http://250bpm.com/blog:151") "The Politics of Age (the Young vs. the Old)" "http://250bpm.com/blog:151" 1553409496.0 #s(elfeed-ref "276dd8c73eac1ef64393f95b4c78d4d45bb67436") html nil (dev se unread) "http://250bpm.com/feed/pages/pagename/start/category/blog/t/250bpm-blogs/h/http%3A%2F%2Fwww.250bpm.com%2Fblog" nil) ("250bpm.com" . "http://250bpm.com/blog:150") #s(elfeed-entry ("250bpm.com" . "http://250bpm.com/blog:150") "Muqaata'a by Fahad Himsi (I.)" "http://250bpm.com/blog:150" 1552230033.0 #s(elfeed-ref "897ef0ca7d639573d7fdbfea90f23737e839746a") html nil (dev se unread) "http://250bpm.com/feed/pages/pagename/start/category/blog/t/250bpm-blogs/h/http%3A%2F%2Fwww.250bpm.com%2Fblog" nil) ("250bpm.com" . "http://250bpm.com/blog:149") #s(elfeed-entry ("250bpm.com" . "http://250bpm.com/blog:149") "Programmatic Code Generation: Composability" "http://250bpm.com/blog:149" 1551509749.0 #s(elfeed-ref "319080dfac5b93c2307eb8e115e821ff3e937e79") html nil (dev se unread) "http://250bpm.com/feed/pages/pagename/start/category/blog/t/250bpm-blogs/h/http%3A%2F%2Fwww.250bpm.com%2Fblog" nil) ("250bpm.com" . "http://250bpm.com/blog:148") #s(elfeed-entry ("250bpm.com" . "http://250bpm.com/blog:148") "Lydian song" "http://250bpm.com/blog:148" 1551127347.0 #s(elfeed-ref "10e720adcc174d52e4a1cd039c868ea2d18abee9") html nil (dev se unread) "http://250bpm.com/feed/pages/pagename/start/category/blog/t/250bpm-blogs/h/http%3A%2F%2Fwww.250bpm.com%2Fblog" nil) ("250bpm.com" . "http://250bpm.com/blog:147") #s(elfeed-entry ("250bpm.com" . "http://250bpm.com/blog:147") "Tiles: Report on Programmatic Code Generation" "http://250bpm.com/blog:147" 1550730027.0 #s(elfeed-ref "6945d9907e20b7472d37679ca897c4c23698c0fc") html nil (dev se unread) "http://250bpm.com/feed/pages/pagename/start/category/blog/t/250bpm-blogs/h/http%3A%2F%2Fwww.250bpm.com%2Fblog" nil) ("250bpm.com" . "http://250bpm.com/blog:146") #s(elfeed-entry ("250bpm.com" . "http://250bpm.com/blog:146") "Graceful Shutdown" "http://250bpm.com/blog:146" 1550316412.0 #s(elfeed-ref "7fa04172b53161521c791445ca62947dafe81fd1") html nil (dev se unread) "http://250bpm.com/feed/pages/pagename/start/category/blog/t/250bpm-blogs/h/http%3A%2F%2Fwww.250bpm.com%2Fblog" nil) ("250bpm.com" . "http://250bpm.com/blog:145") #s(elfeed-entry ("250bpm.com" . "http://250bpm.com/blog:145") "Structured Concurrency Cross-language Forum" "http://250bpm.com/blog:145" 1549789809.0 #s(elfeed-ref "07e98e7c56f254217ff136429857ada929c4895f") html nil (dev se unread) "http://250bpm.com/feed/pages/pagename/start/category/blog/t/250bpm-blogs/h/http%3A%2F%2Fwww.250bpm.com%2Fblog" nil) ("250bpm.com" . "http://250bpm.com/blog:144") #s(elfeed-entry ("250bpm.com" . "http://250bpm.com/blog:144") "Confessions of an Abstraction Hater" "http://250bpm.com/blog:144" 1548567553.0 #s(elfeed-ref "0b044fe91fb019280624ad8c00f03cb28449e5ee") html nil (dev se unread) "http://250bpm.com/feed/pages/pagename/start/category/blog/t/250bpm-blogs/h/http%3A%2F%2Fwww.250bpm.com%2Fblog" nil) ("250bpm.com" . "http://250bpm.com/blog:143") #s(elfeed-entry ("250bpm.com" . "http://250bpm.com/blog:143") "Announcement: A talk about structured concurrency at FOSDEM" "http://250bpm.com/blog:143" 1546164190.0 #s(elfeed-ref "ba2e342a6e1d604459c316e738c4812b2b2da780") html nil (dev se unread) "http://250bpm.com/feed/pages/pagename/start/category/blog/t/250bpm-blogs/h/http%3A%2F%2Fwww.250bpm.com%2Fblog" nil) ("250bpm.com" . "http://250bpm.com/blog:142") #s(elfeed-entry ("250bpm.com" . "http://250bpm.com/blog:142") "State Machines and the Strange Case of Mutating API" "http://250bpm.com/blog:142" 1545630218.0 #s(elfeed-ref "d02dc84bc708ac15b4eed707dde8bdfe8567acb8") html nil (dev se unread) "http://250bpm.com/feed/pages/pagename/start/category/blog/t/250bpm-blogs/h/http%3A%2F%2Fwww.250bpm.com%2Fblog" nil) ("250bpm.com" . "http://250bpm.com/blog:141") #s(elfeed-entry ("250bpm.com" . "http://250bpm.com/blog:141") "Equivalence of State Machines and Coroutines" "http://250bpm.com/blog:141" 1545107271.0 #s(elfeed-ref "f04ba5adf7a729799ef4da00f230edce26986d97") html nil (dev se unread) "http://250bpm.com/feed/pages/pagename/start/category/blog/t/250bpm-blogs/h/http%3A%2F%2Fwww.250bpm.com%2Fblog" nil) ("250bpm.com" . "http://250bpm.com/blog:140") #s(elfeed-entry ("250bpm.com" . "http://250bpm.com/blog:140") "On Rigorous Error Handling" "http://250bpm.com/blog:140" 1542445667.0 #s(elfeed-ref "c0cec51430a0e514c49d9000c140d7a04c5f7057") html nil (dev se unread) "http://250bpm.com/feed/pages/pagename/start/category/blog/t/250bpm-blogs/h/http%3A%2F%2Fwww.250bpm.com%2Fblog" nil) ("250bpm.com" . "http://250bpm.com/blog:139") #s(elfeed-entry ("250bpm.com" . "http://250bpm.com/blog:139") "Two Approaches to Structured Concurrency" "http://250bpm.com/blog:139" 1540988025.0 #s(elfeed-ref "f7ff15b83fc6a224b5f5dc69d63ee705ec266394") html nil (dev se unread) "http://250bpm.com/feed/pages/pagename/start/category/blog/t/250bpm-blogs/h/http%3A%2F%2Fwww.250bpm.com%2Fblog" nil) ("250bpm.com" . "http://250bpm.com/blog:138") #s(elfeed-entry ("250bpm.com" . "http://250bpm.com/blog:138") "Unikernels: No Longer an Academic Exercise" "http://250bpm.com/blog:138" 1540294398.0 #s(elfeed-ref "f375877b77d6cef802322984e8e5d5b6490691db") html nil (dev se unread) "http://250bpm.com/feed/pages/pagename/start/category/blog/t/250bpm-blogs/h/http%3A%2F%2Fwww.250bpm.com%2Fblog" nil) ("blog.jessfraz.com" . "https://blog.jessfraz.com/post/network-booted-home-initialized/") #s(elfeed-entry ("blog.jessfraz.com" . "https://blog.jessfraz.com/post/network-booted-home-initialized/") "Network booted, home initialized" "https://blog.jessfraz.com/post/network-booted-home-initialized/" 1579274724.0 #s(elfeed-ref "219d986d750c0a0e4654e309ab5c41333d24d68b") html nil (dev networking unread) "https://blog.jessfraz.com/index.xml" nil) ("blog.jessfraz.com" . "https://blog.jessfraz.com/post/born-in-a-garage/") #s(elfeed-entry ("blog.jessfraz.com" . "https://blog.jessfraz.com/post/born-in-a-garage/") "Born in a Garage" "https://blog.jessfraz.com/post/born-in-a-garage/" 1575292166.0 #s(elfeed-ref "b27108d3f87d0f78f3a0d6854d88841d18fc1786") html nil (dev networking unread) "https://blog.jessfraz.com/index.xml" nil) ("blog.jessfraz.com" . "https://blog.jessfraz.com/post/tales-from-firmware-camp/") #s(elfeed-entry ("blog.jessfraz.com" . "https://blog.jessfraz.com/post/tales-from-firmware-camp/") "Tales from Firmware Camp" "https://blog.jessfraz.com/post/tales-from-firmware-camp/" 1568128166.0 #s(elfeed-ref "7023b80a282522565b63a6a03a1857a8fc852ba4") html nil (dev networking unread) "https://blog.jessfraz.com/index.xml" nil) ("blog.jessfraz.com" . "https://blog.jessfraz.com/post/transactional-memory-and-tech-hype-waves/") #s(elfeed-entry ("blog.jessfraz.com" . "https://blog.jessfraz.com/post/transactional-memory-and-tech-hype-waves/") "Transactional Memory and Tech Hype Waves" "https://blog.jessfraz.com/post/transactional-memory-and-tech-hype-waves/" 1565795366.0 #s(elfeed-ref "3f1388035c5724671aecc388b5df8bcc34e12707") html nil (dev networking unread) "https://blog.jessfraz.com/index.xml" nil) ("blog.jessfraz.com" . "https://blog.jessfraz.com/post/the-business-executives-guide-to-kubernetes/") #s(elfeed-entry ("blog.jessfraz.com" . "https://blog.jessfraz.com/post/the-business-executives-guide-to-kubernetes/") "The Business Executive's Guide to Kubernetes" "https://blog.jessfraz.com/post/the-business-executives-guide-to-kubernetes/" 1563894566.0 #s(elfeed-ref "52ae79f827f0f3780834687bff1054cc7721ca13") html nil (dev networking unread) "https://blog.jessfraz.com/index.xml" nil) ("blog.jessfraz.com" . "https://blog.jessfraz.com/post/linux-observability-with-bpf/") #s(elfeed-entry ("blog.jessfraz.com" . "https://blog.jessfraz.com/post/linux-observability-with-bpf/") "Linux Observability with BPF" "https://blog.jessfraz.com/post/linux-observability-with-bpf/" 1562772324.0 #s(elfeed-ref "5f2cec22f8cbfe3177b60c031dfa621507db160c") html nil (dev networking unread) "https://blog.jessfraz.com/index.xml" nil) ("blog.jessfraz.com" . "https://blog.jessfraz.com/post/corollary-to-the-hard-thing-about-hard-things/") #s(elfeed-entry ("blog.jessfraz.com" . "https://blog.jessfraz.com/post/corollary-to-the-hard-thing-about-hard-things/") "Corollary to the Hard Thing about Hard Things" "https://blog.jessfraz.com/post/corollary-to-the-hard-thing-about-hard-things/" 1557932966.0 #s(elfeed-ref "e3ce171dc7b779f84e07071bfa63475776403f54") html nil (dev networking unread) "https://blog.jessfraz.com/index.xml" nil) ("blog.jessfraz.com" . "https://blog.jessfraz.com/post/why-open-source-firmware-is-important-for-security/") #s(elfeed-entry ("blog.jessfraz.com" . "https://blog.jessfraz.com/post/why-open-source-firmware-is-important-for-security/") "Why open source firmware is important for security" "https://blog.jessfraz.com/post/why-open-source-firmware-is-important-for-security/" 1557328166.0 #s(elfeed-ref "a3dd14567a3619eca923a9133ce5da788b3e9095") html nil (dev networking unread) "https://blog.jessfraz.com/index.xml" nil) ("blog.jessfraz.com" . "https://blog.jessfraz.com/post/challenge-accepted-transposit/") #s(elfeed-entry ("blog.jessfraz.com" . "https://blog.jessfraz.com/post/challenge-accepted-transposit/") "Challenge Accepted: Transposit" "https://blog.jessfraz.com/post/challenge-accepted-transposit/" 1556003366.0 #s(elfeed-ref "69eec1955f782e4b4eb784986937b0d11b01f44b") html nil (dev networking unread) "https://blog.jessfraz.com/index.xml" nil) ("blog.jessfraz.com" . "https://blog.jessfraz.com/post/questions-id-ask-my-cloud-provider/") #s(elfeed-entry ("blog.jessfraz.com" . "https://blog.jessfraz.com/post/questions-id-ask-my-cloud-provider/") "Questions I'd Ask My Cloud Provider" "https://blog.jessfraz.com/post/questions-id-ask-my-cloud-provider/" 1555340966.0 #s(elfeed-ref "a3957707c705bbd5b20033c40fcd06455a91093a") html nil (dev networking unread) "https://blog.jessfraz.com/index.xml" nil) ("blog.jessfraz.com" . "https://blog.jessfraz.com/post/leadership-ci/") #s(elfeed-entry ("blog.jessfraz.com" . "https://blog.jessfraz.com/post/leadership-ci/") "Leadership CI" "https://blog.jessfraz.com/post/leadership-ci/" 1554822566.0 #s(elfeed-ref "4b8f9be0747002ae0fbf1982feda4753e017777d") html nil (dev networking unread) "https://blog.jessfraz.com/index.xml" nil) ("blog.jessfraz.com" . "https://blog.jessfraz.com/post/the-truth-seekers/") #s(elfeed-entry ("blog.jessfraz.com" . "https://blog.jessfraz.com/post/the-truth-seekers/") "The Truth Seekers" "https://blog.jessfraz.com/post/the-truth-seekers/" 1554736166.0 #s(elfeed-ref "6f5bca857b7269ffac3b7f083ffd49436a22992a") html nil (dev networking unread) "https://blog.jessfraz.com/index.xml" nil) ("blog.jessfraz.com" . "https://blog.jessfraz.com/post/thoughts-on-conways-law-and-the-software-stack/") #s(elfeed-entry ("blog.jessfraz.com" . "https://blog.jessfraz.com/post/thoughts-on-conways-law-and-the-software-stack/") "Thoughts on Conway's Law and the software stack" "https://blog.jessfraz.com/post/thoughts-on-conways-law-and-the-software-stack/" 1553526566.0 #s(elfeed-ref "53c5be285583d814719b61cb8eecc75c72c5652b") html nil (dev networking unread) "https://blog.jessfraz.com/index.xml" nil) ("blog.jessfraz.com" . "https://blog.jessfraz.com/post/digging-into-risc-v-and-how-i-learn-new-things/") #s(elfeed-entry ("blog.jessfraz.com" . "https://blog.jessfraz.com/post/digging-into-risc-v-and-how-i-learn-new-things/") "Digging into RISC-V and how I learn new things" "https://blog.jessfraz.com/post/digging-into-risc-v-and-how-i-learn-new-things/" 1553440166.0 #s(elfeed-ref "8d4e1140a141ad788081532b8547939082aa7c43") html nil (dev networking unread) "https://blog.jessfraz.com/index.xml" nil) ("blog.jessfraz.com" . "https://blog.jessfraz.com/post/defining-a-distinguished-engineer/") #s(elfeed-entry ("blog.jessfraz.com" . "https://blog.jessfraz.com/post/defining-a-distinguished-engineer/") "Defining a Distinguished Engineer" "https://blog.jessfraz.com/post/defining-a-distinguished-engineer/" 1553180966.0 #s(elfeed-ref "7ab67142ff949da48d4c8e1c269ba4f65f4a98ad") html nil (dev networking unread) "https://blog.jessfraz.com/index.xml" nil) ("blog.jessfraz.com" . "https://blog.jessfraz.com/post/enigma-unikernels-risc-v-oh-my/") #s(elfeed-entry ("blog.jessfraz.com" . "https://blog.jessfraz.com/post/enigma-unikernels-risc-v-oh-my/") "An Enigma, unikernels booting on RISC-V, a rack encased in liquid. OH MY." "https://blog.jessfraz.com/post/enigma-unikernels-risc-v-oh-my/" 1552836324.0 #s(elfeed-ref "c20defb1b7af683db95109845a47e8e2d2ef477e") html nil (dev networking unread) "https://blog.jessfraz.com/index.xml" nil) ("blog.jessfraz.com" . "https://blog.jessfraz.com/post/trust-and-integrity/") #s(elfeed-entry ("blog.jessfraz.com" . "https://blog.jessfraz.com/post/trust-and-integrity/") "Trust and Integrity" "https://blog.jessfraz.com/post/trust-and-integrity/" 1551488966.0 #s(elfeed-ref "821e0cd5a69b0508d64ac5c49f5d59cfa73dfcdf") html nil (dev networking unread) "https://blog.jessfraz.com/index.xml" nil) ("blog.jessfraz.com" . "https://blog.jessfraz.com/post/government-medicine-capitalism/") #s(elfeed-entry ("blog.jessfraz.com" . "https://blog.jessfraz.com/post/government-medicine-capitalism/") "Government. Medicine. Capitalism?" "https://blog.jessfraz.com/post/government-medicine-capitalism/" 1551316166.0 #s(elfeed-ref "51bcb725bc47a584f20d3eea95d88c3109f8efe4") html nil (dev networking unread) "https://blog.jessfraz.com/index.xml" nil) ("blog.jessfraz.com" . "https://blog.jessfraz.com/post/books/") #s(elfeed-entry ("blog.jessfraz.com" . "https://blog.jessfraz.com/post/books/") "Books I Recommend" "https://blog.jessfraz.com/post/books/" 1551107366.0 #s(elfeed-ref "9c50c59580d255c99540d27f8cc4d84b20fb6fc0") html nil (dev networking unread) "https://blog.jessfraz.com/index.xml" nil) ("blog.jessfraz.com" . "https://blog.jessfraz.com/post/pharmy-tales/") #s(elfeed-entry ("blog.jessfraz.com" . "https://blog.jessfraz.com/post/pharmy-tales/") "From the File Vault: Pharmy Tales" "https://blog.jessfraz.com/post/pharmy-tales/" 1550934566.0 #s(elfeed-ref "dd2ea22c9b1055ade693687f65b4e0ceecd9dda9") html nil (dev networking unread) "https://blog.jessfraz.com/index.xml" nil) ("blog.jessfraz.com" . "https://blog.jessfraz.com/post/reflections-on-sgx/") #s(elfeed-entry ("blog.jessfraz.com" . "https://blog.jessfraz.com/post/reflections-on-sgx/") "Reflections on SGX" "https://blog.jessfraz.com/post/reflections-on-sgx/" 1550596612.0 #s(elfeed-ref "6fa013191636b42055719400e8cefaf529941788") html nil (dev networking unread) "https://blog.jessfraz.com/index.xml" nil) ("blog.jessfraz.com" . "https://blog.jessfraz.com/post/ld_preload/") #s(elfeed-entry ("blog.jessfraz.com" . "https://blog.jessfraz.com/post/ld_preload/") "LD_PRELOAD: The Hero We Need and Deserve" "https://blog.jessfraz.com/post/ld_preload/" 1550416166.0 #s(elfeed-ref "f771d7d204ef242dbc77f0e46386f30547c97f73") html nil (dev networking unread) "https://blog.jessfraz.com/index.xml" nil) ("blog.jessfraz.com" . "https://blog.jessfraz.com/post/new-golden-age-of-building-with-soul/") #s(elfeed-entry ("blog.jessfraz.com" . "https://blog.jessfraz.com/post/new-golden-age-of-building-with-soul/") "The New Golden Age of Building with Soul" "https://blog.jessfraz.com/post/new-golden-age-of-building-with-soul/" 1550070566.0 #s(elfeed-ref "15dbff4492d2c0cdc81b87e2883941a8aaaf807d") html nil (dev networking unread) "https://blog.jessfraz.com/index.xml" nil) ("blog.jessfraz.com" . "https://blog.jessfraz.com/post/the-firmware-rabbit-hole/") #s(elfeed-entry ("blog.jessfraz.com" . "https://blog.jessfraz.com/post/the-firmware-rabbit-hole/") "The Firmware and Hardware Rabbit Hole" "https://blog.jessfraz.com/post/the-firmware-rabbit-hole/" 1550020166.0 #s(elfeed-ref "7e21a875b3a081a0e2f2e094db9ff7883337a90e") html nil (dev networking unread) "https://blog.jessfraz.com/index.xml" nil) ("blog.jessfraz.com" . "https://blog.jessfraz.com/post/secret-design-docs-multi-tenant-orchestrator/") #s(elfeed-entry ("blog.jessfraz.com" . "https://blog.jessfraz.com/post/secret-design-docs-multi-tenant-orchestrator/") "Secret Design Docs: Multi-Tenant Orchestrator" "https://blog.jessfraz.com/post/secret-design-docs-multi-tenant-orchestrator/" 1549984166.0 #s(elfeed-ref "a9b258799cf8251c2621ea23f98cf4e254c0aa9c") html nil (dev networking unread) "https://blog.jessfraz.com/index.xml" nil) ("blog.jessfraz.com" . "https://blog.jessfraz.com/post/for-the-love-of-pipes/") #s(elfeed-entry ("blog.jessfraz.com" . "https://blog.jessfraz.com/post/for-the-love-of-pipes/") "For the Love of Pipes" "https://blog.jessfraz.com/post/for-the-love-of-pipes/" 1548083366.0 #s(elfeed-ref "97f3b0ef9a28ab8e3015c96896cafb3ad062c521") html nil (dev networking unread) "https://blog.jessfraz.com/index.xml" nil) ("blog.jessfraz.com" . "https://blog.jessfraz.com/post/the-life-of-a-github-action/") #s(elfeed-entry ("blog.jessfraz.com" . "https://blog.jessfraz.com/post/the-life-of-a-github-action/") "The Life of a GitHub Action" "https://blog.jessfraz.com/post/the-life-of-a-github-action/" 1547392166.0 #s(elfeed-ref "bc5824f705af93f60e640099eedd3334680a64b6") html nil (dev networking unread) "https://blog.jessfraz.com/index.xml" nil) ("blog.jessfraz.com" . "https://blog.jessfraz.com/post/you-might-not-need-k8s/") #s(elfeed-entry ("blog.jessfraz.com" . "https://blog.jessfraz.com/post/you-might-not-need-k8s/") "You might not need Kubernetes" "https://blog.jessfraz.com/post/you-might-not-need-k8s/" 1541430566.0 #s(elfeed-ref "be32b6a03a4ca88b067af5ff9e8c7acdfb7a9ac3") html nil (dev networking unread) "https://blog.jessfraz.com/index.xml" nil) ("blog.jessfraz.com" . "https://blog.jessfraz.com/post/installing-and-using-wireguard/") #s(elfeed-entry ("blog.jessfraz.com" . "https://blog.jessfraz.com/post/installing-and-using-wireguard/") "Installing and Using Wireguard, obviously with containers" "https://blog.jessfraz.com/post/installing-and-using-wireguard/" 1529003878.0 #s(elfeed-ref "2b5a263fd9012cb4d20537fe01c45d86feb0bae2") html nil (dev networking unread) "https://blog.jessfraz.com/index.xml" nil) ("blog.jessfraz.com" . "https://blog.jessfraz.com/post/talks/") #s(elfeed-entry ("blog.jessfraz.com" . "https://blog.jessfraz.com/post/talks/") "Talks" "https://blog.jessfraz.com/post/talks/" 1528384166.0 #s(elfeed-ref "3bd71f23766c8cce3acdf67e7ecaaeda0a47077b") html nil (dev networking unread) "https://blog.jessfraz.com/index.xml" nil) ("blog.jessfraz.com" . "https://blog.jessfraz.com/post/containers-security-and-echo-chambers/") #s(elfeed-entry ("blog.jessfraz.com" . "https://blog.jessfraz.com/post/containers-security-and-echo-chambers/") "Containers, Security, and Echo Chambers" "https://blog.jessfraz.com/post/containers-security-and-echo-chambers/" 1526843878.0 #s(elfeed-ref "89c3291ab35801bee71218d83b04f120fbda06d2") html nil (dev networking unread) "https://blog.jessfraz.com/index.xml" nil) ("blog.jessfraz.com" . "https://blog.jessfraz.com/post/hard-multi-tenancy-in-kubernetes/") #s(elfeed-entry ("blog.jessfraz.com" . "https://blog.jessfraz.com/post/hard-multi-tenancy-in-kubernetes/") "Hard Multi-Tenancy in Kubernetes" "https://blog.jessfraz.com/post/hard-multi-tenancy-in-kubernetes/" 1526671078.0 #s(elfeed-ref "634271fa0cf1d322a453af98e809ec7201a5315f") html nil (dev networking unread) "https://blog.jessfraz.com/index.xml" nil) ("blog.jessfraz.com" . "https://blog.jessfraz.com/post/building-container-images-securely-on-kubernetes/") #s(elfeed-entry ("blog.jessfraz.com" . "https://blog.jessfraz.com/post/building-container-images-securely-on-kubernetes/") "Building Container Images Securely on Kubernetes" "https://blog.jessfraz.com/post/building-container-images-securely-on-kubernetes/" 1521559524.0 #s(elfeed-ref "a819ae55fdeed19ccbdaf4cc5ba3525999671078") html nil (dev networking unread) "https://blog.jessfraz.com/index.xml" nil) ("blog.jessfraz.com" . "https://blog.jessfraz.com/post/nerd-sniped-by-binfmt_misc/") #s(elfeed-entry ("blog.jessfraz.com" . "https://blog.jessfraz.com/post/nerd-sniped-by-binfmt_misc/") "Nerd Sniped by BINFMT_MISC" "https://blog.jessfraz.com/post/nerd-sniped-by-binfmt_misc/" 1520177124.0 #s(elfeed-ref "deb69dc05d3af6cfa262ade52b3965e0211c27ce") html nil (dev networking unread) "https://blog.jessfraz.com/index.xml" nil) ("blog.jessfraz.com" . "https://blog.jessfraz.com/post/personal-infrastructure/") #s(elfeed-entry ("blog.jessfraz.com" . "https://blog.jessfraz.com/post/personal-infrastructure/") "Personal Infrastructure" "https://blog.jessfraz.com/post/personal-infrastructure/" 1513437924.0 #s(elfeed-ref "747dc37135179f40d83a4df60b090061c44958d9") html nil (dev networking unread) "https://blog.jessfraz.com/index.xml" nil) ("blog.jessfraz.com" . "https://blog.jessfraz.com/post/home-lab-is-the-dopest-lab/") #s(elfeed-entry ("blog.jessfraz.com" . "https://blog.jessfraz.com/post/home-lab-is-the-dopest-lab/") "Home Lab is the Dopest Lab" "https://blog.jessfraz.com/post/home-lab-is-the-dopest-lab/" 1512314724.0 #s(elfeed-ref "47e2d19ba681ba813eba337571923dec85aeebdc") html nil (dev networking unread) "https://blog.jessfraz.com/index.xml" nil) ("blog.jessfraz.com" . "https://blog.jessfraz.com/post/windows-for-linux-nerds/") #s(elfeed-entry ("blog.jessfraz.com" . "https://blog.jessfraz.com/post/windows-for-linux-nerds/") "Windows for Linux Nerds" "https://blog.jessfraz.com/post/windows-for-linux-nerds/" 1504970724.0 #s(elfeed-ref "b79a727cd389d07b5fe32ae08893796755632283") html nil (dev networking unread) "https://blog.jessfraz.com/index.xml" nil) ("blog.jessfraz.com" . "https://blog.jessfraz.com/post/a-rant-on-usable-security/") #s(elfeed-entry ("blog.jessfraz.com" . "https://blog.jessfraz.com/post/a-rant-on-usable-security/") "A Rant on Usable Security" "https://blog.jessfraz.com/post/a-rant-on-usable-security/" 1501168166.0 #s(elfeed-ref "eedec87a520aafa26eb68c6eac2083ad3efe102c") html nil (dev networking unread) "https://blog.jessfraz.com/index.xml" nil) ("blog.jessfraz.com" . "https://blog.jessfraz.com/post/two-objects-not-namespaced-linux-kernel/") #s(elfeed-entry ("blog.jessfraz.com" . "https://blog.jessfraz.com/post/two-objects-not-namespaced-linux-kernel/") "Two Objects not Namespaced by the Linux Kernel" "https://blog.jessfraz.com/post/two-objects-not-namespaced-linux-kernel/" 1493234278.0 #s(elfeed-ref "0652d5099ef9e982ecc87339ccd38b9b2edbead8") html nil (dev networking unread) "https://blog.jessfraz.com/index.xml" nil) ("blog.jessfraz.com" . "https://blog.jessfraz.com/post/containers-zones-jails-vms/") #s(elfeed-entry ("blog.jessfraz.com" . "https://blog.jessfraz.com/post/containers-zones-jails-vms/") "Setting the Record Straight: containers vs. Zones vs. Jails vs. VMs" "https://blog.jessfraz.com/post/containers-zones-jails-vms/" 1490728678.0 #s(elfeed-ref "6144cc52dc5edc4d347ea14b9e2e0b2f96151ff8") html nil (dev networking unread) "https://blog.jessfraz.com/index.xml" nil) ("blog.jessfraz.com" . "https://blog.jessfraz.com/post/ultimate-linux-on-the-desktop/") #s(elfeed-entry ("blog.jessfraz.com" . "https://blog.jessfraz.com/post/ultimate-linux-on-the-desktop/") "Ultimate Linux on the Desktop" "https://blog.jessfraz.com/post/ultimate-linux-on-the-desktop/" 1484579366.0 #s(elfeed-ref "4ff8189cc0fe6cf9556d36d02a023c2a5453b0f6") html nil (dev networking unread) "https://blog.jessfraz.com/index.xml" nil) ("blog.jessfraz.com" . "https://blog.jessfraz.com/post/scripting-your-way-outta-hell/") #s(elfeed-entry ("blog.jessfraz.com" . "https://blog.jessfraz.com/post/scripting-your-way-outta-hell/") "Scripting Your Way Outta Hell" "https://blog.jessfraz.com/post/scripting-your-way-outta-hell/" 1475248166.0 #s(elfeed-ref "8e7341200d89dcf12aa8f56d6e3b5898ddb821cd") html nil (dev networking unread) "https://blog.jessfraz.com/index.xml" nil) ("blog.jessfraz.com" . "https://blog.jessfraz.com/post/blurred-lines/") #s(elfeed-entry ("blog.jessfraz.com" . "https://blog.jessfraz.com/post/blurred-lines/") "Blurred Lines" "https://blog.jessfraz.com/post/blurred-lines/" 1474124966.0 #s(elfeed-ref "11134bbd395c017e088a3e24e0ef46fcef15a718") html nil (dev networking unread) "https://blog.jessfraz.com/index.xml" nil) ("blog.jessfraz.com" . "https://blog.jessfraz.com/post/the-day-i-leave-the-tech-industry/") #s(elfeed-entry ("blog.jessfraz.com" . "https://blog.jessfraz.com/post/the-day-i-leave-the-tech-industry/") "The Day I Leave the Tech Industry" "https://blog.jessfraz.com/post/the-day-i-leave-the-tech-industry/" 1471619366.0 #s(elfeed-ref "837519d3cdd74ad12a73d288343860fe0f9dc4b9") html nil (dev networking unread) "https://blog.jessfraz.com/index.xml" nil) ("blog.jessfraz.com" . "https://blog.jessfraz.com/post/analyzing-github-pull-request-data-with-big-query/") #s(elfeed-entry ("blog.jessfraz.com" . "https://blog.jessfraz.com/post/analyzing-github-pull-request-data-with-big-query/") "Analyzing GitHub Pull Request Data with BigQuery" "https://blog.jessfraz.com/post/analyzing-github-pull-request-data-with-big-query/" 1470582566.0 #s(elfeed-ref "a4c9de5b11db9810fd129634671a20b7e93d79cc") html nil (dev networking unread) "https://blog.jessfraz.com/index.xml" nil) ("blog.jessfraz.com" . "https://blog.jessfraz.com/post/spontaneous-combustion/") #s(elfeed-entry ("blog.jessfraz.com" . "https://blog.jessfraz.com/post/spontaneous-combustion/") "Spontaneous Combustion" "https://blog.jessfraz.com/post/spontaneous-combustion/" 1470248927.0 #s(elfeed-ref "d90b18664f5a5d2dc6d1c313d8e898126a273892") html nil (dev networking unread) "https://blog.jessfraz.com/index.xml" nil) ("blog.jessfraz.com" . "https://blog.jessfraz.com/post/top-10-favorite-ldflags/") #s(elfeed-entry ("blog.jessfraz.com" . "https://blog.jessfraz.com/post/top-10-favorite-ldflags/") "10 LDFLAGS I Love" "https://blog.jessfraz.com/post/top-10-favorite-ldflags/" 1468872014.0 #s(elfeed-ref "8066b944484b23c110bd1e9a9d06776d26c3e4bd") html nil (dev networking unread) "https://blog.jessfraz.com/index.xml" nil) ("blog.jessfraz.com" . "https://blog.jessfraz.com/post/the-art-of-closing/") #s(elfeed-entry ("blog.jessfraz.com" . "https://blog.jessfraz.com/post/the-art-of-closing/") "The Art of Closing" "https://blog.jessfraz.com/post/the-art-of-closing/" 1465052966.0 #s(elfeed-ref "e6e2b7ce01178ab5d24d05a83aea01393f4c590a") html nil (dev networking unread) "https://blog.jessfraz.com/index.xml" nil) ("blog.jessfraz.com" . "https://blog.jessfraz.com/post/getting-towards-real-sandbox-containers/") #s(elfeed-entry ("blog.jessfraz.com" . "https://blog.jessfraz.com/post/getting-towards-real-sandbox-containers/") "Getting Towards Real Sandbox Containers" "https://blog.jessfraz.com/post/getting-towards-real-sandbox-containers/" 1462130278.0 #s(elfeed-ref "b5abfa11919b5a2f415f625787b69d02e1c27efd") html nil (dev networking unread) "https://blog.jessfraz.com/index.xml" nil) ("blog.jessfraz.com" . "https://blog.jessfraz.com/post/the-brutally-honest-guide-to-docker-graphdrivers/") #s(elfeed-entry ("blog.jessfraz.com" . "https://blog.jessfraz.com/post/the-brutally-honest-guide-to-docker-graphdrivers/") "The Brutally Honest Guide to Docker Graphdrivers" "https://blog.jessfraz.com/post/the-brutally-honest-guide-to-docker-graphdrivers/" 1459622867.0 #s(elfeed-ref "afb90170f87d4c4f8e8891fd7ae547f2fbd14375") html nil (dev networking unread) "https://blog.jessfraz.com/index.xml" nil) ("blog.jessfraz.com" . "https://blog.jessfraz.com/post/ips-for-all-the-things/") #s(elfeed-entry ("blog.jessfraz.com" . "https://blog.jessfraz.com/post/ips-for-all-the-things/") "IPs for all the Things" "https://blog.jessfraz.com/post/ips-for-all-the-things/" 1454011214.0 #s(elfeed-ref "0bf6c07fce177a5840cf2f5daa542f8a495dc8b8") html nil (dev networking unread) "https://blog.jessfraz.com/index.xml" nil) ("blog.jessfraz.com" . "https://blog.jessfraz.com/post/runc-containers-on-the-desktop/") #s(elfeed-entry ("blog.jessfraz.com" . "https://blog.jessfraz.com/post/runc-containers-on-the-desktop/") "Runc Containers on the Desktop" "https://blog.jessfraz.com/post/runc-containers-on-the-desktop/" 1453169834.0 #s(elfeed-ref "3cc5cad01ec110bf9391c032056411c3f1e36788") html nil (dev networking unread) "https://blog.jessfraz.com/index.xml" nil) ("blog.jessfraz.com" . "https://blog.jessfraz.com/post/how-to-use-new-docker-seccomp-profiles/") #s(elfeed-entry ("blog.jessfraz.com" . "https://blog.jessfraz.com/post/how-to-use-new-docker-seccomp-profiles/") "How to use the new Docker Seccomp profiles" "https://blog.jessfraz.com/post/how-to-use-new-docker-seccomp-profiles/" 1451949667.0 #s(elfeed-ref "a651a21d1b26d50f92fa90f00e3b9a4f27b34ae3") html nil (dev networking unread) "https://blog.jessfraz.com/index.xml" nil) ("blog.jessfraz.com" . "https://blog.jessfraz.com/post/tor-socks-proxy-and-privoxy-containers/") #s(elfeed-entry ("blog.jessfraz.com" . "https://blog.jessfraz.com/post/tor-socks-proxy-and-privoxy-containers/") "Tor Socks Proxy and Privoxy Containers" "https://blog.jessfraz.com/post/tor-socks-proxy-and-privoxy-containers/" 1442083667.0 #s(elfeed-ref "dfe85dd3131ea20a9048bb97c62881596e91ddf3") html nil (dev networking unread) "https://blog.jessfraz.com/index.xml" nil) ("blog.jessfraz.com" . "https://blog.jessfraz.com/post/running-a-tor-relay-with-docker/") #s(elfeed-entry ("blog.jessfraz.com" . "https://blog.jessfraz.com/post/running-a-tor-relay-with-docker/") "Running a Tor relay with Docker" "https://blog.jessfraz.com/post/running-a-tor-relay-with-docker/" 1440345721.0 #s(elfeed-ref "0b6a551129968477b6c1360fbce6ee81a175c0d4") html nil (dev networking unread) "https://blog.jessfraz.com/index.xml" nil) ("blog.jessfraz.com" . "https://blog.jessfraz.com/post/this-industry-is-fucked/") #s(elfeed-entry ("blog.jessfraz.com" . "https://blog.jessfraz.com/post/this-industry-is-fucked/") "This Industry is Fucked" "https://blog.jessfraz.com/post/this-industry-is-fucked/" 1436123686.0 #s(elfeed-ref "020b2d582ff8185a66cc2f9c66f9bcf5e5871a0b") html nil (dev networking unread) "https://blog.jessfraz.com/index.xml" nil) ("blog.jessfraz.com" . "https://blog.jessfraz.com/post/r-containers-for-data-science/") #s(elfeed-entry ("blog.jessfraz.com" . "https://blog.jessfraz.com/post/r-containers-for-data-science/") "Using an R Container for Analytical Models" "https://blog.jessfraz.com/post/r-containers-for-data-science/" 1435677924.0 #s(elfeed-ref "60ceeb59b59d21db0730f7c7d3127dc2569af39f") html nil (dev networking unread) "https://blog.jessfraz.com/index.xml" nil) ("blog.jessfraz.com" . "https://blog.jessfraz.com/post/routing-traffic-through-tor-docker-container/") #s(elfeed-entry ("blog.jessfraz.com" . "https://blog.jessfraz.com/post/routing-traffic-through-tor-docker-container/") "How to Route Traffic through a Tor Docker container" "https://blog.jessfraz.com/post/routing-traffic-through-tor-docker-container/" 1434843601.0 #s(elfeed-ref "9f75d314966280d612f8e98756f5feaf5ac7bc37") html nil (dev networking unread) "https://blog.jessfraz.com/index.xml" nil) ("blog.jessfraz.com" . "https://blog.jessfraz.com/post/dogfooding-docker-to-test-docker/") #s(elfeed-entry ("blog.jessfraz.com" . "https://blog.jessfraz.com/post/dogfooding-docker-to-test-docker/") "Tales of a Part-time Sysadmin: Dogfooding Docker to test Docker" "https://blog.jessfraz.com/post/dogfooding-docker-to-test-docker/" 1433639430.0 #s(elfeed-ref "d73cc6071e925e42c1ddbeffeacae5a80ce924bc") html nil (dev networking unread) "https://blog.jessfraz.com/index.xml" nil) ("blog.jessfraz.com" . "https://blog.jessfraz.com/post/docker-containers-on-the-desktop/") #s(elfeed-entry ("blog.jessfraz.com" . "https://blog.jessfraz.com/post/docker-containers-on-the-desktop/") "Docker Containers on the Desktop" "https://blog.jessfraz.com/post/docker-containers-on-the-desktop/" 1424539012.0 #s(elfeed-ref "9d495e40dd0fff8e6baa9d01808d2a916c7b30a0") html nil (dev networking unread) "https://blog.jessfraz.com/index.xml" nil) ("blog.jessfraz.com" . "https://blog.jessfraz.com/post/linux-on-mac/") #s(elfeed-entry ("blog.jessfraz.com" . "https://blog.jessfraz.com/post/linux-on-mac/") "Linux or Death (aka How to install Linux on a Mac)" "https://blog.jessfraz.com/post/linux-on-mac/" 1417108612.0 #s(elfeed-ref "8573ea28d28e781262358214ae11549aead62f6f") html nil (dev networking unread) "https://blog.jessfraz.com/index.xml" nil) ("blog.jessfraz.com" . "https://blog.jessfraz.com/post/how-to-make-foursquare-your-bitch/") #s(elfeed-entry ("blog.jessfraz.com" . "https://blog.jessfraz.com/post/how-to-make-foursquare-your-bitch/") "How to Make Foursquare your Bitch" "https://blog.jessfraz.com/post/how-to-make-foursquare-your-bitch/" 1322759812.0 #s(elfeed-ref "11dc618672d38acf5d94cd65467bfc4b228a28de") html nil (dev networking unread) "https://blog.jessfraz.com/index.xml" nil) ("blog.jessfraz.com" . "https://blog.jessfraz.com/post/what-would-2pac-do/") #s(elfeed-entry ("blog.jessfraz.com" . "https://blog.jessfraz.com/post/what-would-2pac-do/") "What would Tupac do?" "https://blog.jessfraz.com/post/what-would-2pac-do/" 1322673412.0 #s(elfeed-ref "332904cdd856b04fa577ece5d7bf538371171ffa") html nil (dev networking unread) "https://blog.jessfraz.com/index.xml" nil) ("blog.cleancoder.com" . "http://blog.cleancoder.com/uncle-bob/2019/11/08/OpenLetterLinuxFoundation") #s(elfeed-entry ("blog.cleancoder.com" . "http://blog.cleancoder.com/uncle-bob/2019/11/08/OpenLetterLinuxFoundation") "Open Letter to the Linux Foundation" "http://blog.cleancoder.com/uncle-bob/2019/11/08/OpenLetterLinuxFoundation.html" 1573171200.0 #s(elfeed-ref "073ca5e4f38660e9a22ba1f7da11dd3f6b20472e") html nil (dev se unread) "http://blog.cleancoder.com/atom.xml" nil) ("blog.cleancoder.com" . "http://blog.cleancoder.com/uncle-bob/2019/11/03/WhatTheyThoughtOfUs") #s(elfeed-entry ("blog.cleancoder.com" . "http://blog.cleancoder.com/uncle-bob/2019/11/03/WhatTheyThoughtOfUs") "What They Thought of Programmers." "http://blog.cleancoder.com/uncle-bob/2019/11/03/WhatTheyThoughtOfUs.html" 1572739200.0 #s(elfeed-ref "9bbcedfd8f12e8122b96db567213593cdcaedabc") html nil (dev se unread) "http://blog.cleancoder.com/atom.xml" nil) ("blog.cleancoder.com" . "http://blog.cleancoder.com/uncle-bob/2019/10/31/Circulatory") #s(elfeed-entry ("blog.cleancoder.com" . "http://blog.cleancoder.com/uncle-bob/2019/10/31/Circulatory") "Circulatory" "http://blog.cleancoder.com/uncle-bob/2019/10/31/Circulatory.html" 1572480000.0 #s(elfeed-ref "397a465d4104f8d253ca57c0f8e34e08051e683a") html nil (dev se unread) "http://blog.cleancoder.com/atom.xml" nil) ("blog.cleancoder.com" . "http://blog.cleancoder.com/uncle-bob/2019/08/22/WhyClojure") #s(elfeed-entry ("blog.cleancoder.com" . "http://blog.cleancoder.com/uncle-bob/2019/08/22/WhyClojure") "Why Clojure?" "http://blog.cleancoder.com/uncle-bob/2019/08/22/WhyClojure.html" 1566432000.0 #s(elfeed-ref "1093e2a5e03e75713ac9e33b4d47c4f9e13c93e4") html nil (dev se unread) "http://blog.cleancoder.com/atom.xml" nil) ("blog.cleancoder.com" . "http://blog.cleancoder.com/uncle-bob/2019/07/22/WhyWontIt") #s(elfeed-entry ("blog.cleancoder.com" . "http://blog.cleancoder.com/uncle-bob/2019/07/22/WhyWontIt") "Why won't it..." "http://blog.cleancoder.com/uncle-bob/2019/07/22/WhyWontIt.html" 1563753600.0 #s(elfeed-ref "853d6616e204e52a8a700d50987bacb17e9bc606") html nil (dev se unread) "http://blog.cleancoder.com/atom.xml" nil) ("blog.cleancoder.com" . "http://blog.cleancoder.com/uncle-bob/2019/06/16/ObjectsAndDataStructures") #s(elfeed-entry ("blog.cleancoder.com" . "http://blog.cleancoder.com/uncle-bob/2019/06/16/ObjectsAndDataStructures") "Classes vs. Data Structures" "http://blog.cleancoder.com/uncle-bob/2019/06/16/ObjectsAndDataStructures.html" 1560643200.0 #s(elfeed-ref "3100b21ca5fc2d3869fcd19b2f36d2508ddedd6d") html nil (dev se unread) "http://blog.cleancoder.com/atom.xml" nil) ("blog.cleancoder.com" . "http://blog.cleancoder.com/uncle-bob/2019/06/08/TestsAndTypes") #s(elfeed-entry ("blog.cleancoder.com" . "http://blog.cleancoder.com/uncle-bob/2019/06/08/TestsAndTypes") "Types and Tests" "http://blog.cleancoder.com/uncle-bob/2019/06/08/TestsAndTypes.html" 1559952000.0 #s(elfeed-ref "076cb829e9852bba15f15844ec1338d6a5983cbc") html nil (dev se unread) "http://blog.cleancoder.com/atom.xml" nil) ("blog.cleancoder.com" . "http://blog.cleancoder.com/uncle-bob/2019/05/18/737-Max-8") #s(elfeed-entry ("blog.cleancoder.com" . "http://blog.cleancoder.com/uncle-bob/2019/05/18/737-Max-8") "737 Max 8" "http://blog.cleancoder.com/uncle-bob/2019/05/18/737-Max-8.html" 1558137600.0 #s(elfeed-ref "ee2960ec77a7d7afce09b614f1f799035d59f800") html nil (dev se unread) "http://blog.cleancoder.com/atom.xml" nil) ("blog.cleancoder.com" . "http://blog.cleancoder.com/uncle-bob/2018/12/17/FPvsOO-List-processing") #s(elfeed-entry ("blog.cleancoder.com" . "http://blog.cleancoder.com/uncle-bob/2018/12/17/FPvsOO-List-processing") "FP vs. OO List Processing" "http://blog.cleancoder.com/uncle-bob/2018/12/17/FPvsOO-List-processing.html" 1545004800.0 #s(elfeed-ref "4af7b8b05762c6aa61595e6a9fec84498df3e0c7") html nil (dev se unread) "http://blog.cleancoder.com/atom.xml" nil) ("blog.cleancoder.com" . "http://blog.cleancoder.com/uncle-bob/2018/12/16/unoffended") #s(elfeed-entry ("blog.cleancoder.com" . "http://blog.cleancoder.com/uncle-bob/2018/12/16/unoffended") "We, The Unoffended" "http://blog.cleancoder.com/uncle-bob/2018/12/16/unoffended.html" 1544918400.0 #s(elfeed-ref "6cc74d5067d1dd45a8c1d63c70f25ed2d4f5413c") html nil (dev se unread) "http://blog.cleancoder.com/atom.xml" nil) ("blog.cleancoder.com" . "http://blog.cleancoder.com/uncle-bob/2018/12/14/SJWJS") #s(elfeed-entry ("blog.cleancoder.com" . "http://blog.cleancoder.com/uncle-bob/2018/12/14/SJWJS") "SJWJS" "http://blog.cleancoder.com/uncle-bob/2018/12/14/SJWJS.html" 1544745600.0 #s(elfeed-ref "e1260a534ab8a437a07ca647fe1bde4b5d63d4e5") html nil (dev se unread) "http://blog.cleancoder.com/atom.xml" nil) ("blog.cleancoder.com" . "http://blog.cleancoder.com/uncle-bob/2018/08/28/CraftsmanshipMovement") #s(elfeed-entry ("blog.cleancoder.com" . "http://blog.cleancoder.com/uncle-bob/2018/08/28/CraftsmanshipMovement") "The Tragedy of Craftsmanship." "http://blog.cleancoder.com/uncle-bob/2018/08/28/CraftsmanshipMovement.html" 1535414400.0 #s(elfeed-ref "357b14036c2b9145e03959f394c40cf66eefd721") html nil (dev se unread) "http://blog.cleancoder.com/atom.xml" nil) ("blog.cleancoder.com" . "http://blog.cleancoder.com/uncle-bob/2018/08/13/TooClean") #s(elfeed-entry ("blog.cleancoder.com" . "http://blog.cleancoder.com/uncle-bob/2018/08/13/TooClean") "Too Clean?" "http://blog.cleancoder.com/uncle-bob/2018/08/13/TooClean.html" 1534118400.0 #s(elfeed-ref "76ce8bae31b6a7b77556367d2476075ac4896376") html nil (dev se unread) "http://blog.cleancoder.com/atom.xml" nil) ("blog.cleancoder.com" . "http://blog.cleancoder.com/uncle-bob/2018/06/21/IntegersAndEstimates") #s(elfeed-entry ("blog.cleancoder.com" . "http://blog.cleancoder.com/uncle-bob/2018/06/21/IntegersAndEstimates") "Integers and Estimates" "http://blog.cleancoder.com/uncle-bob/2018/06/21/IntegersAndEstimates.html" 1529539200.0 #s(elfeed-ref "22c79be125201c6f6dd65b9c88f2d687ef1f5cd1") html nil (dev se unread) "http://blog.cleancoder.com/atom.xml" nil) ("blog.cleancoder.com" . "http://blog.cleancoder.com/uncle-bob/2018/06/06/PickledState") #s(elfeed-entry ("blog.cleancoder.com" . "http://blog.cleancoder.com/uncle-bob/2018/06/06/PickledState") "Pickled State" "http://blog.cleancoder.com/uncle-bob/2018/06/06/PickledState.html" 1528243200.0 #s(elfeed-ref "a5bdf0159ddd4726a99adb7737981085f82966a4") html nil (dev se unread) "http://blog.cleancoder.com/atom.xml" nil) ("blog.cleancoder.com" . "http://blog.cleancoder.com/uncle-bob/2018/05/02/Craftsman-Craftswoman-Craftsperson") #s(elfeed-entry ("blog.cleancoder.com" . "http://blog.cleancoder.com/uncle-bob/2018/05/02/Craftsman-Craftswoman-Craftsperson") "Craftsman, Craftswoman, Craftsperson" "http://blog.cleancoder.com/uncle-bob/2018/05/02/Craftsman-Craftswoman-Craftsperson.html" 1525219200.0 #s(elfeed-ref "8bc1859397192d038a4aa06795fcc187ce4096e8") html nil (dev se unread) "http://blog.cleancoder.com/atom.xml" nil) ("blog.cleancoder.com" . "http://blog.cleancoder.com/uncle-bob/2018/04/13/FPvsOO") #s(elfeed-entry ("blog.cleancoder.com" . "http://blog.cleancoder.com/uncle-bob/2018/04/13/FPvsOO") "FP vs. OO" "http://blog.cleancoder.com/uncle-bob/2018/04/13/FPvsOO.html" 1523577600.0 #s(elfeed-ref "22bc1765a01d3c06e9cc0b5df3dfb70a176fcea2") html nil (dev se unread) "http://blog.cleancoder.com/atom.xml" nil) ("blog.cleancoder.com" . "http://blog.cleancoder.com/uncle-bob/2018/04/02/InTheLarge") #s(elfeed-entry ("blog.cleancoder.com" . "http://blog.cleancoder.com/uncle-bob/2018/04/02/InTheLarge") "In The Large" "http://blog.cleancoder.com/uncle-bob/2018/04/02/InTheLarge.html" 1522627200.0 #s(elfeed-ref "2eedd5190364774f5a9f0de011e3ff70b826532f") html nil (dev se unread) "http://blog.cleancoder.com/atom.xml" nil) ("blog.cleancoder.com" . "http://blog.cleancoder.com/uncle-bob/2018/03/29/WeProgrammers") #s(elfeed-entry ("blog.cleancoder.com" . "http://blog.cleancoder.com/uncle-bob/2018/03/29/WeProgrammers") "<i>We Programmers</i>" "http://blog.cleancoder.com/uncle-bob/2018/03/29/WeProgrammers.html" 1522281600.0 #s(elfeed-ref "7bf8cbfd4a4bb74ccbc0ce90b4364b3041c4df13") html nil (dev se unread) "http://blog.cleancoder.com/atom.xml" nil) ("blog.cleancoder.com" . "http://blog.cleancoder.com/uncle-bob/2018/02/25/UncleBobFlyIn") #s(elfeed-entry ("blog.cleancoder.com" . "http://blog.cleancoder.com/uncle-bob/2018/02/25/UncleBobFlyIn") "Uncle Bob Fly-In.<br><font size=\"3\">Have I got a deal for you!</font>" "http://blog.cleancoder.com/uncle-bob/2018/02/25/UncleBobFlyIn.html" 1519516800.0 #s(elfeed-ref "836b6403c55833c7f89aa01d2a2423e350fc865e") html nil (dev se unread) "http://blog.cleancoder.com/atom.xml" nil) ("www.gregcons.com" . "http://www.gregcons.com/KateBlog/PermaLink.aspx?guid=d52b489d-f022-498f-a790-23314fbf7648") #s(elfeed-entry ("www.gregcons.com" . "http://www.gregcons.com/KateBlog/PermaLink.aspx?guid=d52b489d-f022-498f-a790-23314fbf7648") "Dealing with Disaster" "http://www.gregcons.com/KateBlog/DealingWithDisaster.aspx" 1579460279.0 #s(elfeed-ref "e5e148494bd6b9cf2d8d0c12f6e42496ab7565a8") html nil (C dev unread) "http://www.gregcons.com/KateBlog/SyndicationService.asmx/GetRss" (:authors ((:name "Kate Gregory")) :categories ("Consulting Life" "Speaking" "Travel"))) ("www.gregcons.com" . "http://www.gregcons.com/KateBlog/PermaLink.aspx?guid=36437e5e-52fa-4b00-9400-6218e508bdee") #s(elfeed-entry ("www.gregcons.com" . "http://www.gregcons.com/KateBlog/PermaLink.aspx?guid=36437e5e-52fa-4b00-9400-6218e508bdee") "My 2020 Speaking" "http://www.gregcons.com/KateBlog/My2020Speaking.aspx" 1578507946.0 #s(elfeed-ref "c89fb2c248004fe5b7ec043bdcdc024328d06556") html nil (C dev unread) "http://www.gregcons.com/KateBlog/SyndicationService.asmx/GetRss" (:authors ((:name "Kate Gregory")) :categories ("C++" "Consulting Life" "Speaking" "Travel"))) ("www.gregcons.com" . "http://www.gregcons.com/KateBlog/PermaLink.aspx?guid=4ad70427-2c2d-4290-89f4-2a0ea2e87111") #s(elfeed-entry ("www.gregcons.com" . "http://www.gregcons.com/KateBlog/PermaLink.aspx?guid=4ad70427-2c2d-4290-89f4-2a0ea2e87111") "A new Pluralsight course is live: C++ 17: Beyond the Basics" "http://www.gregcons.com/KateBlog/ANewPluralsightCourseIsLiveC17BeyondTheBasics.aspx" 1574954523.0 #s(elfeed-ref "57a9b1ae3f28c0d87121c6f87374b533a4f7adac") html nil (C dev unread) "http://www.gregcons.com/KateBlog/SyndicationService.asmx/GetRss" (:authors ((:name "Kate Gregory")) :categories ("C++" "Seen and Recommended"))) ("www.gregcons.com" . "http://www.gregcons.com/KateBlog/PermaLink.aspx?guid=27832300-fca9-47a9-9e12-db72a33062ea") #s(elfeed-entry ("www.gregcons.com" . "http://www.gregcons.com/KateBlog/PermaLink.aspx?guid=27832300-fca9-47a9-9e12-db72a33062ea") "Another jam-packed CppCon" "http://www.gregcons.com/KateBlog/AnotherJampackedCppCon.aspx" 1564099329.0 #s(elfeed-ref "c78b397678647cdec6326be3903b5f643f42cb6e") html nil (C dev unread) "http://www.gregcons.com/KateBlog/SyndicationService.asmx/GetRss" (:authors ((:name "Kate Gregory")) :categories ("C++" "Seen and Recommended" "Travel"))) ("www.gregcons.com" . "http://www.gregcons.com/KateBlog/PermaLink.aspx?guid=d189f5d7-48c3-435f-ac7c-f7a56819fa7c") #s(elfeed-entry ("www.gregcons.com" . "http://www.gregcons.com/KateBlog/PermaLink.aspx?guid=d189f5d7-48c3-435f-ac7c-f7a56819fa7c") "It was 50 years ago today..." "http://www.gregcons.com/KateBlog/ItWas50YearsAgoToday.aspx" 1563708116.0 #s(elfeed-ref "8b6da6650ca343a4f9a602c197ecca6ee43c4a17") html nil (C dev unread) "http://www.gregcons.com/KateBlog/SyndicationService.asmx/GetRss" (:authors ((:name "Kate Gregory")) :categories ("Consulting Life" "Travel"))) ("www.gregcons.com" . "http://www.gregcons.com/KateBlog/PermaLink.aspx?guid=d257b09e-847b-4bc8-bfdc-1e59dfeb7e30") #s(elfeed-entry ("www.gregcons.com" . "http://www.gregcons.com/KateBlog/PermaLink.aspx?guid=d257b09e-847b-4bc8-bfdc-1e59dfeb7e30") "Happy one-of-our-birthdays, #include<C++>!" "http://www.gregcons.com/KateBlog/HappyOneofourbirthdaysInclude.aspx" 1563101186.0 #s(elfeed-ref "cb96957510f879058746577df0406d27fbf362a9") html nil (C dev unread) "http://www.gregcons.com/KateBlog/SyndicationService.asmx/GetRss" (:authors ((:name "Kate Gregory")) :categories ("C++" "Seen and Recommended" "Speaking"))) ("www.gregcons.com" . "http://www.gregcons.com/KateBlog/PermaLink.aspx?guid=5cc89a5d-703a-4f83-ab0b-ecc13419d4ad") #s(elfeed-entry ("www.gregcons.com" . "http://www.gregcons.com/KateBlog/PermaLink.aspx?guid=5cc89a5d-703a-4f83-ab0b-ecc13419d4ad") "Another Pluralsight course is live" "http://www.gregcons.com/KateBlog/AnotherPluralsightCourseIsLive.aspx" 1561729172.0 #s(elfeed-ref "e485f61f200dc1b80b985b062b016d263f0faf01") html nil (C dev unread) "http://www.gregcons.com/KateBlog/SyndicationService.asmx/GetRss" (:authors ((:name "Kate Gregory")) :categories ("C++" "Consulting Life" "Seen and Recommended" "Visual Studio 2019"))) ("www.gregcons.com" . "http://www.gregcons.com/KateBlog/PermaLink.aspx?guid=99f1609a-cab5-47d5-8000-2ca90a64f24a") #s(elfeed-entry ("www.gregcons.com" . "http://www.gregcons.com/KateBlog/PermaLink.aspx?guid=99f1609a-cab5-47d5-8000-2ca90a64f24a") "ACCU Trip report" "http://www.gregcons.com/KateBlog/ACCUTripReport.aspx" 1557140257.0 #s(elfeed-ref "f681f751486fe822e47365c55bde58b228db1544") html nil (C dev unread) "http://www.gregcons.com/KateBlog/SyndicationService.asmx/GetRss" (:authors ((:name "Kate Gregory")) :categories ("C++" "Consulting Life" "Seen and Recommended" "Speaking" "Travel"))) ("www.gregcons.com" . "http://www.gregcons.com/KateBlog/PermaLink.aspx?guid=7ac88a36-3abf-4128-b2dd-163b3c79703a") #s(elfeed-entry ("www.gregcons.com" . "http://www.gregcons.com/KateBlog/PermaLink.aspx?guid=7ac88a36-3abf-4128-b2dd-163b3c79703a") "Visual Studio 2019 is launched - and so is my course on it!" "http://www.gregcons.com/KateBlog/VisualStudio2019IsLaunchedAndSoIsMyCourseOnIt.aspx" 1554227794.0 #s(elfeed-ref "d5ee378e773cd442323e4d55a129f90e7ae8a06e") html nil (C dev unread) "http://www.gregcons.com/KateBlog/SyndicationService.asmx/GetRss" (:authors ((:name "Kate Gregory")) :categories ("Seen and Recommended" "Visual Studio 2019"))) ("www.gregcons.com" . "http://www.gregcons.com/KateBlog/PermaLink.aspx?guid=fbefbaee-e214-4a48-991d-7f9e089cc6ad") #s(elfeed-entry ("www.gregcons.com" . "http://www.gregcons.com/KateBlog/PermaLink.aspx?guid=fbefbaee-e214-4a48-991d-7f9e089cc6ad") "Want me to speak at your event?" "http://www.gregcons.com/KateBlog/WantMeToSpeakAtYourEvent.aspx" 1550850115.0 #s(elfeed-ref "e9fd23c6c64e5a50ae06c035ef561e889136b0db") html nil (C dev unread) "http://www.gregcons.com/KateBlog/SyndicationService.asmx/GetRss" (:authors ((:name "Kate Gregory")) :categories ("Consulting Life" "Speaking"))) ("fabiensanglard.net" . "http://fabiensanglard.net/another_world_polygons_SNES/index.html") #s(elfeed-entry ("fabiensanglard.net" . "http://fabiensanglard.net/another_world_polygons_SNES/index.html") "The Polygons of Another World: SNES" "http://fabiensanglard.net/another_world_polygons_SNES/index.html" 1579392000.0 #s(elfeed-ref "b9c95419158d7d238af5c435409eb0cfb2f56e8e") html nil (dev se unread) "http://fabiensanglard.net/rss.xml" nil) ("fabiensanglard.net" . "http://fabiensanglard.net/another_world_polygons_Genesis/index.html") #s(elfeed-entry ("fabiensanglard.net" . "http://fabiensanglard.net/another_world_polygons_Genesis/index.html") "The Polygons of Another World: Genesis" "http://fabiensanglard.net/another_world_polygons_Genesis/index.html" 1578182400.0 #s(elfeed-ref "3ea6d1becd2d8f44b2fe9fd617256ec29a01e674") html nil (dev se unread) "http://fabiensanglard.net/rss.xml" nil) ("fabiensanglard.net" . "http://fabiensanglard.net/another_world_polygons_PC_DOS/index.html") #s(elfeed-entry ("fabiensanglard.net" . "http://fabiensanglard.net/another_world_polygons_PC_DOS/index.html") "The Polygons of Another World: PC DOC" "http://fabiensanglard.net/another_world_polygons_PC_DOS/index.html" 1578096000.0 #s(elfeed-ref "34fa5b2d80e8a87fcc39ade3900e83e4b7ace478") html nil (dev se unread) "http://fabiensanglard.net/rss.xml" nil) ("fabiensanglard.net" . "http://fabiensanglard.net/another_world_polygons_atariST/index.html") #s(elfeed-entry ("fabiensanglard.net" . "http://fabiensanglard.net/another_world_polygons_atariST/index.html") "The Polygons of Another World: Atari ST" "http://fabiensanglard.net/another_world_polygons_atariST/index.html" 1578009600.0 #s(elfeed-ref "7ddbc25e269e37b683cfd21c1928d9b7563b8891") html nil (dev se unread) "http://fabiensanglard.net/rss.xml" nil) ("fabiensanglard.net" . "http://fabiensanglard.net/another_world_polygons_amiga500/index.html") #s(elfeed-entry ("fabiensanglard.net" . "http://fabiensanglard.net/another_world_polygons_amiga500/index.html") "The Polygons of Another World: Amiga" "http://fabiensanglard.net/another_world_polygons_amiga500/index.html" 1577923200.0 #s(elfeed-ref "d432f7a991cf616fc0f1954cdb64fd5eb2738d95") html nil (dev se unread) "http://fabiensanglard.net/rss.xml" nil) ("fabiensanglard.net" . "http://fabiensanglard.net/another_world_polygons/index.html") #s(elfeed-entry ("fabiensanglard.net" . "http://fabiensanglard.net/another_world_polygons/index.html") "The Polygons of Another World" "http://fabiensanglard.net/another_world_polygons/index.html" 1577836800.0 #s(elfeed-ref "f1090dd6186aa2239feb91183c874c4ebf41599d") html nil (dev se unread) "http://fabiensanglard.net/rss.xml" nil) ("fabiensanglard.net" . "http://fabiensanglard.net/sc_podcast/index.html") #s(elfeed-entry ("fabiensanglard.net" . "http://fabiensanglard.net/sc_podcast/index.html") "Strike Commander: Interview with Frank Savage" "http://fabiensanglard.net/sc_podcast/index.html" 1575331200.0 #s(elfeed-ref "2d0a6e99367c6b7027cc25ece741b429b9cf3baa") html nil (dev se unread) "http://fabiensanglard.net/rss.xml" nil) ("fabiensanglard.net" . "http://fabiensanglard.net/nbajamte/index.html") #s(elfeed-entry ("fabiensanglard.net" . "http://fabiensanglard.net/nbajamte/index.html") "A trip down NBA Jam graphics pipeline" "http://fabiensanglard.net/nbajamte/index.html" 1572220800.0 #s(elfeed-ref "4ab12eb437a653efdfd69ec4568fb0c642f9d683") html nil (dev se unread) "http://fabiensanglard.net/rss.xml" nil) ("fabiensanglard.net" . "http://fabiensanglard.net/gebb/index.html") #s(elfeed-entry ("fabiensanglard.net" . "http://fabiensanglard.net/gebb/index.html") "Game Engine Black Book update" "http://fabiensanglard.net/gebb/index.html" 1558051200.0 #s(elfeed-ref "c5550e7639799b396cdda5a8a80e9012ac5d768b") html nil (dev se unread) "http://fabiensanglard.net/rss.xml" nil) ("fabiensanglard.net" . "http://fabiensanglard.net/3dfx_sst1/index.html") #s(elfeed-entry ("fabiensanglard.net" . "http://fabiensanglard.net/3dfx_sst1/index.html") "The story of the 3dfx Voodoo 1" "http://fabiensanglard.net/3dfx_sst1/index.html" 1554336000.0 #s(elfeed-ref "f9570e2721b7d2f0eabbff8289219db3d679a4df") html nil (dev se unread) "http://fabiensanglard.net/rss.xml" nil) ("fabiensanglard.net" . "http://fabiensanglard.net/vquake/index.html") #s(elfeed-entry ("fabiensanglard.net" . "http://fabiensanglard.net/vquake/index.html") "The story of the Rendition Vérité 1000" "http://fabiensanglard.net/vquake/index.html" 1554076800.0 #s(elfeed-ref "517bf3050c1006610f89d103b7440ac4bb377107") html nil (dev se unread) "http://fabiensanglard.net/rss.xml" nil) ("fabiensanglard.net" . "http://fabiensanglard.net/doom_fire_psx/") #s(elfeed-entry ("fabiensanglard.net" . "http://fabiensanglard.net/doom_fire_psx/") "How DOOM fire was made" "http://fabiensanglard.net/doom_fire_psx/" 1545955200.0 #s(elfeed-ref "0e30a6692b9d82818427b225ec5ca41a20231323") html nil (dev se unread) "http://fabiensanglard.net/rss.xml" nil) ("fabiensanglard.net" . "http://fabiensanglard.net/postcard_pathtracer/") #s(elfeed-entry ("fabiensanglard.net" . "http://fabiensanglard.net/postcard_pathtracer/") "Deciphering the postcard sized raytracer" "http://fabiensanglard.net/postcard_pathtracer/" 1545609600.0 #s(elfeed-ref "36b454ad306ecb352a2e896a50f4986e7e07c8c2") html nil (dev se unread) "http://fabiensanglard.net/rss.xml" nil) ("fabiensanglard.net" . "http://fabiensanglard.net/dreamcast_hacking/") #s(elfeed-entry ("fabiensanglard.net" . "http://fabiensanglard.net/dreamcast_hacking/") "How the Dreamcast copy protection was defeated" "http://fabiensanglard.net/dreamcast_hacking" 1544486400.0 #s(elfeed-ref "e434362413c89ff7cc1e62855de790e97b16ee36") html nil (dev se unread) "http://fabiensanglard.net/rss.xml" nil) ("fabiensanglard.net" . "http://fabiensanglard.net/gebbdoom/") #s(elfeed-entry ("fabiensanglard.net" . "http://fabiensanglard.net/gebbdoom/") "Game Engine Black Book: DOOM" "http://fabiensanglard.net/gebbdoom" 1544400000.0 #s(elfeed-ref "dfd3cdb0af95dc94b88a8951f05c4d130cb532f8") html nil (dev se unread) "http://fabiensanglard.net/rss.xml" nil) ("fabiensanglard.net" . "http://fabiensanglard.net/gebbwolf3d/") #s(elfeed-entry ("fabiensanglard.net" . "http://fabiensanglard.net/gebbwolf3d/") "Game Engine Black Book: Wolfenstein 3D, 2nd Edition" "http://fabiensanglard.net/gebbwolf3d" 1544054400.0 #s(elfeed-ref "0700dd4684d81b116d1ec3f6f6908f5d98ba7441") html nil (dev se unread) "http://fabiensanglard.net/rss.xml" nil) ("fabiensanglard.net" . "http://fabiensanglard.net/bloated/") #s(elfeed-entry ("fabiensanglard.net" . "http://fabiensanglard.net/bloated/") "Bloated" "http://fabiensanglard.net/bloated" 1537664925.0 #s(elfeed-ref "309417f64007681af35b13876be362efc31f9a0a") html nil (dev se unread) "http://fabiensanglard.net/rss.xml" nil) ("fabiensanglard.net" . "http://fabiensanglard.net/Game_Engine_Black_Book_Release/index.php") #s(elfeed-entry ("fabiensanglard.net" . "http://fabiensanglard.net/Game_Engine_Black_Book_Release/index.php") "Game Engine Black Book Postmortem" "http://fabiensanglard.net/Game_Engine_Black_Book_Release/index.php" 1504746525.0 #s(elfeed-ref "f64e0ffb257a1accf005804357161dfa018235e8") html nil (dev se unread) "http://fabiensanglard.net/rss.xml" nil) ("fabiensanglard.net" . "http://fabiensanglard.net/fizzlefade/index.php") #s(elfeed-entry ("fabiensanglard.net" . "http://fabiensanglard.net/fizzlefade/index.php") "FizzleFade" "http://fabiensanglard.net/fizzlefade/index.php" 1503882525.0 #s(elfeed-ref "acca693d495162113a2da77182a9413a23811e17") html nil (dev se unread) "http://fabiensanglard.net/rss.xml" nil) ("fabiensanglard.net" . "http://fabiensanglard.net/Game_Engine_Black_Book_Release_Date/index.php") #s(elfeed-entry ("fabiensanglard.net" . "http://fabiensanglard.net/Game_Engine_Black_Book_Release_Date/index.php") "Let's compile like it's 1992" "http://fabiensanglard.net/Game_Engine_Black_Book_Release_Date/index.php" 1502068125.0 #s(elfeed-ref "a48d6b62a7fe021e3409521bab4a0b16141bffe4") html nil (dev se unread) "http://fabiensanglard.net/rss.xml" nil) ("fabiensanglard.net" . "http://fabiensanglard.net/Compile_Like_Its_1992/index.php") #s(elfeed-entry ("fabiensanglard.net" . "http://fabiensanglard.net/Compile_Like_Its_1992/index.php") "Let's compile like it's 1992" "http://fabiensanglard.net/Compile_Like_Its_1992/index.php" 1407632925.0 #s(elfeed-ref "24b425fe45e5eab81678c4bdb3fa796acd73a0a0") html nil (dev se unread) "http://fabiensanglard.net/rss.xml" nil) ("fabiensanglard.net" . "http://fabiensanglard.net/Game_Engine_Black_Book/index.php") #s(elfeed-entry ("fabiensanglard.net" . "http://fabiensanglard.net/Game_Engine_Black_Book/index.php") "Game Engine Black Books" "http://fabiensanglard.net/Game_Engine_Black_Book/index.php" 1407373725.0 #s(elfeed-ref "8e1141ebef87c4d5d0ee526feab25a2ff89a9f81") html nil (dev se unread) "http://fabiensanglard.net/rss.xml" nil) ("fabiensanglard.net" . "http://fabiensanglard.net/trespasser/index.php") #s(elfeed-entry ("fabiensanglard.net" . "http://fabiensanglard.net/trespasser/index.php") "Trespasser: Jurassic Park CG Source Code Review" "http://fabiensanglard.net/trespasser/index.php" 1402362525.0 #s(elfeed-ref "9c40dfbee27d1d01ca19233ad0a9dbf4c7f01730") html nil (dev se unread) "http://fabiensanglard.net/rss.xml" nil) ("fabiensanglard.net" . "http://fabiensanglard.net/git_code_review/index.php") #s(elfeed-entry ("fabiensanglard.net" . "http://fabiensanglard.net/git_code_review/index.php") "Git Source Code Review" "http://fabiensanglard.net/git_code_review/index.php" 1396141725.0 #s(elfeed-ref "df703c76efaf4644dc7738084519794e890d0964") html nil (dev se unread) "http://fabiensanglard.net/rss.xml" nil) ("fabiensanglard.net" . "http://fabiensanglard.net/Computer_Graphics_Principles_and_Practices/index.php") #s(elfeed-entry ("fabiensanglard.net" . "http://fabiensanglard.net/Computer_Graphics_Principles_and_Practices/index.php") "The Computer Graphics Library" "http://fabiensanglard.net/Computer_Graphics_Principles_and_Practices/index.php" 1394586525.0 #s(elfeed-ref "bae40a7c6455a81f256f9c3a5c5cd40013d496c3") html nil (dev se unread) "http://fabiensanglard.net/rss.xml" nil) ("fabiensanglard.net" . "http://fabiensanglard.net/algorithms_and_datastructures/index.php") #s(elfeed-entry ("fabiensanglard.net" . "http://fabiensanglard.net/algorithms_and_datastructures/index.php") "Algorithms and Data structures books: One size doesn't fit them all" "http://fabiensanglard.net/algorithms_and_datastructures/index.php" 1392340125.0 #s(elfeed-ref "4ae4eb3d537342d3d88aa34f6f781cf1c7d5fb6c") html nil (dev se unread) "http://fabiensanglard.net/rss.xml" nil) ("fabiensanglard.net" . "http://fabiensanglard.net/reverse_engineering_strike_commander/index.php") #s(elfeed-entry ("fabiensanglard.net" . "http://fabiensanglard.net/reverse_engineering_strike_commander/index.php") "Reverse Engineer Strike Commander" "http://fabiensanglard.net/reverse_engineering_strike_commander/index.php" 1358816925.0 #s(elfeed-ref "5281e3cf27ec1b699dbd08ace1cf1dd6d6ae3acf") html nil (dev se unread) "http://fabiensanglard.net/rss.xml" nil) ("fabiensanglard.net" . "http://fabiensanglard.net/learning_legendary_hardware/index.php") #s(elfeed-entry ("fabiensanglard.net" . "http://fabiensanglard.net/learning_legendary_hardware/index.php") "Learning Legendary Hardware" "http://fabiensanglard.net/learning_legendary_hardware/index.php" 1381108125.0 #s(elfeed-ref "bb054fd7a1a063f543b91e96d8a1b6db15bbbbad") html nil (dev se unread) "http://fabiensanglard.net/rss.xml" nil) ("fabiensanglard.net" . "http://fabiensanglard.net/rayTracing_back_of_business_card/index.php") #s(elfeed-entry ("fabiensanglard.net" . "http://fabiensanglard.net/rayTracing_back_of_business_card/index.php") "Decyphering the Business Card Raytracer" "http://fabiensanglard.net/rayTracing_back_of_business_card/index.php" 1379725725.0 #s(elfeed-ref "71417e6a231100073916535ac58f9067c9032cad") html nil (dev se unread) "http://fabiensanglard.net/rss.xml" nil) ("fabiensanglard.net" . "http://fabiensanglard.net/doom3_documentation/index.php") #s(elfeed-entry ("fabiensanglard.net" . "http://fabiensanglard.net/doom3_documentation/index.php") "Doom III BFG Documentation" "http://fabiensanglard.net/doom3_documentation/index.php" 1377911325.0 #s(elfeed-ref "ac86a5a4ad2627a4bea09fb97eb0cd98245982b7") html nil (dev se unread) "http://fabiensanglard.net/rss.xml" nil) ("fabiensanglard.net" . "http://fabiensanglard.net/second_reality/index.php") #s(elfeed-entry ("fabiensanglard.net" . "http://fabiensanglard.net/second_reality/index.php") "Second Reality Code Review." "http://fabiensanglard.net/second_reality/index.php" 1376615325.0 #s(elfeed-ref "aa5d2f14396b057ef305ffeef99920c770f1abad") html nil (dev se unread) "http://fabiensanglard.net/rss.xml" nil) ("fabiensanglard.net" . "http://fabiensanglard.net/prince_of_persia/index.php") #s(elfeed-entry ("fabiensanglard.net" . "http://fabiensanglard.net/prince_of_persia/index.php") "Prince Of Persia Code Review." "http://fabiensanglard.net/prince_of_persia/index.php" 1371172125.0 #s(elfeed-ref "3337dc5c463b2aa3cb8daba4afc5abca326a38e7") html nil (dev se unread) "http://fabiensanglard.net/rss.xml" nil) ("fabiensanglard.net" . "http://fabiensanglard.net/doom3_bfg/index.php") #s(elfeed-entry ("fabiensanglard.net" . "http://fabiensanglard.net/doom3_bfg/index.php") "Doom3 BFG Code Review." "http://fabiensanglard.net/doom3_bfg/index.php" 1369271325.0 #s(elfeed-ref "46d128e2117665dc715d41df5f9b5dcdf973b9e4") html nil (dev se unread) "http://fabiensanglard.net/rss.xml" nil) ("fabiensanglard.net" . "http://fabiensanglard.net/duke3d/index.php") #s(elfeed-entry ("fabiensanglard.net" . "http://fabiensanglard.net/duke3d/index.php") "Duke Nukem 3D Code Review." "http://fabiensanglard.net/duke3d/index.php" 1358384925.0 #s(elfeed-ref "8cdf12548432f5a307d59dffe4b124c69c0e41b4") html nil (dev se unread) "http://fabiensanglard.net/rss.xml" nil) ("fabiensanglard.net" . "http://fabiensanglard.net/books_recommendations/index.php") #s(elfeed-entry ("fabiensanglard.net" . "http://fabiensanglard.net/books_recommendations/index.php") "The best Tech books." "http://fabiensanglard.net/books_recommendations/index.php" 1358384925.0 #s(elfeed-ref "8fb22cc4b8f52ad766b8f8842ef6d2fb4d8c8426") html nil (dev se unread) "http://fabiensanglard.net/rss.xml" nil) ("fabiensanglard.net" . "http://fabiensanglard.net/timer_and_framerate/index.php") #s(elfeed-entry ("fabiensanglard.net" . "http://fabiensanglard.net/timer_and_framerate/index.php") "Game timers: Issues and solutions." "http://fabiensanglard.net/timer_and_framerate/index.php" 1356397725.0 #s(elfeed-ref "89b1ec401061d7bb65eb653ab3b553f57684cda2") html nil (dev se unread) "http://fabiensanglard.net/rss.xml" nil) ("fabiensanglard.net" . "http://fabiensanglard.net/vr_headset/index.php") #s(elfeed-entry ("fabiensanglard.net" . "http://fabiensanglard.net/vr_headset/index.php") "Oculus RIFT development" "http://fabiensanglard.net/vr_headset/index.php" 1341018525.0 #s(elfeed-ref "fc90194b2391f34d9cce5e1722069f582a54b99e") html nil (dev se unread) "http://fabiensanglard.net/rss.xml" nil) ("fabiensanglard.net" . "http://fabiensanglard.net/quake3/index.php") #s(elfeed-entry ("fabiensanglard.net" . "http://fabiensanglard.net/quake3/index.php") "Quake 3Source Code Review." "http://fabiensanglard.net/quake3/index.php" 1341018525.0 #s(elfeed-ref "2adeb17f258a2c21c9e41aaff5537e29bda0b860") html nil (dev se unread) "http://fabiensanglard.net/rss.xml" nil) ("fabiensanglard.net" . "http://fabiensanglard.net/doom3/index.php") #s(elfeed-entry ("fabiensanglard.net" . "http://fabiensanglard.net/doom3/index.php") "Doom3 Source Code Review." "http://fabiensanglard.net/doom3/index.php" 1339117725.0 #s(elfeed-ref "16b39ccdc4274784b62fca644c7ab94f7cfe97ce") html nil (dev se unread) "http://fabiensanglard.net/rss.xml" nil) ("fabiensanglard.net" . "http://fabiensanglard.net/Ghost_in_the_Wires_Paperback/index.php") #s(elfeed-entry ("fabiensanglard.net" . "http://fabiensanglard.net/Ghost_in_the_Wires_Paperback/index.php") "CRACKING KEVIN MITNICK'S GHOST IN THE WIRE PAPERBACK EDITION." "http://fabiensanglard.net/Ghost_in_the_Wires_Paperback/index.php" 1336525725.0 #s(elfeed-ref "95d1545a75e4da598b2693be29b37eb6f2c7235f") html nil (dev se unread) "http://fabiensanglard.net/rss.xml" nil) ("fabiensanglard.net" . "http://fabiensanglard.net/gift_of_life/index.php") #s(elfeed-entry ("fabiensanglard.net" . "http://fabiensanglard.net/gift_of_life/index.php") "Be A Donor." "http://fabiensanglard.net/gift_of_life/index.php" 1335056925.0 #s(elfeed-ref "e72ba311132aced5b28e15653b7f8f8a93af4d36") html nil (dev se unread) "http://fabiensanglard.net/rss.xml" nil) ("fabiensanglard.net" . "http://fabiensanglard.net/ssd/index.php") #s(elfeed-entry ("fabiensanglard.net" . "http://fabiensanglard.net/ssd/index.php") "SSD reboot your thinking." "http://fabiensanglard.net/ssd/index.php" 1331946525.0 #s(elfeed-ref "54d5181406164eb162217ebe2403d22eb16b1e1b") html nil (dev se unread) "http://fabiensanglard.net/rss.xml" nil) ("fabiensanglard.net" . "http://fabiensanglard.net/shmup_android/index.php") #s(elfeed-entry ("fabiensanglard.net" . "http://fabiensanglard.net/shmup_android/index.php") "Android Shmup." "http://fabiensanglard.net/shmup_android/index.php" 1329959325.0 #s(elfeed-ref "7e2ca58660eb3b11b331235e3587af9cb61ca50d") html nil (dev se unread) "http://fabiensanglard.net/rss.xml" nil) ("fabiensanglard.net" . "http://fabiensanglard.net/anotherWorld_code_review/index.php") #s(elfeed-entry ("fabiensanglard.net" . "http://fabiensanglard.net/anotherWorld_code_review/index.php") "Another World Code Review." "http://fabiensanglard.net/anotherWorld_code_review/index.php" 1322356125.0 #s(elfeed-ref "b1c9d2edbd64a838da3ac57f3d5b7ac72a15bce8") html nil (dev se unread) "http://fabiensanglard.net/rss.xml" nil) ("fabiensanglard.net" . "http://fabiensanglard.net/mobile_progressive_playback/index.php") #s(elfeed-entry ("fabiensanglard.net" . "http://fabiensanglard.net/mobile_progressive_playback/index.php") "Progressive playback: An atom story." "http://fabiensanglard.net/mobile_progressive_playback/index.php" 1322356125.0 #s(elfeed-ref "a17d9079efd325d1a483f0f7dbdc8ec4819447ee") html nil (dev se unread) "http://fabiensanglard.net/rss.xml" nil) ("fabiensanglard.net" . "http://fabiensanglard.net/doom3_macosx/index.php") #s(elfeed-entry ("fabiensanglard.net" . "http://fabiensanglard.net/doom3_macosx/index.php") "How to build Doom3 on Mac OS X with XCode." "http://fabiensanglard.net/doom3_macosx/index.php" 1322183325.0 #s(elfeed-ref "77ac419f05a47e7c8d7ac2bdf6950aabc01344c1") html nil (dev se unread) "http://fabiensanglard.net/rss.xml" nil) ("fabiensanglard.net" . "http://fabiensanglard.net/quake2/index.php") #s(elfeed-entry ("fabiensanglard.net" . "http://fabiensanglard.net/quake2/index.php") "Quake 2 Source Code Review" "http://fabiensanglard.net/quake2/index.php" 1316480925.0 #s(elfeed-ref "ecd1d04fac1f83e58603884463509fe65c33c06b") html nil (dev se unread) "http://fabiensanglard.net/rss.xml" nil) ("fabiensanglard.net" . "http://fabiensanglard.net/Ghost_in_the_Wires/index.php2") #s(elfeed-entry ("fabiensanglard.net" . "http://fabiensanglard.net/Ghost_in_the_Wires/index.php2") "Solving Ghost in The Wire codes" "http://fabiensanglard.net/Ghost_in_the_Wires/index.php" 1315703325.0 #s(elfeed-ref "bf70f434097bdcaea486a347543e32ec87150740") html nil (dev se unread) "http://fabiensanglard.net/rss.xml" nil) ("fabiensanglard.net" . "http://fabiensanglard.net/Ghost_in_the_Wires/index.php") #s(elfeed-entry ("fabiensanglard.net" . "http://fabiensanglard.net/Ghost_in_the_Wires/index.php") "Solving Ghost in The Wire codes" "http://fabiensanglard.net/Ghost_in_the_Wires/index.php" 1315445805.0 #s(elfeed-ref "06ac111d2153090f788e9e578b4ee276082ec351") html nil (dev se unread) "http://fabiensanglard.net/rss.xml" nil) ("fabiensanglard.net" . "http://fabiensanglard.net/hackerMonthly/index.php") #s(elfeed-entry ("fabiensanglard.net" . "http://fabiensanglard.net/hackerMonthly/index.php") "Hacker Monthly publication" "http://fabiensanglard.net/hackerMonthly/index.php" 1310693805.0 #s(elfeed-ref "35489c191f69e27709da5061153f9b1a3232772e") html nil (dev se unread) "http://fabiensanglard.net/rss.xml" nil) ("fabiensanglard.net" . "http://fabiensanglard.net/shmup_source_code/index.php") #s(elfeed-entry ("fabiensanglard.net" . "http://fabiensanglard.net/shmup_source_code/index.php") "SHMUP Source Code" "http://fabiensanglard.net/shmup_source_code/index.php" 1309419405.0 #s(elfeed-ref "25e41328025868f3faed9e933fb7bd2e85793177") html nil (dev se unread) "http://fabiensanglard.net/rss.xml" nil) ("fabiensanglard.net" . "http://fabiensanglard.net/polygon_codec/index.php") #s(elfeed-entry ("fabiensanglard.net" . "http://fabiensanglard.net/polygon_codec/index.php") "Polygon Codec" "http://fabiensanglard.net/polygon_codec/index.php" 1309124205.0 #s(elfeed-ref "31acffa42a06c7e9a6cf115743b1a7e86c6b4fb3") html nil (dev se unread) "http://fabiensanglard.net/rss.xml" nil) ("fabiensanglard.net" . "http://fabiensanglard.net/dEngineSourceCodeRelease/index.php") #s(elfeed-entry ("fabiensanglard.net" . "http://fabiensanglard.net/dEngineSourceCodeRelease/index.php") "dEngine Source Code Released" "http://fabiensanglard.net/dEngineSourceCodeRelease/index.php" 1304026605.0 #s(elfeed-ref "71e724724232b65e8e6bc34e9d9b02adef1600b2") html nil (dev se unread) "http://fabiensanglard.net/rss.xml" nil) ("fabiensanglard.net" . "http://fabiensanglard.net/shmup_generate_videos/index.php") #s(elfeed-entry ("fabiensanglard.net" . "http://fabiensanglard.net/shmup_generate_videos/index.php") "To generate 60fps videos on iOS" "http://fabiensanglard.net/shmup_generate_videos/index.php" 1298324205.0 #s(elfeed-ref "929c5eadd0d14debbaaf6a3d22c30a00a85ae8ab") html nil (dev se unread) "http://fabiensanglard.net/rss.xml" nil) ("fabiensanglard.net" . "http://fabiensanglard.net/c/index.php") #s(elfeed-entry ("fabiensanglard.net" . "http://fabiensanglard.net/c/index.php") "To become a good C programmer" "http://fabiensanglard.net/c/index.php" 1296682605.0 #s(elfeed-ref "e2b1ba22af8aa5e539e07861a7b4899990dd1aab") html nil (dev se unread) "http://fabiensanglard.net/rss.xml" nil) ("fabiensanglard.net" . "http://fabiensanglard.net/shmupLite/") #s(elfeed-entry ("fabiensanglard.net" . "http://fabiensanglard.net/shmupLite/") "SHMUP Lite" "http://fabiensanglard.net/shmupLite/" 1292794605.0 #s(elfeed-ref "a8d83906ff861595fd6c02f126e4c493ac94e1ea") html nil (dev se unread) "http://fabiensanglard.net/rss.xml" nil) ("fabiensanglard.net" . "http://fabiensanglard.net/fillrate_issues/") #s(elfeed-entry ("fabiensanglard.net" . "http://fabiensanglard.net/fillrate_issues/") "All about the fillrate." "http://fabiensanglard.net/fillrate_issues/" 1292103405.0 #s(elfeed-ref "9d8e4d2d4eef2821951233a096711b29b4e47e4f") html nil (dev se unread) "http://fabiensanglard.net/rss.xml" nil) ("fabiensanglard.net" . "http://fabiensanglard.net/cellphoneModem/index.php") #s(elfeed-entry ("fabiensanglard.net" . "http://fabiensanglard.net/cellphoneModem/index.php") "Tracing the baseband." "http://fabiensanglard.net/cellphoneModem/index.php" 1274983707.0 #s(elfeed-ref "e1085c88c9bb99758b040f7b2452d686016db14e") html nil (dev se unread) "http://fabiensanglard.net/rss.xml" nil) ("fabiensanglard.net" . "http://fabiensanglard.net/doomIphone/index.php") #s(elfeed-entry ("fabiensanglard.net" . "http://fabiensanglard.net/doomIphone/index.php") "Doom iPhone code review." "http://fabiensanglard.net/doomIphone/index.php" 1264998807.0 #s(elfeed-ref "93d31a4d847aa44cbdfce70b49c26cb6d9d71fbc") html nil (dev se unread) "http://fabiensanglard.net/rss.xml" nil) ("fabiensanglard.net" . "http://fabiensanglard.net/doomIphone/doomClassicRenderer.php") #s(elfeed-entry ("fabiensanglard.net" . "http://fabiensanglard.net/doomIphone/doomClassicRenderer.php") "Doom engine 1993 code review." "http://fabiensanglard.net/doomIphone/doomClassicRenderer.php" 1263357207.0 #s(elfeed-ref "e58de9c2c6799aefba06cf3b936a379d7918c2a5") html nil (dev se unread) "http://fabiensanglard.net/rss.xml" nil) ("fabiensanglard.net" . "http://fabiensanglard.net/macosxassembly/index.php") #s(elfeed-entry ("fabiensanglard.net" . "http://fabiensanglard.net/macosxassembly/index.php") "Don't learn Assembly on Mac OS X." "http://fabiensanglard.net/macosxassembly/index.php" 1262234007.0 #s(elfeed-ref "f3a08ef35a5c8bcea854922cb8e1fba6f4e2518a") html nil (dev se unread) "http://fabiensanglard.net/rss.xml" nil) ("fabiensanglard.net" . "http://fabiensanglard.net/appleTechTalk2009/index.php") #s(elfeed-entry ("fabiensanglard.net" . "http://fabiensanglard.net/appleTechTalk2009/index.php") "Apple iPhone Tech Talk 2009 tricks and treats" "http://fabiensanglard.net/appleTechTalk2009/index.php" 1259814807.0 #s(elfeed-ref "e1aca2380435f558da16cf1bea8cf441248a167a") html nil (dev se unread) "http://fabiensanglard.net/rss.xml" nil) ("fabiensanglard.net" . "http://fabiensanglard.net/dEngine/index.php") #s(elfeed-entry ("fabiensanglard.net" . "http://fabiensanglard.net/dEngine/index.php") "iPhone 3D engine programming part 1" "http://fabiensanglard.net/dEngine/index.php" 1255926807.0 #s(elfeed-ref "07b8528e47829ad4a2d18149ea92767fe5ae11dc") html nil (dev se unread) "http://fabiensanglard.net/rss.xml" nil) ("fabiensanglard.net" . "http://fabiensanglard.net/armadilloSpace/index.php") #s(elfeed-entry ("fabiensanglard.net" . "http://fabiensanglard.net/armadilloSpace/index.php") "Armadillo Space T-shirt" "http://fabiensanglard.net/armadilloSpace/index.php" 1255494807.0 #s(elfeed-ref "f353bf8559417b9bfe4a54982bf6a840aac6b342") html nil (dev se unread) "http://fabiensanglard.net/rss.xml" nil) ("fabiensanglard.net" . "http://fabiensanglard.net/fluide/index.php") #s(elfeed-entry ("fabiensanglard.net" . "http://fabiensanglard.net/fluide/index.php") "Fluid speed issues!" "http://fabiensanglard.net/fluide/index.php" 1246250007.0 #s(elfeed-ref "a125e169be4de47997beb1e6d3e818333742e65c") html nil (dev se unread) "http://fabiensanglard.net/rss.xml" nil) ("fabiensanglard.net" . "http://fabiensanglard.net/fluide/index.php/.") #s(elfeed-entry ("fabiensanglard.net" . "http://fabiensanglard.net/fluide/index.php/.") "Fluid2 RELEASED ! Fluid 1 now at 3,000,000 downloads !!" "http://fabiensanglard.net/fluide/index.php" 1244522007.0 #s(elfeed-ref "b43e7799cd4964f9b9fe24454052893c8cec9c4a") html nil (dev se unread) "http://fabiensanglard.net/rss.xml" nil) ("fabiensanglard.net" . "http://fabiensanglard.net/fluide/././index.php") #s(elfeed-entry ("fabiensanglard.net" . "http://fabiensanglard.net/fluide/././index.php") "Fluid: 1,000,000 downloads !!" "http://fabiensanglard.net/fluide/index.php" 1242275607.0 #s(elfeed-ref "2e9706d3d4bb65d068cfb6eef3e12ce801f8a087") html nil (dev se unread) "http://fabiensanglard.net/rss.xml" nil) ("fabiensanglard.net" . "http://fabiensanglard.net/fluide/./././index.php") #s(elfeed-entry ("fabiensanglard.net" . "http://fabiensanglard.net/fluide/./././index.php") "Fluid v1.1 up and coming..." "http://fabiensanglard.net/fluide/index.php" 1241843607.0 #s(elfeed-ref "7bef4bf1d43f6bce4dfc8565cd8718040205ad7e") html nil (dev se unread) "http://fabiensanglard.net/rss.xml" nil) ("fabiensanglard.net" . "http://www.fabiensanglard.net/wolf3d/index.php") #s(elfeed-entry ("fabiensanglard.net" . "http://www.fabiensanglard.net/wolf3d/index.php") "Wolfenstein 3D for iPhone code review" "http://www.fabiensanglard.net/wolf3d/index.php" 1241843607.0 #s(elfeed-ref "f344bfa917fafcdcb28aa9099199a3353bb7d830") html nil (dev se unread) "http://fabiensanglard.net/rss.xml" nil) ("fabiensanglard.net" . "http://fabiensanglard.net/fluide/././././index.php") #s(elfeed-entry ("fabiensanglard.net" . "http://fabiensanglard.net/fluide/././././index.php") "Fluide" "http://fabiensanglard.net/fluide/index.php" 1239770007.0 #s(elfeed-ref "32014da8739c3278d386aa5929383de089316d33") html nil (dev se unread) "http://fabiensanglard.net/rss.xml" nil) ("fabiensanglard.net" . "http://fabiensanglard.net/bumpMapping/index.php") #s(elfeed-entry ("fabiensanglard.net" . "http://fabiensanglard.net/bumpMapping/index.php") "BumpMapping hell" "http://fabiensanglard.net/bumpMapping/index.php" 1236141207.0 #s(elfeed-ref "da39a3ee5e6b4b0d3255bfef95601890afd80709") html nil (dev se unread) "http://fabiensanglard.net/rss.xml" nil) ("smalldatum.blogspot.com" . "tag:blogger.com,1999:blog-9149523927864751087.post-8226621479780219987") #s(elfeed-entry ("smalldatum.blogspot.com" . "tag:blogger.com,1999:blog-9149523927864751087.post-8226621479780219987") "PMP for on-cpu profiling?" "https://smalldatum.blogspot.com/2020/01/pmp-for-on-cpu-profiling.html" 1579245840.0 #s(elfeed-ref "cca243fa6e9b6f19cb5ead21e2c25e34fe0721fc") html nil (dev se unread) "https://smalldatum.blogspot.com/feeds/posts/default" (:authors ((:name "Mark Callaghan" :uri "http://www.blogger.com/profile/09590445221922043181" :email "noreply@blogger.com")) :categories ("performance") :author "Mark Callaghan")) ("smalldatum.blogspot.com" . "tag:blogger.com,1999:blog-9149523927864751087.post-2217684663514007630") #s(elfeed-entry ("smalldatum.blogspot.com" . "tag:blogger.com,1999:blog-9149523927864751087.post-2217684663514007630") "The slow perf movement" "https://smalldatum.blogspot.com/2020/01/the-slow-perf-movement.html" 1579167120.0 #s(elfeed-ref "0d8286858f4cdc54f5008cb18cc15dafb980b857") html nil (dev se unread) "https://smalldatum.blogspot.com/feeds/posts/default" (:authors ((:name "Mark Callaghan" :uri "http://www.blogger.com/profile/09590445221922043181" :email "noreply@blogger.com")) :author "Mark Callaghan")) ("smalldatum.blogspot.com" . "tag:blogger.com,1999:blog-9149523927864751087.post-2913039739111080353") #s(elfeed-entry ("smalldatum.blogspot.com" . "tag:blogger.com,1999:blog-9149523927864751087.post-2913039739111080353") "Setting up Ubuntu 18.04 server on an Intel NUC" "https://smalldatum.blogspot.com/2020/01/setting-up-ubuntu-1804-server-on-intel.html" 1579162980.0 #s(elfeed-ref "0d9a1c5da0f6fb72584d842cc47c9214c5994c9b") html nil (dev se unread) "https://smalldatum.blogspot.com/feeds/posts/default" (:authors ((:name "Mark Callaghan" :uri "http://www.blogger.com/profile/09590445221922043181" :email "noreply@blogger.com")) :author "Mark Callaghan")) ("smalldatum.blogspot.com" . "tag:blogger.com,1999:blog-9149523927864751087.post-6522189698665436169") #s(elfeed-entry ("smalldatum.blogspot.com" . "tag:blogger.com,1999:blog-9149523927864751087.post-6522189698665436169") "480p is my friend - video streaming when you don't have fiber" "https://smalldatum.blogspot.com/2020/01/480p-is-my-friend-video-streaming-when.html" 1578841980.0 #s(elfeed-ref "a53c8749ab325e0a03b464d42538b34e8136ddd9") html nil (dev se unread) "https://smalldatum.blogspot.com/feeds/posts/default" (:authors ((:name "Mark Callaghan" :uri "http://www.blogger.com/profile/09590445221922043181" :email "noreply@blogger.com")) :categories ("rant") :author "Mark Callaghan")) ("smalldatum.blogspot.com" . "tag:blogger.com,1999:blog-9149523927864751087.post-6550452315916667947") #s(elfeed-entry ("smalldatum.blogspot.com" . "tag:blogger.com,1999:blog-9149523927864751087.post-6550452315916667947") "It is all about the constant factors" "https://smalldatum.blogspot.com/2020/01/it-is-all-about-constant-factors.html" 1578384660.0 #s(elfeed-ref "549bf33c2611b5b0aaa16ea258167411a586cdc7") html nil (dev se unread) "https://smalldatum.blogspot.com/feeds/posts/default" (:authors ((:name "Mark Callaghan" :uri "http://www.blogger.com/profile/09590445221922043181" :email "noreply@blogger.com")) :categories ("mysql" "performance") :author "Mark Callaghan")) ("smalldatum.blogspot.com" . "tag:blogger.com,1999:blog-9149523927864751087.post-7210599475371652283") #s(elfeed-entry ("smalldatum.blogspot.com" . "tag:blogger.com,1999:blog-9149523927864751087.post-7210599475371652283") "From disk to flashcache to flash" "https://smalldatum.blogspot.com/2020/01/from-disk-to-flashcache-to-flash.html" 1577893620.0 #s(elfeed-ref "4bda59588daa6cb6aea871f3d88f5dac9ab39180") html nil (dev se unread) "https://smalldatum.blogspot.com/feeds/posts/default" (:authors ((:name "Mark Callaghan" :uri "http://www.blogger.com/profile/09590445221922043181" :email "noreply@blogger.com")) :categories ("database economics" "mysql" "rocksdb") :author "Mark Callaghan")) ("smalldatum.blogspot.com" . "tag:blogger.com,1999:blog-9149523927864751087.post-123066219805220001") #s(elfeed-entry ("smalldatum.blogspot.com" . "tag:blogger.com,1999:blog-9149523927864751087.post-123066219805220001") "What is the future of off-cpu analysis?" "https://smalldatum.blogspot.com/2019/12/what-is-future-of-off-cpu-analysis.html" 1576913640.0 #s(elfeed-ref "ef3d544d30048fa7d2c3746b6ee86784d5bbee47") html nil (dev se unread) "https://smalldatum.blogspot.com/feeds/posts/default" (:authors ((:name "Mark Callaghan" :uri "http://www.blogger.com/profile/09590445221922043181" :email "noreply@blogger.com")) :categories ("performance") :author "Mark Callaghan")) ("smalldatum.blogspot.com" . "tag:blogger.com,1999:blog-9149523927864751087.post-6260446849337317597") #s(elfeed-entry ("smalldatum.blogspot.com" . "tag:blogger.com,1999:blog-9149523927864751087.post-6260446849337317597") "Readahead" "https://smalldatum.blogspot.com/2019/12/readahead.html" 1576815120.0 #s(elfeed-ref "a8e2f65a556d7cafd52ac0679bfee2f5ade7f5f7") html nil (dev se unread) "https://smalldatum.blogspot.com/feeds/posts/default" (:authors ((:name "Mark Callaghan" :uri "http://www.blogger.com/profile/09590445221922043181" :email "noreply@blogger.com")) :categories ("mongodb" "mysql" "rocksdb") :author "Mark Callaghan")) ("smalldatum.blogspot.com" . "tag:blogger.com,1999:blog-9149523927864751087.post-3179085560140269720") #s(elfeed-entry ("smalldatum.blogspot.com" . "tag:blogger.com,1999:blog-9149523927864751087.post-3179085560140269720") "Slides for talks I have given on MySQL, MongoDB and RocksDB" "https://smalldatum.blogspot.com/2019/12/slides-for-talks-i-have-given-on-mysql.html" 1576008900.0 #s(elfeed-ref "9ff77ae11ac75dbf84d99ad99899bd95d45b5f5e") html nil (dev se unread) "https://smalldatum.blogspot.com/feeds/posts/default" (:authors ((:name "Mark Callaghan" :uri "http://www.blogger.com/profile/09590445221922043181" :email "noreply@blogger.com")) :categories ("history" "mysql") :author "Mark Callaghan")) ("smalldatum.blogspot.com" . "tag:blogger.com,1999:blog-9149523927864751087.post-8077130179238626143") #s(elfeed-entry ("smalldatum.blogspot.com" . "tag:blogger.com,1999:blog-9149523927864751087.post-8077130179238626143") "Historical - summary of the Google MySQL effort" "https://smalldatum.blogspot.com/2019/12/historical-summary-of-google-mysql.html" 1576001400.0 #s(elfeed-ref "40b9dab119d4e7a3f6bee1f1634e2f3bf1d524f8") html nil (dev se unread) "https://smalldatum.blogspot.com/feeds/posts/default" (:authors ((:name "Mark Callaghan" :uri "http://www.blogger.com/profile/09590445221922043181" :email "noreply@blogger.com")) :categories ("history" "mysql") :author "Mark Callaghan")) ("smalldatum.blogspot.com" . "tag:blogger.com,1999:blog-9149523927864751087.post-6446876198638646964") #s(elfeed-entry ("smalldatum.blogspot.com" . "tag:blogger.com,1999:blog-9149523927864751087.post-6446876198638646964") "Historical - InnoDB IO Performance" "https://smalldatum.blogspot.com/2019/12/historical-innodb-io-performance.html" 1575997380.0 #s(elfeed-ref "8c134aa286afef87a70c830301584c49965c2464") html nil (dev se unread) "https://smalldatum.blogspot.com/feeds/posts/default" (:authors ((:name "Mark Callaghan" :uri "http://www.blogger.com/profile/09590445221922043181" :email "noreply@blogger.com")) :categories ("history" "mysql") :author "Mark Callaghan")) ("smalldatum.blogspot.com" . "tag:blogger.com,1999:blog-9149523927864751087.post-5557877034999655592") #s(elfeed-entry ("smalldatum.blogspot.com" . "tag:blogger.com,1999:blog-9149523927864751087.post-5557877034999655592") "Historical - Patch for MySQL 5.0" "https://smalldatum.blogspot.com/2019/12/historical-patch-for-mysql-50.html" 1575995460.0 #s(elfeed-ref "6a66c657973f52d3a76a3875cb17df8e7a912b23") html nil (dev se unread) "https://smalldatum.blogspot.com/feeds/posts/default" (:authors ((:name "Mark Callaghan" :uri "http://www.blogger.com/profile/09590445221922043181" :email "noreply@blogger.com")) :categories ("history" "mysql") :author "Mark Callaghan")) ("smalldatum.blogspot.com" . "tag:blogger.com,1999:blog-9149523927864751087.post-879217958277500675") #s(elfeed-entry ("smalldatum.blogspot.com" . "tag:blogger.com,1999:blog-9149523927864751087.post-879217958277500675") "Historical - Make User Delayed" "https://smalldatum.blogspot.com/2019/12/historical-make-user-delayed.html" 1575993960.0 #s(elfeed-ref "130219aa27d227013c3fa6978ed2aed294e9c8de") html nil (dev se unread) "https://smalldatum.blogspot.com/feeds/posts/default" (:authors ((:name "Mark Callaghan" :uri "http://www.blogger.com/profile/09590445221922043181" :email "noreply@blogger.com")) :categories ("history" "mysql") :author "Mark Callaghan")) ("smalldatum.blogspot.com" . "tag:blogger.com,1999:blog-9149523927864751087.post-3823848129207732098") #s(elfeed-entry ("smalldatum.blogspot.com" . "tag:blogger.com,1999:blog-9149523927864751087.post-3823848129207732098") "Historical - Adding Roles to MySQL" "https://smalldatum.blogspot.com/2019/12/historical-adding-roles-to-mysql.html" 1575993660.0 #s(elfeed-ref "16a73b0b4f2ee6ce353e110482b05dba97ca2be2") html nil (dev se unread) "https://smalldatum.blogspot.com/feeds/posts/default" (:authors ((:name "Mark Callaghan" :uri "http://www.blogger.com/profile/09590445221922043181" :email "noreply@blogger.com")) :categories ("history" "mysql") :author "Mark Callaghan")) ("smalldatum.blogspot.com" . "tag:blogger.com,1999:blog-9149523927864751087.post-3758412576689349780") #s(elfeed-entry ("smalldatum.blogspot.com" . "tag:blogger.com,1999:blog-9149523927864751087.post-3758412576689349780") "Historical - changes to my.cnf" "https://smalldatum.blogspot.com/2019/12/historical-changes-to-mycnf.html" 1575992160.0 #s(elfeed-ref "a6b00144cf525493aa828a6e0b99848219899347") html nil (dev se unread) "https://smalldatum.blogspot.com/feeds/posts/default" (:authors ((:name "Mark Callaghan" :uri "http://www.blogger.com/profile/09590445221922043181" :email "noreply@blogger.com")) :categories ("history" "mysql") :author "Mark Callaghan")) ("smalldatum.blogspot.com" . "tag:blogger.com,1999:blog-9149523927864751087.post-8276213081744752234") #s(elfeed-entry ("smalldatum.blogspot.com" . "tag:blogger.com,1999:blog-9149523927864751087.post-8276213081744752234") "Historical - SHOW INNODB STATUS" "https://smalldatum.blogspot.com/2019/12/historical-show-innodb-status.html" 1575991440.0 #s(elfeed-ref "408a6340c9f34a26eec3edf093435866d7a94f0c") html nil (dev se unread) "https://smalldatum.blogspot.com/feeds/posts/default" (:authors ((:name "Mark Callaghan" :uri "http://www.blogger.com/profile/09590445221922043181" :email "noreply@blogger.com")) :categories ("history" "mysql") :author "Mark Callaghan")) ("smalldatum.blogspot.com" . "tag:blogger.com,1999:blog-9149523927864751087.post-241244452092425680") #s(elfeed-entry ("smalldatum.blogspot.com" . "tag:blogger.com,1999:blog-9149523927864751087.post-241244452092425680") "Historical - SHOW STATUS changes" "https://smalldatum.blogspot.com/2019/12/historical-show-status-changes.html" 1575990840.0 #s(elfeed-ref "b426dfe9d8aaa28dc9ac1e949f4cdcc5e2ccadc2") html nil (dev se unread) "https://smalldatum.blogspot.com/feeds/posts/default" (:authors ((:name "Mark Callaghan" :uri "http://www.blogger.com/profile/09590445221922043181" :email "noreply@blogger.com")) :categories ("history" "mysql") :author "Mark Callaghan")) ("smalldatum.blogspot.com" . "tag:blogger.com,1999:blog-9149523927864751087.post-5866390458397926847") #s(elfeed-entry ("smalldatum.blogspot.com" . "tag:blogger.com,1999:blog-9149523927864751087.post-5866390458397926847") "Historical - design doc for semisync replication" "https://smalldatum.blogspot.com/2019/12/historical-design-doc-for-semisync.html" 1575989520.0 #s(elfeed-ref "88ca473ae500f5395f506de7ca35fc4167b941c1") html nil (dev se unread) "https://smalldatum.blogspot.com/feeds/posts/default" (:authors ((:name "Mark Callaghan" :uri "http://www.blogger.com/profile/09590445221922043181" :email "noreply@blogger.com")) :categories ("history" "mysql") :author "Mark Callaghan")) ("smalldatum.blogspot.com" . "tag:blogger.com,1999:blog-9149523927864751087.post-6820995205187575652") #s(elfeed-entry ("smalldatum.blogspot.com" . "tag:blogger.com,1999:blog-9149523927864751087.post-6820995205187575652") "Historical - SemiSync replication" "https://smalldatum.blogspot.com/2019/12/historical-semisync-replication.html" 1575987960.0 #s(elfeed-ref "c57d448250a55693fb2a4714e7d944536b24c88e") html nil (dev se unread) "https://smalldatum.blogspot.com/feeds/posts/default" (:authors ((:name "Mark Callaghan" :uri "http://www.blogger.com/profile/09590445221922043181" :email "noreply@blogger.com")) :categories ("history" "mysql") :author "Mark Callaghan")) ("smalldatum.blogspot.com" . "tag:blogger.com,1999:blog-9149523927864751087.post-395187278455512430") #s(elfeed-entry ("smalldatum.blogspot.com" . "tag:blogger.com,1999:blog-9149523927864751087.post-395187278455512430") "Historical - SQL changes for MySQL" "https://smalldatum.blogspot.com/2019/12/historical-sql-changes-for-mysql.html" 1575979380.0 #s(elfeed-ref "62eab12f6371f62ec5a653921c8362a8f0030c4c") html nil (dev se unread) "https://smalldatum.blogspot.com/feeds/posts/default" (:authors ((:name "Mark Callaghan" :uri "http://www.blogger.com/profile/09590445221922043181" :email "noreply@blogger.com")) :categories ("history" "mysql") :author "Mark Callaghan")) ("smalldatum.blogspot.com" . "tag:blogger.com,1999:blog-9149523927864751087.post-7099564692228495050") #s(elfeed-entry ("smalldatum.blogspot.com" . "tag:blogger.com,1999:blog-9149523927864751087.post-7099564692228495050") "Historical - Transactional Replication" "https://smalldatum.blogspot.com/2019/12/historical-transactional-replication.html" 1575978240.0 #s(elfeed-ref "0df7e45fa72c0ca13e9f6024814759160833da09") html nil (dev se unread) "https://smalldatum.blogspot.com/feeds/posts/default" (:authors ((:name "Mark Callaghan" :uri "http://www.blogger.com/profile/09590445221922043181" :email "noreply@blogger.com")) :categories ("history" "mysql") :author "Mark Callaghan")) ("smalldatum.blogspot.com" . "tag:blogger.com,1999:blog-9149523927864751087.post-7612074760889558705") #s(elfeed-entry ("smalldatum.blogspot.com" . "tag:blogger.com,1999:blog-9149523927864751087.post-7612074760889558705") "Historical - UserTable Monitoring" "https://smalldatum.blogspot.com/2019/12/historical-usertable-monitoring.html" 1575977100.0 #s(elfeed-ref "693a79913d41280e9e58abce978f397db2aa9360") html nil (dev se unread) "https://smalldatum.blogspot.com/feeds/posts/default" (:authors ((:name "Mark Callaghan" :uri "http://www.blogger.com/profile/09590445221922043181" :email "noreply@blogger.com")) :categories ("history" "mysql") :author "Mark Callaghan")) ("smalldatum.blogspot.com" . "tag:blogger.com,1999:blog-9149523927864751087.post-9164200877902060759") #s(elfeed-entry ("smalldatum.blogspot.com" . "tag:blogger.com,1999:blog-9149523927864751087.post-9164200877902060759") "Historical - InnoDB SMP performance" "https://smalldatum.blogspot.com/2019/12/historical-innodb-smp-performance.html" 1575975660.0 #s(elfeed-ref "a948b79193939f9207ec339b87e6cd0fab6f18ec") html nil (dev se unread) "https://smalldatum.blogspot.com/feeds/posts/default" (:authors ((:name "Mark Callaghan" :uri "http://www.blogger.com/profile/09590445221922043181" :email "noreply@blogger.com")) :categories ("history" "mysql") :author "Mark Callaghan")) ("smalldatum.blogspot.com" . "tag:blogger.com,1999:blog-9149523927864751087.post-3872994483923927806") #s(elfeed-entry ("smalldatum.blogspot.com" . "tag:blogger.com,1999:blog-9149523927864751087.post-3872994483923927806") "Fixing the InnoDB RW-lock" "https://smalldatum.blogspot.com/2019/12/fixing-innodb-rw-lock.html" 1575971040.0 #s(elfeed-ref "02be1fd468f133667506785475a859f2c70f752e") html nil (dev se unread) "https://smalldatum.blogspot.com/feeds/posts/default" (:authors ((:name "Mark Callaghan" :uri "http://www.blogger.com/profile/09590445221922043181" :email "noreply@blogger.com")) :categories ("mysql") :author "Mark Callaghan")) ("smalldatum.blogspot.com" . "tag:blogger.com,1999:blog-9149523927864751087.post-5272935559778661672") #s(elfeed-entry ("smalldatum.blogspot.com" . "tag:blogger.com,1999:blog-9149523927864751087.post-5272935559778661672") "Still web scale" "https://smalldatum.blogspot.com/2019/12/still-web-scale.html" 1575878820.0 #s(elfeed-ref "639fc10a4d9eeb7207682ad0017ac1bbe6debb1f") html nil (dev se unread) "https://smalldatum.blogspot.com/feeds/posts/default" (:authors ((:name "Mark Callaghan" :uri "http://www.blogger.com/profile/09590445221922043181" :email "noreply@blogger.com")) :categories ("mongodb" "mysql" "rocksdb") :author "Mark Callaghan")) ("easyperf.net" . "https://easyperf.net/blog/2019/12/30/Comparing-performance-measurements") #s(elfeed-entry ("easyperf.net" . "https://easyperf.net/blog/2019/12/30/Comparing-performance-measurements") "Benchmarking&amp;#58 compare measurements and check which is faster." "https://easyperf.net/blog/2019/12/30/Comparing-performance-measurements" 1577664000.0 #s(elfeed-ref "b33cba05ba253bb0b03bafcc59f2bc704e0d908f") html nil (dev performance unread) "https://easyperf.net/feed.xml" (:authors ((:name "{\"twitter\"=>\"dendibakh\"}")) :author "{\"twitter\"=>\"dendibakh\"}")) ("easyperf.net" . "https://easyperf.net/blog/2019/12/17/Detecting-false-sharing-using-perf") #s(elfeed-entry ("easyperf.net" . "https://easyperf.net/blog/2019/12/17/Detecting-false-sharing-using-perf") "Detect false sharing with Data Address Profiling." "https://easyperf.net/blog/2019/12/17/Detecting-false-sharing-using-perf" 1576540800.0 #s(elfeed-ref "8370c3f6307a922b0bd42658805b1ac17ed449b3") html nil (dev performance unread) "https://easyperf.net/feed.xml" (:authors ((:name "{\"twitter\"=>\"dendibakh\"}")) :author "{\"twitter\"=>\"dendibakh\"}")) ("easyperf.net" . "https://easyperf.net/blog/2019/12/13/How-sports-help-me-to-recharge") #s(elfeed-entry ("easyperf.net" . "https://easyperf.net/blog/2019/12/13/How-sports-help-me-to-recharge") "How sport helps me to recharge." "https://easyperf.net/blog/2019/12/13/How-sports-help-me-to-recharge" 1576195200.0 #s(elfeed-ref "9df1d1da9f31c77f0a50766ca510756602f088e4") html nil (dev performance unread) "https://easyperf.net/feed.xml" (:authors ((:name "{\"twitter\"=>\"dendibakh\"}")) :author "{\"twitter\"=>\"dendibakh\"}")) ("easyperf.net" . "https://easyperf.net/blog/2019/11/27/data-driven-tuning-specialize-indirect-call") #s(elfeed-entry ("easyperf.net" . "https://easyperf.net/blog/2019/11/27/data-driven-tuning-specialize-indirect-call") "Data-Driven tuning. Specialize indirect call." "https://easyperf.net/blog/2019/11/27/data-driven-tuning-specialize-indirect-call" 1574812800.0 #s(elfeed-ref "982ba62b370c8063060509abf4cd57e542c36197") html nil (dev performance unread) "https://easyperf.net/feed.xml" (:authors ((:name "{\"twitter\"=>\"dendibakh\"}")) :author "{\"twitter\"=>\"dendibakh\"}")) ("easyperf.net" . "https://easyperf.net/blog/2019/11/22/data-driven-tuning-specialize-switch") #s(elfeed-entry ("easyperf.net" . "https://easyperf.net/blog/2019/11/22/data-driven-tuning-specialize-switch") "Data-Driven tuning. Specialize switch with one hot case." "https://easyperf.net/blog/2019/11/22/data-driven-tuning-specialize-switch" 1574380800.0 #s(elfeed-ref "92b2ba7884d9d692a4413908916c27fe61730a6b") html nil (dev performance unread) "https://easyperf.net/feed.xml" (:authors ((:name "{\"twitter\"=>\"dendibakh\"}")) :author "{\"twitter\"=>\"dendibakh\"}")) ("easyperf.net" . "https://easyperf.net/blog/2019/10/12/MT-Perf-Analysis-part2") #s(elfeed-entry ("easyperf.net" . "https://easyperf.net/blog/2019/10/12/MT-Perf-Analysis-part2") "How to find expensive locks in multithreaded application." "https://easyperf.net/blog/2019/10/12/MT-Perf-Analysis-part2" 1570838400.0 #s(elfeed-ref "c52aac5ba3928b1a86b542e93d240da9bdbeb797") html nil (dev performance unread) "https://easyperf.net/feed.xml" (:authors ((:name "{\"twitter\"=>\"dendibakh\"}")) :author "{\"twitter\"=>\"dendibakh\"}")) ("easyperf.net" . "https://easyperf.net/blog/2019/10/05/Performance-Analysis-Of-MT-apps") #s(elfeed-entry ("easyperf.net" . "https://easyperf.net/blog/2019/10/05/Performance-Analysis-Of-MT-apps") "Performance analysis of multithreaded applications." "https://easyperf.net/blog/2019/10/05/Performance-Analysis-Of-MT-apps" 1570233600.0 #s(elfeed-ref "a555a460bf4294f158eb5ecadb3d1b834075de57") html nil (dev performance unread) "https://easyperf.net/feed.xml" (:authors ((:name "{\"twitter\"=>\"dendibakh\"}")) :author "{\"twitter\"=>\"dendibakh\"}")) ("easyperf.net" . "https://easyperf.net/blog/2019/09/13/Intel-PT-part4") #s(elfeed-entry ("easyperf.net" . "https://easyperf.net/blog/2019/09/13/Intel-PT-part4") "Intel Processor Trace Part4. Better profiling experience." "https://easyperf.net/blog/2019/09/13/Intel-PT-part4" 1568332800.0 #s(elfeed-ref "7b3da549e4cc327c163739753058625014b665ec") html nil (dev performance unread) "https://easyperf.net/feed.xml" (:authors ((:name "{\"twitter\"=>\"dendibakh\"}")) :author "{\"twitter\"=>\"dendibakh\"}")) ("easyperf.net" . "https://easyperf.net/blog/2019/09/06/Intel-PT-part3") #s(elfeed-entry ("easyperf.net" . "https://easyperf.net/blog/2019/09/06/Intel-PT-part3") "Intel Processor Trace Part3. Analyzing performance glitches." "https://easyperf.net/blog/2019/09/06/Intel-PT-part3" 1567728000.0 #s(elfeed-ref "f1fa1bc1cf574f87cdd80948e2a727ec7ec0824f") html nil (dev performance unread) "https://easyperf.net/feed.xml" (:authors ((:name "{\"twitter\"=>\"dendibakh\"}")) :author "{\"twitter\"=>\"dendibakh\"}")) ("easyperf.net" . "https://easyperf.net/blog/2019/08/30/Intel-PT-part2") #s(elfeed-entry ("easyperf.net" . "https://easyperf.net/blog/2019/08/30/Intel-PT-part2") "Intel Processor Trace Part2. Better debugging experience." "https://easyperf.net/blog/2019/08/30/Intel-PT-part2" 1567123200.0 #s(elfeed-ref "a2470963745a73355a436a2ac04e71775b8c525b") html nil (dev performance unread) "https://easyperf.net/feed.xml" (:authors ((:name "{\"twitter\"=>\"dendibakh\"}")) :author "{\"twitter\"=>\"dendibakh\"}")) ("www.freebsd.org" . "https://www.FreeBSD.org/news/newsflash.html#event20200110:01") #s(elfeed-entry ("www.freebsd.org" . "https://www.FreeBSD.org/news/newsflash.html#event20200110:01") "New committer: Mikaël Urankar (ports)" "https://www.FreeBSD.org/news/newsflash.html#event20200110:01" 1578643200.0 #s(elfeed-ref "da39a3ee5e6b4b0d3255bfef95601890afd80709") html nil (bsd os unread) "https://www.freebsd.org/news/rss.xml" nil) ("www.freebsd.org" . "https://www.FreeBSD.org/news/newsflash.html#event20200102:01") #s(elfeed-entry ("www.freebsd.org" . "https://www.FreeBSD.org/news/newsflash.html#event20200102:01") "New committer: Loïc Bartoletti (ports)" "https://www.FreeBSD.org/news/newsflash.html#event20200102:01" 1577952000.0 #s(elfeed-ref "da39a3ee5e6b4b0d3255bfef95601890afd80709") html nil (bsd os unread) "https://www.freebsd.org/news/rss.xml" nil) ("www.freebsd.org" . "https://www.FreeBSD.org/news/newsflash.html#event20191125:01") #s(elfeed-entry ("www.freebsd.org" . "https://www.FreeBSD.org/news/newsflash.html#event20191125:01") "July-September 2019 Status Report" "https://www.FreeBSD.org/news/newsflash.html#event20191125:01" 1574668800.0 #s(elfeed-ref "1e8165497869eb246e962831af7576a4adc2e481") html nil (bsd os unread) "https://www.freebsd.org/news/rss.xml" nil) ("www.freebsd.org" . "https://www.FreeBSD.org/news/newsflash.html#event20191104:01") #s(elfeed-entry ("www.freebsd.org" . "https://www.FreeBSD.org/news/newsflash.html#event20191104:01") "FreeBSD 12.1-RELEASE Available" "https://www.FreeBSD.org/news/newsflash.html#event20191104:01" 1572854400.0 #s(elfeed-ref "74d727fe87297819b48ddc3cf5a537046cfcaf74") html nil (bsd os unread) "https://www.freebsd.org/news/rss.xml" nil) ("www.freebsd.org" . "https://www.FreeBSD.org/news/newsflash.html#event20191018:01") #s(elfeed-entry ("www.freebsd.org" . "https://www.FreeBSD.org/news/newsflash.html#event20191018:01") "FreeBSD 12.1-RC2 Available" "https://www.FreeBSD.org/news/newsflash.html#event20191018:01" 1571385600.0 #s(elfeed-ref "84d7a886b1c30dc5cd931f3f6bb888268203dcae") html nil (bsd os unread) "https://www.freebsd.org/news/rss.xml" nil) ("www.freebsd.org" . "https://www.FreeBSD.org/news/newsflash.html#event20191011:01") #s(elfeed-entry ("www.freebsd.org" . "https://www.FreeBSD.org/news/newsflash.html#event20191011:01") "FreeBSD 12.1-RC1 Available" "https://www.FreeBSD.org/news/newsflash.html#event20191011:01" 1570780800.0 #s(elfeed-ref "edb59b7e477de749b4e05c13acc0726b1c2949fa") html nil (bsd os unread) "https://www.freebsd.org/news/rss.xml" nil) ("www.freebsd.org" . "https://www.FreeBSD.org/news/newsflash.html#event20191011:02") #s(elfeed-entry ("www.freebsd.org" . "https://www.FreeBSD.org/news/newsflash.html#event20191011:02") "New committer: Alex Samorukov (ports)" "https://www.FreeBSD.org/news/newsflash.html#event20191011:02" 1570780800.0 #s(elfeed-ref "da39a3ee5e6b4b0d3255bfef95601890afd80709") html nil (bsd os unread) "https://www.freebsd.org/news/rss.xml" nil) ("www.freebsd.org" . "https://www.FreeBSD.org/news/newsflash.html#event20191004:01") #s(elfeed-entry ("www.freebsd.org" . "https://www.FreeBSD.org/news/newsflash.html#event20191004:01") "FreeBSD 12.1-BETA3 Available" "https://www.FreeBSD.org/news/newsflash.html#event20191004:01" 1570176000.0 #s(elfeed-ref "d3684f6bc702212ecd618968d821b9a544fd1d0d") html nil (bsd os unread) "https://www.freebsd.org/news/rss.xml" nil) ("www.freebsd.org" . "https://www.FreeBSD.org/news/newsflash.html#event20190928:01") #s(elfeed-entry ("www.freebsd.org" . "https://www.FreeBSD.org/news/newsflash.html#event20190928:01") "FreeBSD 12.1-BETA2 Available" "https://www.FreeBSD.org/news/newsflash.html#event20190928:01" 1569657600.0 #s(elfeed-ref "63557f7c7e4ee7a0abe66fd4cfdaf8b053f0fca0") html nil (bsd os unread) "https://www.freebsd.org/news/rss.xml" nil) ("www.freebsd.org" . "https://www.FreeBSD.org/news/newsflash.html#event20190926:01") #s(elfeed-entry ("www.freebsd.org" . "https://www.FreeBSD.org/news/newsflash.html#event20190926:01") "New committer: Pawel Biernacki (src)" "https://www.FreeBSD.org/news/newsflash.html#event20190926:01" 1569484800.0 #s(elfeed-ref "da39a3ee5e6b4b0d3255bfef95601890afd80709") html nil (bsd os unread) "https://www.freebsd.org/news/rss.xml" nil) ("blog.rust-lang.org" . "https://blog.rust-lang.org/2020/01/03/reducing-support-for-32-bit-apple-targets.html") #s(elfeed-entry ("blog.rust-lang.org" . "https://blog.rust-lang.org/2020/01/03/reducing-support-for-32-bit-apple-targets.html") "Reducing support for 32-bit Apple targets" "https://blog.rust-lang.org/2020/01/03/reducing-support-for-32-bit-apple-targets.html" 1578009600.0 #s(elfeed-ref "706a54030d4868a0c71fa7e21fcd4c7f96d2a948") html nil (dev rust unread) "https://blog.rust-lang.org/feed.xml" (:authors ((:name "Pietro Albini")) :author "Pietro Albini")) ("blog.rust-lang.org" . "https://blog.rust-lang.org/2019/12/19/Rust-1.40.0.html") #s(elfeed-entry ("blog.rust-lang.org" . "https://blog.rust-lang.org/2019/12/19/Rust-1.40.0.html") "Announcing Rust 1.40.0" "https://blog.rust-lang.org/2019/12/19/Rust-1.40.0.html" 1576713600.0 #s(elfeed-ref "2aa279bb92ffa2ac4dd38a279fbeb827d9db4590") html nil (dev rust unread) "https://blog.rust-lang.org/feed.xml" (:authors ((:name "The Rust Release Team")) :author "The Rust Release Team")) ("blog.rust-lang.org" . "https://blog.rust-lang.org/2019/12/03/survey-launch.html") #s(elfeed-entry ("blog.rust-lang.org" . "https://blog.rust-lang.org/2019/12/03/survey-launch.html") "Launching the 2019 State of Rust Survey" "https://blog.rust-lang.org/2019/12/03/survey-launch.html" 1575331200.0 #s(elfeed-ref "cff228069814faf37fe512610070e6ca5b1dc501") html nil (dev rust unread) "https://blog.rust-lang.org/feed.xml" (:authors ((:name "The Rust Community Team")) :author "The Rust Community Team")) ("blog.rust-lang.org" . "https://blog.rust-lang.org/2019/11/07/Rust-1.39.0.html") #s(elfeed-entry ("blog.rust-lang.org" . "https://blog.rust-lang.org/2019/11/07/Rust-1.39.0.html") "Announcing Rust 1.39.0" "https://blog.rust-lang.org/2019/11/07/Rust-1.39.0.html" 1573084800.0 #s(elfeed-ref "a972d0a660d9dcf7a0d526482487a2a0cfba653b") html nil (dev rust unread) "https://blog.rust-lang.org/feed.xml" (:authors ((:name "The Rust Release Team")) :author "The Rust Release Team")) ("blog.rust-lang.org" . "https://blog.rust-lang.org/2019/11/07/Async-await-stable.html") #s(elfeed-entry ("blog.rust-lang.org" . "https://blog.rust-lang.org/2019/11/07/Async-await-stable.html") "Async-await on stable Rust!" "https://blog.rust-lang.org/2019/11/07/Async-await-stable.html" 1573084800.0 #s(elfeed-ref "177b41ac72f45fe57462360b0c3023ca559ae11b") html nil (dev rust unread) "https://blog.rust-lang.org/feed.xml" (:authors ((:name "Niko Matsakis")) :author "Niko Matsakis")) ("blog.rust-lang.org" . "https://blog.rust-lang.org/2019/11/01/nll-hard-errors.html") #s(elfeed-entry ("blog.rust-lang.org" . "https://blog.rust-lang.org/2019/11/01/nll-hard-errors.html") "Completing the transition to the new borrow checker" "https://blog.rust-lang.org/2019/11/01/nll-hard-errors.html" 1572566400.0 #s(elfeed-ref "99c3dcbd221ff192c36e4ae7b4e08f428d3e8f95") html nil (dev rust unread) "https://blog.rust-lang.org/feed.xml" (:authors ((:name "Niko Matsakis")) :author "Niko Matsakis")) ("blog.rust-lang.org" . "https://blog.rust-lang.org/2019/10/29/A-call-for-blogs-2020.html") #s(elfeed-entry ("blog.rust-lang.org" . "https://blog.rust-lang.org/2019/10/29/A-call-for-blogs-2020.html") "A call for blogs 2020" "https://blog.rust-lang.org/2019/10/29/A-call-for-blogs-2020.html" 1572307200.0 #s(elfeed-ref "1815487be8865bdefe9583d4c7edc1c9b106cda3") html nil (dev rust unread) "https://blog.rust-lang.org/feed.xml" (:authors ((:name "The Rust Core Team")) :author "The Rust Core Team")) ("blog.rust-lang.org" . "https://blog.rust-lang.org/2019/10/15/Rustup-1.20.0.html") #s(elfeed-entry ("blog.rust-lang.org" . "https://blog.rust-lang.org/2019/10/15/Rustup-1.20.0.html") "Announcing Rustup 1.20.0" "https://blog.rust-lang.org/2019/10/15/Rustup-1.20.0.html" 1571097600.0 #s(elfeed-ref "8a429c3ca584aae1acc730ff27fd697ad46af051") html nil (dev rust unread) "https://blog.rust-lang.org/feed.xml" (:authors ((:name "The Rustup Working Group")) :author "The Rustup Working Group")) ("blog.rust-lang.org" . "https://blog.rust-lang.org/2019/10/03/inside-rust-blog.html") #s(elfeed-entry ("blog.rust-lang.org" . "https://blog.rust-lang.org/2019/10/03/inside-rust-blog.html") "Announcing the Inside Rust blog" "https://blog.rust-lang.org/2019/10/03/inside-rust-blog.html" 1570060800.0 #s(elfeed-ref "bdd797a2f1c83976cee97581177eb17c6ec266a1") html nil (dev rust unread) "https://blog.rust-lang.org/feed.xml" (:authors ((:name "Niko Matsakis")) :author "Niko Matsakis")) ("blog.rust-lang.org" . "https://blog.rust-lang.org/2019/09/30/Security-advisory-for-cargo.html") #s(elfeed-entry ("blog.rust-lang.org" . "https://blog.rust-lang.org/2019/09/30/Security-advisory-for-cargo.html") "Security advisory for Cargo" "https://blog.rust-lang.org/2019/09/30/Security-advisory-for-cargo.html" 1569801600.0 #s(elfeed-ref "2a0351a3a74a8bf9896d78889c79b64c4316cc1b") html nil (dev rust unread) "https://blog.rust-lang.org/feed.xml" (:authors ((:name "The Rust Security Team")) :author "The Rust Security Team")) ("toorcamp.toorcon.net" . "http://toorcamp.toorcon.net/?p=900") #s(elfeed-entry ("toorcamp.toorcon.net" . "http://toorcamp.toorcon.net/?p=900") "Thank you!" "https://toorcamp.toorcon.net/2018/06/26/thank-you/" 1530051705.0 #s(elfeed-ref "094dfa1038ed0158a44c7979c28880dda5b6f39a") html nil (hack make unread) "https://toorcamp.toorcon.net/feed" (:authors ((:name "davidhulton")) :categories ("Uncategorized"))) ("toorcamp.toorcon.net" . "http://toorcamp.toorcon.net/?p=876") #s(elfeed-entry ("toorcamp.toorcon.net" . "http://toorcamp.toorcon.net/?p=876") "Last Minute Info!" "https://toorcamp.toorcon.net/2018/06/13/last-minute-info-2/" 1528953042.0 #s(elfeed-ref "e5c30002a101d0d90647ba9a4e62ddd112ec41bf") html nil (hack make unread) "https://toorcamp.toorcon.net/feed" (:authors ((:name "davidhulton")) :categories ("Uncategorized"))) ("toorcamp.toorcon.net" . "http://toorcamp.toorcon.net/?p=857") #s(elfeed-entry ("toorcamp.toorcon.net" . "http://toorcamp.toorcon.net/?p=857") "Events Page Updated!" "https://toorcamp.toorcon.net/2018/06/08/events-page-updated/" 1528498531.0 #s(elfeed-ref "246d9b11f10ba4834d47259df86a79b697a13d8c") html nil (hack make unread) "https://toorcamp.toorcon.net/feed" (:authors ((:name "davidhulton")) :categories ("Uncategorized"))) ("toorcamp.toorcon.net" . "http://toorcamp.toorcon.net/?p=839") #s(elfeed-entry ("toorcamp.toorcon.net" . "http://toorcamp.toorcon.net/?p=839") "Schedule Now Up!" "https://toorcamp.toorcon.net/2018/05/29/schedule-now-up/" 1527624556.0 #s(elfeed-ref "1522d67fbcc9f7fcca366327f9cbe909f99d2bd1") html nil (hack make unread) "https://toorcamp.toorcon.net/feed" (:authors ((:name "davidhulton")) :categories ("Uncategorized"))) ("toorcamp.toorcon.net" . "http://toorcamp.toorcon.net/?p=810") #s(elfeed-entry ("toorcamp.toorcon.net" . "http://toorcamp.toorcon.net/?p=810") "Keynote & Preliminary Lineup Announced!" "https://toorcamp.toorcon.net/2018/04/03/keynote-preliminary-lineup-announced/" 1522797263.0 #s(elfeed-ref "e74127968e43cebeeeef40ff91b72369d4f36f37") html nil (hack make unread) "https://toorcamp.toorcon.net/feed" (:authors ((:name "davidhulton")) :categories ("Uncategorized"))) ("toorcamp.toorcon.net" . "http://toorcamp.toorcon.net/?p=791") #s(elfeed-entry ("toorcamp.toorcon.net" . "http://toorcamp.toorcon.net/?p=791") "ToorCamp 2018 Call For Participation!" "https://toorcamp.toorcon.net/2018/02/12/toorcamp-2018-call-for-participation/" 1518480503.0 #s(elfeed-ref "5c2ade0049f82d6b41a1e3e41913417cf5233404") html nil (hack make unread) "https://toorcamp.toorcon.net/feed" (:authors ((:name "davidhulton")) :categories ("Uncategorized"))) ("toorcamp.toorcon.net" . "http://toorcamp.toorcon.net/?p=627") #s(elfeed-entry ("toorcamp.toorcon.net" . "http://toorcamp.toorcon.net/?p=627") "ToorCamp 2018 Registration" "https://toorcamp.toorcon.net/2016/12/17/toorcamp-2018-registration/" 1481935337.0 #s(elfeed-ref "7e421144a5755a2cfcb46286047d3d4dbb7a8610") html nil (hack make unread) "https://toorcamp.toorcon.net/feed" (:authors ((:name "admin")) :categories ("News"))) ("toorcamp.toorcon.net" . "http://toorcamp.toorcon.net/?p=604") #s(elfeed-entry ("toorcamp.toorcon.net" . "http://toorcamp.toorcon.net/?p=604") "Follow up info!" "https://toorcamp.toorcon.net/2016/06/21/follow-up-info/" 1466549631.0 #s(elfeed-ref "395db029d56b9c92c1000c2a9e54afedecc68fc2") html nil (hack make unread) "https://toorcamp.toorcon.net/feed" (:authors ((:name "davidhulton")) :categories ("News"))) ("toorcamp.toorcon.net" . "http://toorcamp.toorcon.net/?p=598") #s(elfeed-entry ("toorcamp.toorcon.net" . "http://toorcamp.toorcon.net/?p=598") "ToorCamp 2016 Over!" "https://toorcamp.toorcon.net/2016/06/15/toorcamp-2016-over/" 1466022158.0 #s(elfeed-ref "92712956f361709d9fefa940076ac5f9fb435584") html nil (hack make unread) "https://toorcamp.toorcon.net/feed" (:authors ((:name "davidhulton")) :categories ("News"))) ("toorcamp.toorcon.net" . "http://toorcamp.toorcon.net/?p=584") #s(elfeed-entry ("toorcamp.toorcon.net" . "http://toorcamp.toorcon.net/?p=584") "Stupid Shit No One Needs & Terrible Ideas Hackathon" "https://toorcamp.toorcon.net/2016/06/07/stupid-shit-no-one-needs-terrible-ideas-hackathon/" 1465315317.0 #s(elfeed-ref "cd5abe264d8d6a4a8523cd69aafb847ca4f9588f") html nil (hack make unread) "https://toorcamp.toorcon.net/feed" (:authors ((:name "davidhulton")) :categories ("News"))) ("lucumr.pocoo.org" . "http://lucumr.pocoo.org/2020/1/1/async-pressure") #s(elfeed-entry ("lucumr.pocoo.org" . "http://lucumr.pocoo.org/2020/1/1/async-pressure") "I'm not feeling the async pressure" "http://lucumr.pocoo.org/2020/1/1/async-pressure" 1577836800.0 #s(elfeed-ref "5d2efdcf546467cd7b85d28fa7d394c7379a2ba6") html nil (dev python unread) "http://lucumr.pocoo.org/feed.atom" (:authors ((:name "Armin Ronacher")) :author "Armin Ronacher")) ("lucumr.pocoo.org" . "http://lucumr.pocoo.org/2019/12/28/open-source-migrates") #s(elfeed-entry ("lucumr.pocoo.org" . "http://lucumr.pocoo.org/2019/12/28/open-source-migrates") "Open Source Migrates With Emotional Distress" "http://lucumr.pocoo.org/2019/12/28/open-source-migrates" 1577491200.0 #s(elfeed-ref "aa0e40a02afb769961a3f901ff678f50abe37b89") html nil (dev python unread) "http://lucumr.pocoo.org/feed.atom" (:authors ((:name "Armin Ronacher")) :author "Armin Ronacher")) ("lucumr.pocoo.org" . "http://lucumr.pocoo.org/2019/11/4/open-source-and-saas") #s(elfeed-entry ("lucumr.pocoo.org" . "http://lucumr.pocoo.org/2019/11/4/open-source-and-saas") "Open Source, SaaS and Monetization" "http://lucumr.pocoo.org/2019/11/4/open-source-and-saas" 1572825600.0 #s(elfeed-ref "ef59f0068266553a2b4fdfe4dd952332906df537") html nil (dev python unread) "http://lucumr.pocoo.org/feed.atom" (:authors ((:name "Armin Ronacher")) :author "Armin Ronacher")) ("lucumr.pocoo.org" . "http://lucumr.pocoo.org/2019/7/29/dependency-scaling") #s(elfeed-entry ("lucumr.pocoo.org" . "http://lucumr.pocoo.org/2019/7/29/dependency-scaling") "Updated Thoughts on Trust Scaling" "http://lucumr.pocoo.org/2019/7/29/dependency-scaling" 1564358400.0 #s(elfeed-ref "a1133c3faaf3415a20de4eae11a572b90ac2bb4d") html nil (dev python unread) "http://lucumr.pocoo.org/feed.atom" (:authors ((:name "Armin Ronacher")) :author "Armin Ronacher")) ("lucumr.pocoo.org" . "http://lucumr.pocoo.org/2018/7/13/python") #s(elfeed-entry ("lucumr.pocoo.org" . "http://lucumr.pocoo.org/2018/7/13/python") "Python" "http://lucumr.pocoo.org/2018/7/13/python" 1531440000.0 #s(elfeed-ref "2af2d566dfcab484e446f1b027b266ed29e182f5") html nil (dev python unread) "http://lucumr.pocoo.org/feed.atom" (:authors ((:name "Armin Ronacher")) :author "Armin Ronacher")) ("lucumr.pocoo.org" . "http://lucumr.pocoo.org/2018/3/31/you-cant-rust-that") #s(elfeed-entry ("lucumr.pocoo.org" . "http://lucumr.pocoo.org/2018/3/31/you-cant-rust-that") "You can't Rust that" "http://lucumr.pocoo.org/2018/3/31/you-cant-rust-that" 1522454400.0 #s(elfeed-ref "8994aad6a8a446606df8910eee3e1cb2b1118b61") html nil (dev python unread) "http://lucumr.pocoo.org/feed.atom" (:authors ((:name "Armin Ronacher")) :author "Armin Ronacher")) ("lucumr.pocoo.org" . "http://lucumr.pocoo.org/2017/6/5/diversity-in-technology") #s(elfeed-entry ("lucumr.pocoo.org" . "http://lucumr.pocoo.org/2017/6/5/diversity-in-technology") "Diversity in Technology and Open Source" "http://lucumr.pocoo.org/2017/6/5/diversity-in-technology" 1496620800.0 #s(elfeed-ref "7c18b56d0f3eb36845455b88fdd0b9a06be6edd1") html nil (dev python unread) "http://lucumr.pocoo.org/feed.atom" (:authors ((:name "Armin Ronacher")) :author "Armin Ronacher")) ("lucumr.pocoo.org" . "http://lucumr.pocoo.org/2016/12/29/careful-with-str-format") #s(elfeed-entry ("lucumr.pocoo.org" . "http://lucumr.pocoo.org/2016/12/29/careful-with-str-format") "Be Careful with Python's New-Style String Format" "http://lucumr.pocoo.org/2016/12/29/careful-with-str-format" 1482969600.0 #s(elfeed-ref "b977b450a3a243f98e5c1ea225c4d1b134127f2d") html nil (dev python unread) "http://lucumr.pocoo.org/feed.atom" (:authors ((:name "Armin Ronacher")) :author "Armin Ronacher")) ("lucumr.pocoo.org" . "http://lucumr.pocoo.org/2016/11/5/be-careful-about-what-you-dislike") #s(elfeed-entry ("lucumr.pocoo.org" . "http://lucumr.pocoo.org/2016/11/5/be-careful-about-what-you-dislike") "Be Careful About What You Dislike" "http://lucumr.pocoo.org/2016/11/5/be-careful-about-what-you-dislike" 1478304000.0 #s(elfeed-ref "6c17562b20c02f88957f2a22e9a005ebeb2bcf84") html nil (dev python unread) "http://lucumr.pocoo.org/feed.atom" (:authors ((:name "Armin Ronacher")) :author "Armin Ronacher")) ("lucumr.pocoo.org" . "http://lucumr.pocoo.org/2016/10/30/i-dont-understand-asyncio") #s(elfeed-entry ("lucumr.pocoo.org" . "http://lucumr.pocoo.org/2016/10/30/i-dont-understand-asyncio") "I don't understand Python's Asyncio" "http://lucumr.pocoo.org/2016/10/30/i-dont-understand-asyncio" 1477785600.0 #s(elfeed-ref "34bdc27ebc52c476e82ae1733fb4bd34f9918adc") html nil (dev python unread) "http://lucumr.pocoo.org/feed.atom" (:authors ((:name "Armin Ronacher")) :author "Armin Ronacher")) ("nullprogram.com" . "urn:uuid:50300bbe-0939-4bcf-96ff-8fb96a9b12d5") #s(elfeed-entry ("nullprogram.com" . "urn:uuid:50300bbe-0939-4bcf-96ff-8fb96a9b12d5") "Purgeable Memory Allocations for Linux" "https://nullprogram.com/blog/2019/12/29/" 1577579149.0 #s(elfeed-ref "089039972456c3dc7b07f57dca5e61dcd0836847") html nil (dev se unread) "http://nullprogram.com/feed" (:categories ("c" "linux" "optimization"))) ("nullprogram.com" . "urn:uuid:721eda6d-a78a-41e1-9d78-db3666208a71") #s(elfeed-entry ("nullprogram.com" . "urn:uuid:721eda6d-a78a-41e1-9d78-db3666208a71") "Unintuitive JSON Parsing" "https://nullprogram.com/blog/2019/12/28/" 1577553789.0 #s(elfeed-ref "eaa8ab47429be14250ee3c8ed2d5cd026a7994a3") html nil (dev se unread) "http://nullprogram.com/feed" (:categories ("javascript" "compsci" "lang"))) ("nullprogram.com" . "urn:uuid:15421609-2681-4b75-99b2-b2d6aaa835fe") #s(elfeed-entry ("nullprogram.com" . "urn:uuid:15421609-2681-4b75-99b2-b2d6aaa835fe") "Efficient Alias of a Built-In Emacs Lisp Function" "https://nullprogram.com/blog/2019/12/10/" 1575945124.0 #s(elfeed-ref "9f9ce1a795aed30e73475753c3edbdd3a930ed31") html nil (dev se unread) "http://nullprogram.com/feed" (:categories ("emacs" "elisp" "optimization"))) ("nullprogram.com" . "urn:uuid:961086fa-46af-42d4-bd69-6f4a326a1505") #s(elfeed-entry ("nullprogram.com" . "urn:uuid:961086fa-46af-42d4-bd69-6f4a326a1505") "Chunking Optimizations: Let the Knife Do the Work" "https://nullprogram.com/blog/2019/12/09/" 1575931075.0 #s(elfeed-ref "a0b607adf222c8523e04803fe0ac6cdc56db422b") html nil (dev se unread) "http://nullprogram.com/feed" (:categories ("c" "cpp" "optimization" "x86"))) ("nullprogram.com" . "urn:uuid:13e56720-ef3a-4fa4-a4ff-0a6fef914504") #s(elfeed-entry ("nullprogram.com" . "urn:uuid:13e56720-ef3a-4fa4-a4ff-0a6fef914504") "On-the-fly Linear Congruential Generator Using Emacs Calc" "https://nullprogram.com/blog/2019/11/19/" 1574126270.0 #s(elfeed-ref "337cb3df9ce85214a119c34ec76b14d9d0badb4f") html nil (dev se unread) "http://nullprogram.com/feed" (:categories ("emacs" "crypto" "optimization" "c" "java" "javascript"))) ("nullprogram.com" . "urn:uuid:7266b2ea-f39e-4b9a-87c8-e4480374af41") #s(elfeed-entry ("nullprogram.com" . "urn:uuid:7266b2ea-f39e-4b9a-87c8-e4480374af41") "Infectious Executable Stacks" "https://nullprogram.com/blog/2019/11/15/" 1573788577.0 #s(elfeed-ref "d8ff8fcad32f1a81614748a2b30963c81fb983f6") html nil (dev se unread) "http://nullprogram.com/feed" (:categories ("c" "netsec" "x86"))) ("nullprogram.com" . "urn:uuid:ce906d6f-b228-4dc6-bd02-34b845d3c5e2") #s(elfeed-entry ("nullprogram.com" . "urn:uuid:ce906d6f-b228-4dc6-bd02-34b845d3c5e2") "Legitimate-ish Use of alloca()" "https://nullprogram.com/blog/2019/10/28/" 1572223343.0 #s(elfeed-ref "77f3505a926868d355f61bc5f9629b4a96149028") html nil (dev se unread) "http://nullprogram.com/feed" (:categories ("c" "optimization"))) ("nullprogram.com" . "urn:uuid:acf6af69-f18c-49a6-b3ae-a23ae537da6d") #s(elfeed-entry ("nullprogram.com" . "urn:uuid:acf6af69-f18c-49a6-b3ae-a23ae537da6d") "Legitimate Use of Variable Length Arrays" "https://nullprogram.com/blog/2019/10/27/" 1572206280.0 #s(elfeed-ref "94e116e1ad9dab3b479f1db62496599a5adfd9a1") html nil (dev se unread) "http://nullprogram.com/feed" (:categories ("c" "optimization"))) ("ferrisellis.com" . "https://ferrisellis.com/content/a_life_of_dreams/") #s(elfeed-entry ("ferrisellis.com" . "https://ferrisellis.com/content/a_life_of_dreams/") "A Life of Dreams" "https://ferrisellis.com/content/a_life_of_dreams/" 1548979200.0 #s(elfeed-ref "872fa3ecd13e141cc131959be73867c5a5672bc6") html nil (general unread) "https://ferrisellis.com/index.xml" (:categories ("TEST"))) ("ferrisellis.com" . "https://ferrisellis.com/content/well_find_a_better_future_in_2119_not_2019/") #s(elfeed-entry ("ferrisellis.com" . "https://ferrisellis.com/content/well_find_a_better_future_in_2119_not_2019/") "We‘ll find a better future in 2119, not 2019" "https://ferrisellis.com/content/well_find_a_better_future_in_2119_not_2019/" 1548979200.0 #s(elfeed-ref "4b007e51c43168c28c15789b88d82ba544614693") html nil (general unread) "https://ferrisellis.com/index.xml" (:categories ("TEST"))) ("ferrisellis.com" . "https://ferrisellis.com/content/local_excellence/") #s(elfeed-entry ("ferrisellis.com" . "https://ferrisellis.com/content/local_excellence/") "Local Excellence" "https://ferrisellis.com/content/local_excellence/" 1529107200.0 #s(elfeed-ref "2bc98bddca00b2a8802821670997b56c50d475e1") html nil (general unread) "https://ferrisellis.com/index.xml" (:categories ("TEST"))) ("ferrisellis.com" . "https://ferrisellis.com/content/other_days/") #s(elfeed-entry ("ferrisellis.com" . "https://ferrisellis.com/content/other_days/") "Other Days" "https://ferrisellis.com/content/other_days/" 1527379200.0 #s(elfeed-ref "d8f7e8b61fb679e4c3d023931b329eff13a17dc0") html nil (general unread) "https://ferrisellis.com/index.xml" (:categories ("TEST"))) ("ferrisellis.com" . "https://ferrisellis.com/content/canopy/") #s(elfeed-entry ("ferrisellis.com" . "https://ferrisellis.com/content/canopy/") "Canopy" "https://ferrisellis.com/content/canopy/" 1527292800.0 #s(elfeed-ref "e77aa2da51e9459281c1db5f228cec3153e5efa4") html nil (general unread) "https://ferrisellis.com/index.xml" (:categories ("TEST"))) ("ferrisellis.com" . "https://ferrisellis.com/content/noise/") #s(elfeed-entry ("ferrisellis.com" . "https://ferrisellis.com/content/noise/") "Noise" "https://ferrisellis.com/content/noise/" 1526515200.0 #s(elfeed-ref "9dd0cb82eff93e8dd5f8e15df4c4d1b97518aa47") html nil (general unread) "https://ferrisellis.com/index.xml" (:categories ("TEST"))) ("ferrisellis.com" . "https://ferrisellis.com/content/lifecycle_versioning_v1_alpha/") #s(elfeed-entry ("ferrisellis.com" . "https://ferrisellis.com/content/lifecycle_versioning_v1_alpha/") "Lifecycle Versioning (v01, alpha)" "https://ferrisellis.com/content/lifecycle_versioning_v1_alpha/" 1517529600.0 #s(elfeed-ref "e155930f1f1e9c9a0dd5cebe1867a0d76809a3fc") html nil (general unread) "https://ferrisellis.com/index.xml" (:categories ("TEST"))) ("ferrisellis.com" . "https://ferrisellis.com/content/look_inward/") #s(elfeed-entry ("ferrisellis.com" . "https://ferrisellis.com/content/look_inward/") "Look Inwards" "https://ferrisellis.com/content/look_inward/" 1512950400.0 #s(elfeed-ref "a92caec023c696a032720ef199d45152d7652039") html nil (general unread) "https://ferrisellis.com/index.xml" (:categories ("TEST"))) ("ferrisellis.com" . "https://ferrisellis.com/content/unums_strange_loop_2017/") #s(elfeed-entry ("ferrisellis.com" . "https://ferrisellis.com/content/unums_strange_loop_2017/") "Strength in Numbers: Unums and the Quest for Reliable Arithmetic" "https://ferrisellis.com/content/unums_strange_loop_2017/" 1506556800.0 #s(elfeed-ref "dc364ed85bc3727ee65253b1bd89f50e45e570e8") html nil (general unread) "https://ferrisellis.com/index.xml" (:categories ("TEST"))) ("ferrisellis.com" . "https://ferrisellis.com/content/project_lead_thoughts/") #s(elfeed-entry ("ferrisellis.com" . "https://ferrisellis.com/content/project_lead_thoughts/") "Remote Project Lead: Thoughts and Learnings" "https://ferrisellis.com/content/project_lead_thoughts/" 1495238400.0 #s(elfeed-ref "f36517f40a7f39277418f2a19aaf15b48f3343a9") html nil (general unread) "https://ferrisellis.com/index.xml" (:categories ("TEST"))) ("ferrisellis.com" . "https://ferrisellis.com/content/ebpf_syscall_and_maps/") #s(elfeed-entry ("ferrisellis.com" . "https://ferrisellis.com/content/ebpf_syscall_and_maps/") "eBPF, part 2: Syscall and Map Types" "https://ferrisellis.com/content/ebpf_syscall_and_maps/" 1494460800.0 #s(elfeed-ref "9375978fc65c57e860a14ae389f6714359124f59") html nil (general unread) "https://ferrisellis.com/index.xml" (:categories ("TEST"))) ("ferrisellis.com" . "https://ferrisellis.com/content/ebpf_past_present_future/") #s(elfeed-entry ("ferrisellis.com" . "https://ferrisellis.com/content/ebpf_past_present_future/") "eBPF, part 1: Past, Present, and Future" "https://ferrisellis.com/content/ebpf_past_present_future/" 1493337600.0 #s(elfeed-ref "ce678ccd349e8a6d0833c72a0b793bc56b96edb6") html nil (general unread) "https://ferrisellis.com/index.xml" (:categories ("TEST"))) ("ferrisellis.com" . "https://ferrisellis.com/content/rust-implementing-units-for-types/") #s(elfeed-entry ("ferrisellis.com" . "https://ferrisellis.com/content/rust-implementing-units-for-types/") "Math with distances in Rust: safety and correctness across units" "https://ferrisellis.com/content/rust-implementing-units-for-types/" 1488931200.0 #s(elfeed-ref "446342f6c9adf376795f79922f19d9a440f085d0") html nil (general unread) "https://ferrisellis.com/index.xml" (:categories ("TEST"))) ("ferrisellis.com" . "https://ferrisellis.com/posts/ebpf_past_present_future/") #s(elfeed-entry ("ferrisellis.com" . "https://ferrisellis.com/posts/ebpf_past_present_future/") "" "https://ferrisellis.com/posts/ebpf_past_present_future/" 978307200.0 #s(elfeed-ref "da39a3ee5e6b4b0d3255bfef95601890afd80709") html nil (general unread) "https://ferrisellis.com/index.xml" (:categories ("TEST"))) ("ferrisellis.com" . "https://ferrisellis.com/posts/ebpf_syscall_and_maps/") #s(elfeed-entry ("ferrisellis.com" . "https://ferrisellis.com/posts/ebpf_syscall_and_maps/") "" "https://ferrisellis.com/posts/ebpf_syscall_and_maps/" 978307200.0 #s(elfeed-ref "da39a3ee5e6b4b0d3255bfef95601890afd80709") html nil (general unread) "https://ferrisellis.com/index.xml" (:categories ("TEST"))) ("ferrisellis.com" . "https://ferrisellis.com/posts/lifecycle_versioning_v1_alpha/") #s(elfeed-entry ("ferrisellis.com" . "https://ferrisellis.com/posts/lifecycle_versioning_v1_alpha/") "" "https://ferrisellis.com/posts/lifecycle_versioning_v1_alpha/" 978307200.0 #s(elfeed-ref "da39a3ee5e6b4b0d3255bfef95601890afd80709") html nil (general unread) "https://ferrisellis.com/index.xml" (:categories ("TEST"))) ("ferrisellis.com" . "https://ferrisellis.com/posts/project_lead_thoughts/") #s(elfeed-entry ("ferrisellis.com" . "https://ferrisellis.com/posts/project_lead_thoughts/") "" "https://ferrisellis.com/posts/project_lead_thoughts/" 978307200.0 #s(elfeed-ref "da39a3ee5e6b4b0d3255bfef95601890afd80709") html nil (general unread) "https://ferrisellis.com/index.xml" (:categories ("TEST"))) ("ferrisellis.com" . "https://ferrisellis.com/posts/rust-implementing-units-for-types/") #s(elfeed-entry ("ferrisellis.com" . "https://ferrisellis.com/posts/rust-implementing-units-for-types/") "" "https://ferrisellis.com/posts/rust-implementing-units-for-types/" 978307200.0 #s(elfeed-ref "da39a3ee5e6b4b0d3255bfef95601890afd80709") html nil (general unread) "https://ferrisellis.com/index.xml" (:categories ("TEST"))) ("ferrisellis.com" . "https://ferrisellis.com/talks/unums_strange_loop_2017/") #s(elfeed-entry ("ferrisellis.com" . "https://ferrisellis.com/talks/unums_strange_loop_2017/") "" "https://ferrisellis.com/talks/unums_strange_loop_2017/" 978307200.0 #s(elfeed-ref "da39a3ee5e6b4b0d3255bfef95601890afd80709") html nil (general unread) "https://ferrisellis.com/index.xml" (:categories ("TEST"))) ("ferrisellis.com" . "https://ferrisellis.com/writings/a_life_of_dreams/") #s(elfeed-entry ("ferrisellis.com" . "https://ferrisellis.com/writings/a_life_of_dreams/") "" "https://ferrisellis.com/writings/a_life_of_dreams/" 978307200.0 #s(elfeed-ref "da39a3ee5e6b4b0d3255bfef95601890afd80709") html nil (general unread) "https://ferrisellis.com/index.xml" (:categories ("TEST"))) ("ferrisellis.com" . "https://ferrisellis.com/writings/canopy/") #s(elfeed-entry ("ferrisellis.com" . "https://ferrisellis.com/writings/canopy/") "" "https://ferrisellis.com/writings/canopy/" 978307200.0 #s(elfeed-ref "da39a3ee5e6b4b0d3255bfef95601890afd80709") html nil (general unread) "https://ferrisellis.com/index.xml" (:categories ("TEST"))) ("ferrisellis.com" . "https://ferrisellis.com/writings/local_excellence/") #s(elfeed-entry ("ferrisellis.com" . "https://ferrisellis.com/writings/local_excellence/") "" "https://ferrisellis.com/writings/local_excellence/" 978307200.0 #s(elfeed-ref "da39a3ee5e6b4b0d3255bfef95601890afd80709") html nil (general unread) "https://ferrisellis.com/index.xml" (:categories ("TEST"))) ("ferrisellis.com" . "https://ferrisellis.com/writings/look_inward/") #s(elfeed-entry ("ferrisellis.com" . "https://ferrisellis.com/writings/look_inward/") "" "https://ferrisellis.com/writings/look_inward/" 978307200.0 #s(elfeed-ref "da39a3ee5e6b4b0d3255bfef95601890afd80709") html nil (general unread) "https://ferrisellis.com/index.xml" (:categories ("TEST"))) ("ferrisellis.com" . "https://ferrisellis.com/writings/noise/") #s(elfeed-entry ("ferrisellis.com" . "https://ferrisellis.com/writings/noise/") "" "https://ferrisellis.com/writings/noise/" 978307200.0 #s(elfeed-ref "da39a3ee5e6b4b0d3255bfef95601890afd80709") html nil (general unread) "https://ferrisellis.com/index.xml" (:categories ("TEST"))) ("ferrisellis.com" . "https://ferrisellis.com/writings/other_days/") #s(elfeed-entry ("ferrisellis.com" . "https://ferrisellis.com/writings/other_days/") "" "https://ferrisellis.com/writings/other_days/" 978307200.0 #s(elfeed-ref "da39a3ee5e6b4b0d3255bfef95601890afd80709") html nil (general unread) "https://ferrisellis.com/index.xml" (:categories ("TEST"))) ("ferrisellis.com" . "https://ferrisellis.com/writings/well_find_a_better_future_in_2119_not_2019/") #s(elfeed-entry ("ferrisellis.com" . "https://ferrisellis.com/writings/well_find_a_better_future_in_2119_not_2019/") "" "https://ferrisellis.com/writings/well_find_a_better_future_in_2119_not_2019/" 978307200.0 #s(elfeed-ref "da39a3ee5e6b4b0d3255bfef95601890afd80709") html nil (general unread) "https://ferrisellis.com/index.xml" (:categories ("TEST"))) ("programmingisterrible.com" . "https://programmingisterrible.com/post/188942142748") #s(elfeed-entry ("programmingisterrible.com" . "https://programmingisterrible.com/post/188942142748") "Scaling in the presence of errors—don’t ignore them" "https://programmingisterrible.com/post/188942142748" 1573363924.0 #s(elfeed-ref "d02919f6ee0476106e618d9c10d6c151203f2f64") html nil (dev se unread) "https://programmingisterrible.com/rss" nil) ("programmingisterrible.com" . "https://programmingisterrible.com/post/181841346708") #s(elfeed-entry ("programmingisterrible.com" . "https://programmingisterrible.com/post/181841346708") "What the hell is REST, Anyway?" "https://programmingisterrible.com/post/181841346708" 1546966623.0 #s(elfeed-ref "079094df1b9f2bbaebe82b5188e8d1de1f9a655c") html nil (dev se unread) "https://programmingisterrible.com/rss" nil) ("programmingisterrible.com" . "https://programmingisterrible.com/post/176657481103") #s(elfeed-entry ("programmingisterrible.com" . "https://programmingisterrible.com/post/176657481103") "Repeat yourself, do more than one thing, and rewrite everything" "https://programmingisterrible.com/post/176657481103" 1533474163.0 #s(elfeed-ref "becb6df72853b545a7d7e94d48a903528723b1d6") html nil (dev se unread) "https://programmingisterrible.com/rss" nil) ("programmingisterrible.com" . "https://programmingisterrible.com/post/173883533613") #s(elfeed-entry ("programmingisterrible.com" . "https://programmingisterrible.com/post/173883533613") "Write code that's easy to delete, and easy to debug too." "https://programmingisterrible.com/post/173883533613" 1526272235.0 #s(elfeed-ref "8d71b56709d9b01cd7e0d448959548bc6290ab6e") html nil (dev se unread) "https://programmingisterrible.com/rss" nil) ("programmingisterrible.com" . "https://programmingisterrible.com/post/168165747673") #s(elfeed-entry ("programmingisterrible.com" . "https://programmingisterrible.com/post/168165747673") "Psychological Safety in Operation Teams" "https://programmingisterrible.com/post/168165747673" 1512347099.0 #s(elfeed-ref "833de27536960aaf7e041eea3947b31085b1e4ba") html nil (dev se unread) "https://programmingisterrible.com/rss" nil) ("programmingisterrible.com" . "https://programmingisterrible.com/post/162346490883") #s(elfeed-entry ("programmingisterrible.com" . "https://programmingisterrible.com/post/162346490883") "How do you cut a monolith in half?" "https://programmingisterrible.com/post/162346490883" 1498627997.0 #s(elfeed-ref "450407c200c96cb3e1e229b7552a4fd21c5959d7") html nil (dev se unread) "https://programmingisterrible.com/rss" nil) ("programmingisterrible.com" . "https://programmingisterrible.com/post/150486782003") #s(elfeed-entry ("programmingisterrible.com" . "https://programmingisterrible.com/post/150486782003") "I like this talk a lot: what modularity is, what we use it for,..." "https://programmingisterrible.com/post/150486782003" 1474022637.0 #s(elfeed-ref "0afe3d2427e465b74ab0c8487a4a9cc29fffbc33") html nil (dev se unread) "https://programmingisterrible.com/rss" nil) ("programmingisterrible.com" . "https://programmingisterrible.com/post/149316275123") #s(elfeed-entry ("programmingisterrible.com" . "https://programmingisterrible.com/post/149316275123") "RIP, Mathie." "https://programmingisterrible.com/post/149316275123" 1471864347.0 #s(elfeed-ref "de54a231d298d8218c89c118b4c3bccb54e277ab") html nil (dev se unread) "https://programmingisterrible.com/rss" nil) ("programmingisterrible.com" . "https://programmingisterrible.com/post/144659440878") #s(elfeed-entry ("programmingisterrible.com" . "https://programmingisterrible.com/post/144659440878") "PapersWeLove London: End-to-End Arguments In System Design" "https://programmingisterrible.com/post/144659440878" 1463764949.0 #s(elfeed-ref "73bfd828d9f6193ac030bbb4efc91a58e32f59e5") html nil (dev se unread) "https://programmingisterrible.com/rss" nil) ("programmingisterrible.com" . "https://programmingisterrible.com/post/144144276173") #s(elfeed-entry ("programmingisterrible.com" . "https://programmingisterrible.com/post/144144276173") "A million things to do with a computer!" "https://programmingisterrible.com/post/144144276173" 1462882046.0 #s(elfeed-ref "c3d72644197cb019eadd382242e45242378663e6") html nil (dev se unread) "https://programmingisterrible.com/rss" nil) ("programmingisterrible.com" . "https://programmingisterrible.com/post/140636464108") #s(elfeed-entry ("programmingisterrible.com" . "https://programmingisterrible.com/post/140636464108") "Addendum: Write code that is easy to delete, not easy to extend." "https://programmingisterrible.com/post/140636464108" 1457371532.0 #s(elfeed-ref "625b998b50dd4135441e86e738c94498ab81a937") html nil (dev se unread) "https://programmingisterrible.com/rss" nil) ("programmingisterrible.com" . "https://programmingisterrible.com/post/139222674273") #s(elfeed-entry ("programmingisterrible.com" . "https://programmingisterrible.com/post/139222674273") "Write code that is easy to delete, not easy to extend." "https://programmingisterrible.com/post/139222674273" 1455357143.0 #s(elfeed-ref "d9bd482f5519a7ad584151df4ffd2db50abd4125") html nil (dev se unread) "https://programmingisterrible.com/rss" nil) ("programmingisterrible.com" . "https://programmingisterrible.com/post/137848667118") #s(elfeed-entry ("programmingisterrible.com" . "https://programmingisterrible.com/post/137848667118") "This is short, and packed with the voice of experience." "https://programmingisterrible.com/post/137848667118" 1453513846.0 #s(elfeed-ref "0959b38a690842e24e5d6cc032bcb4e9e0cd4edd") html nil (dev se unread) "https://programmingisterrible.com/rss" nil) ("programmingisterrible.com" . "https://programmingisterrible.com/post/118990527288") #s(elfeed-entry ("programmingisterrible.com" . "https://programmingisterrible.com/post/118990527288") "I got my talk transcribed, and now it has subtitles in english." "https://programmingisterrible.com/post/118990527288" 1431653637.0 #s(elfeed-ref "434bdcc4696171f4de40e603804cb2a3dce9217e") html nil (dev se unread) "https://programmingisterrible.com/rss" nil) ("programmingisterrible.com" . "https://programmingisterrible.com/post/116698171738") #s(elfeed-entry ("programmingisterrible.com" . "https://programmingisterrible.com/post/116698171738") "Nothing is more indicative of a bullshit job than the interview" "https://programmingisterrible.com/post/116698171738" 1429329320.0 #s(elfeed-ref "f0ba5780a3fb282beaccad85098f5818b1e53f6f") html nil (dev se unread) "https://programmingisterrible.com/rss" nil) ("programmingisterrible.com" . "https://programmingisterrible.com/post/116678132013") #s(elfeed-entry ("programmingisterrible.com" . "https://programmingisterrible.com/post/116678132013") "What Your Open Source Culture Really Says, Part One" "https://programmingisterrible.com/post/116678132013" 1429311884.0 #s(elfeed-ref "2b5c97e1f6503619711b9362d197362f518d87e6") html nil (dev se unread) "https://programmingisterrible.com/rss" nil) ("programmingisterrible.com" . "https://programmingisterrible.com/post/116589898878") #s(elfeed-entry ("programmingisterrible.com" . "https://programmingisterrible.com/post/116589898878") "How to burn your audience on twitter." "https://programmingisterrible.com/post/116589898878" 1429222543.0 #s(elfeed-ref "15bbc2f926cc07ca1039e66834e78ae2cf9e8873") html nil (dev se unread) "https://programmingisterrible.com/rss" nil) ("programmingisterrible.com" . "https://programmingisterrible.com/post/116342157158") #s(elfeed-entry ("programmingisterrible.com" . "https://programmingisterrible.com/post/116342157158") "(╯°□°)╯︵ ┻━┻" "https://programmingisterrible.com/post/116342157158" 1428973370.0 #s(elfeed-ref "f0a37db09bc9665a05a2761406b43af0eb3c77af") html nil (dev se unread) "https://programmingisterrible.com/rss" nil) ("programmingisterrible.com" . "https://programmingisterrible.com/post/113428268598") #s(elfeed-entry ("programmingisterrible.com" . "https://programmingisterrible.com/post/113428268598") "How not to advertise for a job in London" "https://programmingisterrible.com/post/113428268598" 1426170423.0 #s(elfeed-ref "fb2013c45a10af0d1b101de45a04f02e59ca71f8") html nil (dev se unread) "https://programmingisterrible.com/rss" nil) ("programmingisterrible.com" . "https://programmingisterrible.com/post/112612689998") #s(elfeed-entry ("programmingisterrible.com" . "https://programmingisterrible.com/post/112612689998") "San Francisco for Londoners" "https://programmingisterrible.com/post/112612689998" 1425401453.0 #s(elfeed-ref "f026506869d695796cb2583256e0efbfda9b854e") html nil (dev se unread) "https://programmingisterrible.com/rss" nil) ("tim.mcnamara.nz" . "https://tim.mcnamara.nz/post/189698803212") #s(elfeed-entry ("tim.mcnamara.nz" . "https://tim.mcnamara.nz/post/189698803212") "Interrupt by Tim McNamara (2019)" "https://tim.mcnamara.nz/post/189698803212" 1576481339.0 #s(elfeed-ref "0d24a613f1e2e24af0aac5281ab03d7a012f2e79") html nil (dev rust unread) "https://tim.mcnamara.nz/rss" (:categories ("digital art" "lsystems" "l-systems"))) ("tim.mcnamara.nz" . "https://tim.mcnamara.nz/post/188733729327") #s(elfeed-entry ("tim.mcnamara.nz" . "https://tim.mcnamara.nz/post/188733729327") "Rust 2020: Let’s embrace the Eternal September" "https://tim.mcnamara.nz/post/188733729327" 1572573200.0 #s(elfeed-ref "7afb5fea842f5642340614c7470083ca5d2c2c33") html nil (dev rust unread) "https://tim.mcnamara.nz/rss" (:categories ("rust2020" "rustlang" "rust"))) ("tim.mcnamara.nz" . "https://tim.mcnamara.nz/post/188579994977") #s(elfeed-entry ("tim.mcnamara.nz" . "https://tim.mcnamara.nz/post/188579994977") "The short term origins of legacy systems" "https://tim.mcnamara.nz/post/188579994977" 1571996147.0 #s(elfeed-ref "e5b96f1842034de45c0ec7ba66e91afe7e504a9e") html nil (dev rust unread) "https://tim.mcnamara.nz/rss" (:categories ("technology" "standards" "society"))) ("tim.mcnamara.nz" . "https://tim.mcnamara.nz/post/178475377027") #s(elfeed-entry ("tim.mcnamara.nz" . "https://tim.mcnamara.nz/post/178475377027") "Write your next C extension in Rust" "https://tim.mcnamara.nz/post/178475377027" 1537953995.0 #s(elfeed-ref "cae71f81652622a91f733fe6e540b2747cbf8941") html nil (dev rust unread) "https://tim.mcnamara.nz/rss" (:categories ("rustlang" "programming"))) ("tim.mcnamara.nz" . "https://tim.mcnamara.nz/post/177648171567") #s(elfeed-entry ("tim.mcnamara.nz" . "https://tim.mcnamara.nz/post/177648171567") "Photo" "https://tim.mcnamara.nz/post/177648171567" 1535870552.0 #s(elfeed-ref "c90523ede5113c7eb03e87558beda38179384ed3") html nil (dev rust unread) "https://tim.mcnamara.nz/rss" (:categories ("strange attractor" "chaos" "digital art"))) ("tim.mcnamara.nz" . "https://tim.mcnamara.nz/post/177562206357") #s(elfeed-entry ("tim.mcnamara.nz" . "https://tim.mcnamara.nz/post/177562206357") "Bird sightings for Tui (Prosthemadera-novaeseelandiae), Kākā..." "https://tim.mcnamara.nz/post/177562206357" 1535659125.0 #s(elfeed-ref "bd6578fdceb9730834761106b11dc650d8d11fe0") html nil (dev rust unread) "https://tim.mcnamara.nz/rss" (:categories ("citizen science" "conservation"))) ("tim.mcnamara.nz" . "https://tim.mcnamara.nz/post/177172657187") #s(elfeed-entry ("tim.mcnamara.nz" . "https://tim.mcnamara.nz/post/177172657187") "Implementing the harmonic mean and geometric mean as user-defined aggregates in PostgreSQL" "https://tim.mcnamara.nz/post/177172657187" 1534704975.0 #s(elfeed-ref "7ff10117cfac9504f3465c15dafaaaa440200ee7") html nil (dev rust unread) "https://tim.mcnamara.nz/rss" (:categories ("programming" "postgresql" "sql"))) ("tim.mcnamara.nz" . "https://tim.mcnamara.nz/post/176906903912") #s(elfeed-entry ("tim.mcnamara.nz" . "https://tim.mcnamara.nz/post/176906903912") "Why writing objects to disk is called “serialization”: a guide for those too scared to ask" "https://tim.mcnamara.nz/post/176906903912" 1534062184.0 #s(elfeed-ref "9257ca10734b1703160d7056f17d1d16644e6580") html nil (dev rust unread) "https://tim.mcnamara.nz/rss" (:categories ("programming" "data" "systems programming"))) ("tim.mcnamara.nz" . "https://tim.mcnamara.nz/post/176613460297") #s(elfeed-entry ("tim.mcnamara.nz" . "https://tim.mcnamara.nz/post/176613460297") "You’re wrong about your understanding of the actor model" "https://tim.mcnamara.nz/post/176613460297" 1533360654.0 #s(elfeed-ref "fc9888c093b09990fb85ab28d5f45e3d7367e628") html nil (dev rust unread) "https://tim.mcnamara.nz/rss" (:categories ("actor programming" "erlang" "akka" "systems-programming"))) ("tim.mcnamara.nz" . "https://tim.mcnamara.nz/post/176613232677") #s(elfeed-entry ("tim.mcnamara.nz" . "https://tim.mcnamara.nz/post/176613232677") "Avoid DIY Encryption by Learning About Encryption" "https://tim.mcnamara.nz/post/176613232677" 1484218800.0 #s(elfeed-ref "d74ccbde00cf1f9cbe759aecce85ea67fae7c41d") html nil (dev rust unread) "https://tim.mcnamara.nz/rss" (:categories ("python" "encryption" "python programming"))) ("tim.mcnamara.nz" . "https://tim.mcnamara.nz/post/176613307022") #s(elfeed-entry ("tim.mcnamara.nz" . "https://tim.mcnamara.nz/post/176613307022") "IO Completion Ports (IOCP) and Asynchronous I/O through STDIN, STDOUT and STDERR" "https://tim.mcnamara.nz/post/176613307022" 1484171580.0 #s(elfeed-ref "e2eccccb6fab53975267a6a2b8180f8c5d56c16f") html nil (dev rust unread) "https://tim.mcnamara.nz/rss" (:categories ("windows" "systems programming" "i/o" "python" "python programming"))) ("tim.mcnamara.nz" . "https://tim.mcnamara.nz/post/176613027917") #s(elfeed-entry ("tim.mcnamara.nz" . "https://tim.mcnamara.nz/post/176613027917") "If Rust doesn’t have exceptions, what does it have?" "https://tim.mcnamara.nz/post/176613027917" 1476591193.0 #s(elfeed-ref "0f267dc25d5a79d521f74ef546638043c8d555b7") html nil (dev rust unread) "https://tim.mcnamara.nz/rss" (:categories ("rust" "systems-programming"))) ("tim.mcnamara.nz" . "https://tim.mcnamara.nz/post/131939605962") #s(elfeed-entry ("tim.mcnamara.nz" . "https://tim.mcnamara.nz/post/131939605962") "Safe Harbour" "https://tim.mcnamara.nz/post/131939605962" 1445846447.0 #s(elfeed-ref "ee7e669d80e5361058bb4f3724fdbeedf898a2ab") html nil (dev rust unread) "https://tim.mcnamara.nz/rss" (:categories ("watercolor" "original content"))) ("tim.mcnamara.nz" . "https://tim.mcnamara.nz/post/116520925447") #s(elfeed-entry ("tim.mcnamara.nz" . "https://tim.mcnamara.nz/post/116520925447") "How to contribute to open source" "https://tim.mcnamara.nz/post/116520925447" 1429151185.0 #s(elfeed-ref "a73321025df2169e5ac74f470fc83fbf539cb881") html nil (dev rust unread) "https://tim.mcnamara.nz/rss" (:categories ("open source" "osos2015" "open culture" "cc by 3.0 nz"))) ("tim.mcnamara.nz" . "https://tim.mcnamara.nz/post/103846216302") #s(elfeed-entry ("tim.mcnamara.nz" . "https://tim.mcnamara.nz/post/103846216302") "\"Your very existence on this day is contingent on decisions made by people hundreds, thousands, and...\"" "https://tim.mcnamara.nz/post/103846216302" 1417222058.0 #s(elfeed-ref "e80f1d72b447f54cecf75761e3badce3a1e0c596") html nil (dev rust unread) "https://tim.mcnamara.nz/rss" nil) ("tim.mcnamara.nz" . "https://tim.mcnamara.nz/post/103333814732") #s(elfeed-entry ("tim.mcnamara.nz" . "https://tim.mcnamara.nz/post/103333814732") "Photo" "https://tim.mcnamara.nz/post/103333814732" 1416711282.0 #s(elfeed-ref "ba87f820763782ce30e30ea2373276527bf0fb20") html nil (dev rust unread) "https://tim.mcnamara.nz/rss" (:categories ("art" "generative art"))) ("tim.mcnamara.nz" . "https://tim.mcnamara.nz/post/100278999587") #s(elfeed-entry ("tim.mcnamara.nz" . "https://tim.mcnamara.nz/post/100278999587") "Ideas about the future" "https://tim.mcnamara.nz/post/100278999587" 1413591360.0 #s(elfeed-ref "663e1a808f4bf8c0ccd23a6b4f99eaa94ebc5be1") html nil (dev rust unread) "https://tim.mcnamara.nz/rss" (:categories ("predictions" "futurology" "guesses"))) ("tim.mcnamara.nz" . "https://tim.mcnamara.nz/post/97038312997") #s(elfeed-entry ("tim.mcnamara.nz" . "https://tim.mcnamara.nz/post/97038312997") "Pixels from Botticelli’s Primavera ordered." "https://tim.mcnamara.nz/post/97038312997" 1410242421.0 #s(elfeed-ref "4d2b60e1c211578c837dd3837c780863ded3bdc1") html nil (dev rust unread) "https://tim.mcnamara.nz/rss" (:categories ("art" "digital art" "botticelli"))) ("tim.mcnamara.nz" . "https://tim.mcnamara.nz/post/96687595307") #s(elfeed-entry ("tim.mcnamara.nz" . "https://tim.mcnamara.nz/post/96687595307") "Photo" "https://tim.mcnamara.nz/post/96687595307" 1409901840.0 #s(elfeed-ref "b61e6fee5a4115cbc8325d9b27ef68843b2d5bfd") html nil (dev rust unread) "https://tim.mcnamara.nz/rss" (:categories ("processing" "perlin noise" "art" "p5" "blue"))) ("tim.mcnamara.nz" . "https://tim.mcnamara.nz/post/96670713097") #s(elfeed-entry ("tim.mcnamara.nz" . "https://tim.mcnamara.nz/post/96670713097") "Photos from last night’s Natural Language Processing..." "https://tim.mcnamara.nz/post/96670713097" 1409884680.0 #s(elfeed-ref "a9e10844c38320b0d9f9c49000a954555bfb1eaf") html nil (dev rust unread) "https://tim.mcnamara.nz/rss" (:categories ("meetup"))) ("kennykerr.ca" . "http://kennykerr.ca/?p=959") #s(elfeed-entry ("kennykerr.ca" . "http://kennykerr.ca/?p=959") "Rust: an IDE for your project" "https://kennykerr.ca/2019/12/06/rust-an-ide-for-your-project/" 1575643359.0 #s(elfeed-ref "a5d147bf97761955d717cb8eb94b47042724f068") html nil (C dev unread) "https://kennykerr.ca/feed/" (:authors ((:name "Kenny Kerr")) :categories ("Uncategorized"))) ("kennykerr.ca" . "http://kennykerr.ca/?p=944") #s(elfeed-entry ("kennykerr.ca" . "http://kennykerr.ca/?p=944") "Rust: your first package" "https://kennykerr.ca/2019/11/25/rust-your-first-package/" 1574699013.0 #s(elfeed-ref "16063f7f5340826ab0a449770b3e1272b16bc191") html nil (C dev unread) "https://kennykerr.ca/feed/" (:authors ((:name "Kenny Kerr")) :categories ("Uncategorized"))) ("kennykerr.ca" . "http://kennykerr.ca/?p=920") #s(elfeed-entry ("kennykerr.ca" . "http://kennykerr.ca/?p=920") "Rust: getting started" "https://kennykerr.ca/2019/11/18/rust-getting-started/" 1574093629.0 #s(elfeed-ref "627934181665ef92208510a6bc1170dd89f0baed") html nil (C dev unread) "https://kennykerr.ca/feed/" (:authors ((:name "Kenny Kerr")) :categories ("Uncategorized"))) ("kennykerr.ca" . "http://kennykerr.ca/?p=913") #s(elfeed-entry ("kennykerr.ca" . "http://kennykerr.ca/?p=913") "My Rust adventure begins" "https://kennykerr.ca/2019/11/05/rust/" 1572966341.0 #s(elfeed-ref "91f97cef687b87317d34d52904d71601b04144c2") html nil (C dev unread) "https://kennykerr.ca/feed/" (:authors ((:name "Kenny Kerr")) :categories ("Uncategorized"))) ("kennykerr.ca" . "http://kennykerr.ca/?p=908") #s(elfeed-entry ("kennykerr.ca" . "http://kennykerr.ca/?p=908") "C++/WinRT and xlang repos" "https://kennykerr.ca/2019/10/09/xlang-cppwinrt-repos/" 1570639947.0 #s(elfeed-ref "8078d8d83d02d63ff5fe56d42f7e8ee7c137596a") html nil (C dev unread) "https://kennykerr.ca/feed/" (:authors ((:name "Kenny Kerr")) :categories ("Uncategorized"))) ("kennykerr.ca" . "http://kennykerr.ca/?p=903") #s(elfeed-entry ("kennykerr.ca" . "http://kennykerr.ca/?p=903") "Kenny Kerr on the MS Dev Show" "https://kennykerr.ca/2019/07/17/ms-dev-show/" 1563370005.0 #s(elfeed-ref "6b702907779ffa5757abcff9f28af619d59f3abe") html nil (C dev unread) "https://kennykerr.ca/feed/" (:authors ((:name "Kenny Kerr")) :categories ("Uncategorized"))) ("kennykerr.ca" . "http://kennykerr.ca/?p=901") #s(elfeed-entry ("kennykerr.ca" . "http://kennykerr.ca/?p=901") "The Old New Thing on C++/WinRT" "https://kennykerr.ca/2019/07/01/oldnewthing-on-cppwinrt/" 1562013588.0 #s(elfeed-ref "fec42e97443ad4f69ccd028a1bb2bd7a5e107839") html nil (C dev unread) "https://kennykerr.ca/feed/" (:authors ((:name "Kenny Kerr")) :categories ("Uncategorized"))) ("kennykerr.ca" . "http://kennykerr.ca/?p=899") #s(elfeed-entry ("kennykerr.ca" . "http://kennykerr.ca/?p=899") "Meet C++/WinRT 2.0: resume_foreground Improvements" "https://kennykerr.ca/2019/07/01/cppwinrt-resume_foreground-improvements/" 1561989819.0 #s(elfeed-ref "3eccd17c28a09b37f5e61ce2a15f4b6ae3e83016") html nil (C dev unread) "https://kennykerr.ca/feed/" (:authors ((:name "Kenny Kerr")) :categories ("Uncategorized"))) ("kennykerr.ca" . "http://kennykerr.ca/?p=895") #s(elfeed-entry ("kennykerr.ca" . "http://kennykerr.ca/?p=895") "Meet C++/WinRT 2.0: Fewer Dependencies" "https://kennykerr.ca/2019/06/19/cppwinrt-fewer-dependencies/" 1560949147.0 #s(elfeed-ref "48f3903195b6f730ffddb407fa0e0d12b1c49785") html nil (C dev unread) "https://kennykerr.ca/feed/" (:authors ((:name "Kenny Kerr")) :categories ("Uncategorized"))) ("kennykerr.ca" . "http://kennykerr.ca/?p=889") #s(elfeed-entry ("kennykerr.ca" . "http://kennykerr.ca/?p=889") "Meet C++/WinRT 2.0: Async Timeouts Made Easy" "https://kennykerr.ca/2019/06/10/cppwinrt-async-timeouts-made-easy/" 1560172180.0 #s(elfeed-ref "55607f22e3d3b733d1228c20359c5730fe188312") html nil (C dev unread) "https://kennykerr.ca/feed/" (:authors ((:name "Kenny Kerr")) :categories ("Uncategorized"))) ("joeduffyblog.com" . "http://joeduffyblog.com/2019/09/05/journey-to-pulumi-1-0/") #s(elfeed-entry ("joeduffyblog.com" . "http://joeduffyblog.com/2019/09/05/journey-to-pulumi-1-0/") "Journey to Pulumi 1.0" "http://joeduffyblog.com/2019/09/05/journey-to-pulumi-1-0/" 1567684800.0 #s(elfeed-ref "31a4693a9c8fe11ecd75f374f068608e6a1cc2d4") html nil (dev se unread) "http://joeduffyblog.com/feed.xml" (:categories ("Pulumi" "Pulumi"))) ("joeduffyblog.com" . "http://joeduffyblog.com/2018/07/25/program-the-cloud-with-12-pulumi-pearls/") #s(elfeed-entry ("joeduffyblog.com" . "http://joeduffyblog.com/2018/07/25/program-the-cloud-with-12-pulumi-pearls/") "Program the Cloud with 12 Pulumi Pearls" "http://joeduffyblog.com/2018/07/25/program-the-cloud-with-12-pulumi-pearls/" 1532545200.0 #s(elfeed-ref "d03d78aa0d38b65c258afab73c69ac1989bd7aed") html nil (dev se unread) "http://joeduffyblog.com/feed.xml" (:categories ("Pulumi" "AWS" "Containers" "Serverless" "Pulumi"))) ("joeduffyblog.com" . "http://joeduffyblog.com/2018/06/18/hello-pulumi/") #s(elfeed-entry ("joeduffyblog.com" . "http://joeduffyblog.com/2018/06/18/hello-pulumi/") "Hello, Pulumi!" "http://joeduffyblog.com/2018/06/18/hello-pulumi/" 1529343000.0 #s(elfeed-ref "91ac30e528912662c9a8de92c81a0045d757371f") html nil (dev se unread) "http://joeduffyblog.com/feed.xml" (:categories ("Pulumi" "Pulumi"))) ("joeduffyblog.com" . "http://joeduffyblog.com/2017/06/01/an-update-on-me-pulumi/") #s(elfeed-entry ("joeduffyblog.com" . "http://joeduffyblog.com/2017/06/01/an-update-on-me-pulumi/") "A Brief Update on Me (in a Word, Pulumi)" "http://joeduffyblog.com/2017/06/01/an-update-on-me-pulumi/" 1496331000.0 #s(elfeed-ref "e5229d4d25c87485530fec232ddf98d0cdb9db13") html nil (dev se unread) "http://joeduffyblog.com/feed.xml" nil) ("joeduffyblog.com" . "http://joeduffyblog.com/2016/11/30/15-years-of-concurrency/") #s(elfeed-entry ("joeduffyblog.com" . "http://joeduffyblog.com/2016/11/30/15-years-of-concurrency/") "15 Years of Concurrency" "http://joeduffyblog.com/2016/11/30/15-years-of-concurrency/" 1480557600.0 #s(elfeed-ref "277188303d86cc29c952584f6ee984e7e96365a5") html nil (dev se unread) "http://joeduffyblog.com/feed.xml" nil) ("joeduffyblog.com" . "http://joeduffyblog.com/2016/04/10/performance-culture/") #s(elfeed-entry ("joeduffyblog.com" . "http://joeduffyblog.com/2016/04/10/performance-culture/") "Performance Culture" "http://joeduffyblog.com/2016/04/10/performance-culture/" 1460318400.0 #s(elfeed-ref "9a373234b741fa3a0107415b4db2707b45ee9546") html nil (dev se unread) "http://joeduffyblog.com/feed.xml" nil) ("joeduffyblog.com" . "http://joeduffyblog.com/2016/02/07/the-error-model/") #s(elfeed-entry ("joeduffyblog.com" . "http://joeduffyblog.com/2016/02/07/the-error-model/") "The Error Model" "http://joeduffyblog.com/2016/02/07/the-error-model/" 1454869740.0 #s(elfeed-ref "8010b04bad1a4e35f8b6a91300c60ceac5a12912") html nil (dev se unread) "http://joeduffyblog.com/feed.xml" nil) ("joeduffyblog.com" . "http://joeduffyblog.com/2015/12/19/safe-native-code/") #s(elfeed-entry ("joeduffyblog.com" . "http://joeduffyblog.com/2015/12/19/safe-native-code/") "Safe Native Code" "http://joeduffyblog.com/2015/12/19/safe-native-code/" 1450558980.0 #s(elfeed-ref "3835ceed04cc94527d1f28a5e7b21536fcfa5e63") html nil (dev se unread) "http://joeduffyblog.com/feed.xml" nil) ("joeduffyblog.com" . "http://joeduffyblog.com/2015/11/19/asynchronous-everything/") #s(elfeed-entry ("joeduffyblog.com" . "http://joeduffyblog.com/2015/11/19/asynchronous-everything/") "Asynchronous Everything" "http://joeduffyblog.com/2015/11/19/asynchronous-everything/" 1447977600.0 #s(elfeed-ref "2b37cf4983c39b46592a035ebe7611b6e7ee579e") html nil (dev se unread) "http://joeduffyblog.com/feed.xml" nil) ("joeduffyblog.com" . "http://joeduffyblog.com/2015/11/10/objects-as-secure-capabilities/") #s(elfeed-entry ("joeduffyblog.com" . "http://joeduffyblog.com/2015/11/10/objects-as-secure-capabilities/") "Objects as Secure Capabilities" "http://joeduffyblog.com/2015/11/10/objects-as-secure-capabilities/" 1447200180.0 #s(elfeed-ref "8095b728eec133e93cf96bed419e0f33dba98c22") html nil (dev se unread) "http://joeduffyblog.com/feed.xml" nil) ("eli.thegreenplace.net" . "tag:eli.thegreenplace.net,2020-01-07:/2020/pubsub-using-channels-in-go/") #s(elfeed-entry ("eli.thegreenplace.net" . "tag:eli.thegreenplace.net,2020-01-07:/2020/pubsub-using-channels-in-go/") "PubSub using channels in Go" "https://eli.thegreenplace.net/2020/pubsub-using-channels-in-go/" 1578378780.0 #s(elfeed-ref "c2950f574ec92adce2873b874b8f61092bd1890f") html nil (dev python unread) "https://eli.thegreenplace.net/feeds/all.atom.xml" (:authors ((:name "Eli Bendersky")) :categories ("Concurrency" "Go") :author "Eli Bendersky")) ("eli.thegreenplace.net" . "tag:eli.thegreenplace.net,2020-01-02:/2020/my-reading-habits/") #s(elfeed-entry ("eli.thegreenplace.net" . "tag:eli.thegreenplace.net,2020-01-02:/2020/my-reading-habits/") "My Reading Habits" "https://eli.thegreenplace.net/2020/my-reading-habits/" 1577943000.0 #s(elfeed-ref "ab32b5835fd4cff686a0191016f01c7f5823732e") html nil (dev python unread) "https://eli.thegreenplace.net/feeds/all.atom.xml" (:authors ((:name "Eli Bendersky")) :categories ("Reading") :author "Eli Bendersky")) ("eli.thegreenplace.net" . "tag:eli.thegreenplace.net,2019-12-31:/2019/summary-of-reading-october-december-2019/") #s(elfeed-entry ("eli.thegreenplace.net" . "tag:eli.thegreenplace.net,2019-12-31:/2019/summary-of-reading-october-december-2019/") "Summary of reading: October - December 2019" "https://eli.thegreenplace.net/2019/summary-of-reading-october-december-2019/" 1577769900.0 #s(elfeed-ref "f91d7d1ebade3cb944533d2fcfa71cf5ecb95f47") html nil (dev python unread) "https://eli.thegreenplace.net/feeds/all.atom.xml" (:authors ((:name "Eli Bendersky")) :categories ("Book reviews") :author "Eli Bendersky")) ("eli.thegreenplace.net" . "tag:eli.thegreenplace.net,2019-11-23:/2019/beating-c-with-400-lines-of-unoptimized-assembly/") #s(elfeed-entry ("eli.thegreenplace.net" . "tag:eli.thegreenplace.net,2019-11-23:/2019/beating-c-with-400-lines-of-unoptimized-assembly/") "\"Beating\" C with 400 lines of unoptimized assembly" "https://eli.thegreenplace.net/2019/beating-c-with-400-lines-of-unoptimized-assembly/" 1574502360.0 #s(elfeed-ref "cdf89fc9ed7b544b13d8fed9d032d0f62c8ab034") html nil (dev python unread) "https://eli.thegreenplace.net/feeds/all.atom.xml" (:authors ((:name "Eli Bendersky")) :categories ("Assembly" "C & C++" "Go") :author "Eli Bendersky")) ("eli.thegreenplace.net" . "tag:eli.thegreenplace.net,2019-11-06:/2019/how-to-send-good-pull-requests-on-github/") #s(elfeed-entry ("eli.thegreenplace.net" . "tag:eli.thegreenplace.net,2019-11-06:/2019/how-to-send-good-pull-requests-on-github/") "How to send good pull requests on GitHub" "https://eli.thegreenplace.net/2019/how-to-send-good-pull-requests-on-github/" 1573020900.0 #s(elfeed-ref "ce5366fb7d8936cbd0e9e875ee3fc15c605460d0") html nil (dev python unread) "https://eli.thegreenplace.net/feeds/all.atom.xml" (:authors ((:name "Eli Bendersky")) :categories ("Software & Tools" "Version control") :author "Eli Bendersky")) ("eli.thegreenplace.net" . "tag:eli.thegreenplace.net,2019-10-21:/2019/diffie-hellman-key-exchange/") #s(elfeed-entry ("eli.thegreenplace.net" . "tag:eli.thegreenplace.net,2019-10-21:/2019/diffie-hellman-key-exchange/") "Diffie-Hellman Key Exchange" "https://eli.thegreenplace.net/2019/diffie-hellman-key-exchange/" 1571636220.0 #s(elfeed-ref "285b43203ef1566df6dfa3a229e1c834d0bb1f01") html nil (dev python unread) "https://eli.thegreenplace.net/feeds/all.atom.xml" (:authors ((:name "Eli Bendersky")) :categories ("Math") :author "Eli Bendersky")) ("eli.thegreenplace.net" . "tag:eli.thegreenplace.net,2019-10-01:/2019/simple-go-project-layout-with-modules/") #s(elfeed-entry ("eli.thegreenplace.net" . "tag:eli.thegreenplace.net,2019-10-01:/2019/simple-go-project-layout-with-modules/") "Simple Go project layout with modules" "https://eli.thegreenplace.net/2019/simple-go-project-layout-with-modules/" 1569907980.0 #s(elfeed-ref "18f5783e9a945835406f04404fbc678e51e0f50a") html nil (dev python unread) "https://eli.thegreenplace.net/feeds/all.atom.xml" (:authors ((:name "Eli Bendersky")) :categories ("Go") :author "Eli Bendersky")) ("eli.thegreenplace.net" . "tag:eli.thegreenplace.net,2019-09-30:/2019/summary-of-reading-july-september-2019/") #s(elfeed-entry ("eli.thegreenplace.net" . "tag:eli.thegreenplace.net,2019-09-30:/2019/summary-of-reading-july-september-2019/") "Summary of reading: July - September 2019" "https://eli.thegreenplace.net/2019/summary-of-reading-july-september-2019/" 1569823200.0 #s(elfeed-ref "39a72ed9a28f8be68db2a742afdbfad1bd8938cd") html nil (dev python unread) "https://eli.thegreenplace.net/feeds/all.atom.xml" (:authors ((:name "Eli Bendersky")) :categories ("Book reviews") :author "Eli Bendersky")) ("eli.thegreenplace.net" . "tag:eli.thegreenplace.net,2019-09-16:/2019/go-internals-capturing-loop-variables-in-closures/") #s(elfeed-entry ("eli.thegreenplace.net" . "tag:eli.thegreenplace.net,2019-09-16:/2019/go-internals-capturing-loop-variables-in-closures/") "Go internals: capturing loop variables in closures" "https://eli.thegreenplace.net/2019/go-internals-capturing-loop-variables-in-closures/" 1568612520.0 #s(elfeed-ref "6e0f7f81024528af56f9779b1c55b7513b1155c3") html nil (dev python unread) "https://eli.thegreenplace.net/feeds/all.atom.xml" (:authors ((:name "Eli Bendersky")) :categories ("Go") :author "Eli Bendersky")) ("eli.thegreenplace.net" . "tag:eli.thegreenplace.net,2019-09-03:/2019/rsa-theory-and-implementation/") #s(elfeed-entry ("eli.thegreenplace.net" . "tag:eli.thegreenplace.net,2019-09-03:/2019/rsa-theory-and-implementation/") "RSA - theory and implementation" "https://eli.thegreenplace.net/2019/rsa-theory-and-implementation/" 1567488240.0 #s(elfeed-ref "01baa96d1d52a9a2b531b6d26047ed98d580cda0") html nil (dev python unread) "https://eli.thegreenplace.net/feeds/all.atom.xml" (:authors ((:name "Eli Bendersky")) :categories ("Math" "Programming" "Go") :author "Eli Bendersky")) ("eli.thegreenplace.net" . "tag:eli.thegreenplace.net,2019-08-28:/2019/the-chinese-remainder-theorem/") #s(elfeed-entry ("eli.thegreenplace.net" . "tag:eli.thegreenplace.net,2019-08-28:/2019/the-chinese-remainder-theorem/") "The Chinese Remainder Theorem" "https://eli.thegreenplace.net/2019/the-chinese-remainder-theorem/" 1566972000.0 #s(elfeed-ref "ca7a91481f0422cb6e585e73f7c3aa1b1b1cae7d") html nil (dev python unread) "https://eli.thegreenplace.net/feeds/all.atom.xml" (:authors ((:name "Eli Bendersky")) :categories ("Math") :author "Eli Bendersky")) ("eli.thegreenplace.net" . "tag:eli.thegreenplace.net,2019-08-03:/2019/aes-encryption-of-files-in-go/") #s(elfeed-entry ("eli.thegreenplace.net" . "tag:eli.thegreenplace.net,2019-08-03:/2019/aes-encryption-of-files-in-go/") "AES encryption of files in Go" "https://eli.thegreenplace.net/2019/aes-encryption-of-files-in-go/" 1564845120.0 #s(elfeed-ref "f3d72dda13b82ce7ccd5cc6c2be2d76029020b01") html nil (dev python unread) "https://eli.thegreenplace.net/feeds/all.atom.xml" (:authors ((:name "Eli Bendersky")) :categories ("Go") :author "Eli Bendersky")) ("eli.thegreenplace.net" . "tag:eli.thegreenplace.net,2019-07-22:/2019/faster-xml-stream-processing-in-go/") #s(elfeed-entry ("eli.thegreenplace.net" . "tag:eli.thegreenplace.net,2019-07-22:/2019/faster-xml-stream-processing-in-go/") "Faster XML stream processing in Go" "https://eli.thegreenplace.net/2019/faster-xml-stream-processing-in-go/" 1563773820.0 #s(elfeed-ref "d49aa6e394a10ace569df533b2eba9bd546ea164") html nil (dev python unread) "https://eli.thegreenplace.net/feeds/all.atom.xml" (:authors ((:name "Eli Bendersky")) :categories ("Go" "C & C++" "Python") :author "Eli Bendersky")) ("eli.thegreenplace.net" . "tag:eli.thegreenplace.net,2019-07-15:/2019/passing-callbacks-and-pointers-to-cgo/") #s(elfeed-entry ("eli.thegreenplace.net" . "tag:eli.thegreenplace.net,2019-07-15:/2019/passing-callbacks-and-pointers-to-cgo/") "Passing callbacks and pointers to Cgo" "https://eli.thegreenplace.net/2019/passing-callbacks-and-pointers-to-cgo/" 1563169140.0 #s(elfeed-ref "bf75d2f9593d10f7f1a00b5d81757a4424b0b039") html nil (dev python unread) "https://eli.thegreenplace.net/feeds/all.atom.xml" (:authors ((:name "Eli Bendersky")) :categories ("Go" "C & C++") :author "Eli Bendersky")) ("eli.thegreenplace.net" . "tag:eli.thegreenplace.net,2019-07-04:/2019/go-compiler-internals-adding-a-new-statement-to-go-part-2/") #s(elfeed-entry ("eli.thegreenplace.net" . "tag:eli.thegreenplace.net,2019-07-04:/2019/go-compiler-internals-adding-a-new-statement-to-go-part-2/") "Go compiler internals: adding a new statement to Go - Part 2" "https://eli.thegreenplace.net/2019/go-compiler-internals-adding-a-new-statement-to-go-part-2/" 1562219760.0 #s(elfeed-ref "b51c3a093be3f7c5f8206403c3a7b64b623d28db") html nil (dev python unread) "https://eli.thegreenplace.net/feeds/all.atom.xml" (:authors ((:name "Eli Bendersky")) :categories ("Go" "Compilation") :author "Eli Bendersky")) ("eli.thegreenplace.net" . "tag:eli.thegreenplace.net,2019-07-03:/2019/go-compiler-internals-adding-a-new-statement-to-go-part-1/") #s(elfeed-entry ("eli.thegreenplace.net" . "tag:eli.thegreenplace.net,2019-07-03:/2019/go-compiler-internals-adding-a-new-statement-to-go-part-1/") "Go compiler internals: adding a new statement to Go - Part 1" "https://eli.thegreenplace.net/2019/go-compiler-internals-adding-a-new-statement-to-go-part-1/" 1562132580.0 #s(elfeed-ref "4e163ae9971766a7517112fed7df1f14f9400850") html nil (dev python unread) "https://eli.thegreenplace.net/feeds/all.atom.xml" (:authors ((:name "Eli Bendersky")) :categories ("Go" "Compilation") :author "Eli Bendersky")) ("eli.thegreenplace.net" . "tag:eli.thegreenplace.net,2019-06-29:/2019/summary-of-reading-april-june-2019/") #s(elfeed-entry ("eli.thegreenplace.net" . "tag:eli.thegreenplace.net,2019-06-29:/2019/summary-of-reading-april-june-2019/") "Summary of reading: April - June 2019" "https://eli.thegreenplace.net/2019/summary-of-reading-april-june-2019/" 1561789080.0 #s(elfeed-ref "846e7a5b23d19a334f16406b2bd27dad4362f775") html nil (dev python unread) "https://eli.thegreenplace.net/feeds/all.atom.xml" (:authors ((:name "Eli Bendersky")) :categories ("Book reviews") :author "Eli Bendersky")) ("eli.thegreenplace.net" . "tag:eli.thegreenplace.net,2019-05-31:/2019/geoip-service-as-a-cloud-function/") #s(elfeed-entry ("eli.thegreenplace.net" . "tag:eli.thegreenplace.net,2019-05-31:/2019/geoip-service-as-a-cloud-function/") "GeoIP service as a cloud function" "https://eli.thegreenplace.net/2019/geoip-service-as-a-cloud-function/" 1559280660.0 #s(elfeed-ref "2202f7300f1d699c8e59ff33c1c131833e8bbe78") html nil (dev python unread) "https://eli.thegreenplace.net/feeds/all.atom.xml" (:authors ((:name "Eli Bendersky")) :categories ("Go") :author "Eli Bendersky")) ("eli.thegreenplace.net" . "tag:eli.thegreenplace.net,2019-05-07:/2019/to-orm-or-not-to-orm/") #s(elfeed-entry ("eli.thegreenplace.net" . "tag:eli.thegreenplace.net,2019-05-07:/2019/to-orm-or-not-to-orm/") "To ORM or not to ORM" "https://eli.thegreenplace.net/2019/to-orm-or-not-to-orm/" 1557211620.0 #s(elfeed-ref "6df485c1eec8f33ed3e49407618bece21f69856a") html nil (dev python unread) "https://eli.thegreenplace.net/feeds/all.atom.xml" (:authors ((:name "Eli Bendersky")) :categories ("Databases" "Programming" "Go") :author "Eli Bendersky")) ("eli.thegreenplace.net" . "tag:eli.thegreenplace.net,2019-04-25:/2019/implementing-reader-writer-locks/") #s(elfeed-entry ("eli.thegreenplace.net" . "tag:eli.thegreenplace.net,2019-04-25:/2019/implementing-reader-writer-locks/") "Implementing reader-writer locks" "https://eli.thegreenplace.net/2019/implementing-reader-writer-locks/" 1556172540.0 #s(elfeed-ref "07f471ce3fd38f9b269a22ecdee04ba50961da4f") html nil (dev python unread) "https://eli.thegreenplace.net/feeds/all.atom.xml" (:authors ((:name "Eli Bendersky")) :categories ("Go" "Concurrency") :author "Eli Bendersky")) ("eli.thegreenplace.net" . "tag:eli.thegreenplace.net,2019-04-09:/2019/sql-inner-and-outer-joins/") #s(elfeed-entry ("eli.thegreenplace.net" . "tag:eli.thegreenplace.net,2019-04-09:/2019/sql-inner-and-outer-joins/") "SQL inner and outer joins" "https://eli.thegreenplace.net/2019/sql-inner-and-outer-joins/" 1554787680.0 #s(elfeed-ref "1e1d33df1920dffb1bcc982f6074121b83d66ff3") html nil (dev python unread) "https://eli.thegreenplace.net/feeds/all.atom.xml" (:authors ((:name "Eli Bendersky")) :categories ("Databases") :author "Eli Bendersky")) ("eli.thegreenplace.net" . "tag:eli.thegreenplace.net,2019-03-30:/2019/summary-of-reading-january-march-2019/") #s(elfeed-entry ("eli.thegreenplace.net" . "tag:eli.thegreenplace.net,2019-03-30:/2019/summary-of-reading-january-march-2019/") "Summary of reading: January - March 2019" "https://eli.thegreenplace.net/2019/summary-of-reading-january-march-2019/" 1553926200.0 #s(elfeed-ref "4348fc829c3961aa03d73431904b4ce2893650ea") html nil (dev python unread) "https://eli.thegreenplace.net/feeds/all.atom.xml" (:authors ((:name "Eli Bendersky")) :categories ("Book reviews") :author "Eli Bendersky")) ("eli.thegreenplace.net" . "tag:eli.thegreenplace.net,2019-03-27:/2019/design-patterns-in-gos-databasesql-package/") #s(elfeed-entry ("eli.thegreenplace.net" . "tag:eli.thegreenplace.net,2019-03-27:/2019/design-patterns-in-gos-databasesql-package/") "Design patterns in Go's database/sql package" "https://eli.thegreenplace.net/2019/design-patterns-in-gos-databasesql-package/" 1553667900.0 #s(elfeed-ref "68c48c575ea37c2ea01d735457f60bd282d294ea") html nil (dev python unread) "https://eli.thegreenplace.net/feeds/all.atom.xml" (:authors ((:name "Eli Bendersky")) :categories ("Go" "Databases" "Plugins") :author "Eli Bendersky")) ("eli.thegreenplace.net" . "tag:eli.thegreenplace.net,2019-03-19:/2019/does-a-concrete-type-implement-an-interface-in-go/") #s(elfeed-entry ("eli.thegreenplace.net" . "tag:eli.thegreenplace.net,2019-03-19:/2019/does-a-concrete-type-implement-an-interface-in-go/") "Does a concrete type implement an interface in Go?" "https://eli.thegreenplace.net/2019/does-a-concrete-type-implement-an-interface-in-go/" 1552975860.0 #s(elfeed-ref "7014b47e7c78ad7a8ac60840e71e21c0c674d1ab") html nil (dev python unread) "https://eli.thegreenplace.net/feeds/all.atom.xml" (:authors ((:name "Eli Bendersky")) :categories ("Go") :author "Eli Bendersky")) ("eli.thegreenplace.net" . "tag:eli.thegreenplace.net,2019-03-05:/2019/github-webhook-payload-as-a-cloud-function/") #s(elfeed-entry ("eli.thegreenplace.net" . "tag:eli.thegreenplace.net,2019-03-05:/2019/github-webhook-payload-as-a-cloud-function/") "GitHub webhook payload as a cloud function" "https://eli.thegreenplace.net/2019/github-webhook-payload-as-a-cloud-function/" 1551766800.0 #s(elfeed-ref "921daa991b8ad6fca37b9e252e23c8fce1b34e2e") html nil (dev python unread) "https://eli.thegreenplace.net/feeds/all.atom.xml" (:authors ((:name "Eli Bendersky")) :categories ("Go" "Version control") :author "Eli Bendersky")) ("eli.thegreenplace.net" . "tag:eli.thegreenplace.net,2019-02-12:/2019/unix-domain-sockets-in-go/") #s(elfeed-entry ("eli.thegreenplace.net" . "tag:eli.thegreenplace.net,2019-02-12:/2019/unix-domain-sockets-in-go/") "Unix domain sockets in Go" "https://eli.thegreenplace.net/2019/unix-domain-sockets-in-go/" 1549949220.0 #s(elfeed-ref "6b906356d83b3de8e8377aabfbe39115ab9d6a11") html nil (dev python unread) "https://eli.thegreenplace.net/feeds/all.atom.xml" (:authors ((:name "Eli Bendersky")) :categories ("Go" "Linux") :author "Eli Bendersky")) ("eli.thegreenplace.net" . "tag:eli.thegreenplace.net,2019-02-04:/2019/go-json-cookbook/") #s(elfeed-entry ("eli.thegreenplace.net" . "tag:eli.thegreenplace.net,2019-02-04:/2019/go-json-cookbook/") "Go JSON Cookbook" "https://eli.thegreenplace.net/2019/go-json-cookbook/" 1549261260.0 #s(elfeed-ref "a49789e0c3fdb40ffc977d26b6335fc8d8e87383") html nil (dev python unread) "https://eli.thegreenplace.net/feeds/all.atom.xml" (:authors ((:name "Eli Bendersky")) :categories ("Go") :author "Eli Bendersky")) ("eli.thegreenplace.net" . "tag:eli.thegreenplace.net,2019-01-17:/2019/on-concurrency-in-go-http-servers/") #s(elfeed-entry ("eli.thegreenplace.net" . "tag:eli.thegreenplace.net,2019-01-17:/2019/on-concurrency-in-go-http-servers/") "On concurrency in Go HTTP servers" "https://eli.thegreenplace.net/2019/on-concurrency-in-go-http-servers/" 1547705400.0 #s(elfeed-ref "ca46e20289ef09e1642a685a50260c0dae225ef6") html nil (dev python unread) "https://eli.thegreenplace.net/feeds/all.atom.xml" (:authors ((:name "Eli Bendersky")) :categories ("Go" "Concurrency") :author "Eli Bendersky")) ("eli.thegreenplace.net" . "tag:eli.thegreenplace.net,2019-01-09:/2019/summary-of-reading-october-december-2018/") #s(elfeed-entry ("eli.thegreenplace.net" . "tag:eli.thegreenplace.net,2019-01-09:/2019/summary-of-reading-october-december-2018/") "Summary of reading: October - December 2018" "https://eli.thegreenplace.net/2019/summary-of-reading-october-december-2018/" 1547058540.0 #s(elfeed-ref "34c78c746e6f7f9efa8530d25ad02ca31427a5ee") html nil (dev python unread) "https://eli.thegreenplace.net/feeds/all.atom.xml" (:authors ((:name "Eli Bendersky")) :categories ("Book reviews") :author "Eli Bendersky")) ("eli.thegreenplace.net" . "tag:eli.thegreenplace.net,2018-12-24:/2018/beware-of-copying-mutexes-in-go/") #s(elfeed-entry ("eli.thegreenplace.net" . "tag:eli.thegreenplace.net,2018-12-24:/2018/beware-of-copying-mutexes-in-go/") "Beware of copying mutexes in Go" "https://eli.thegreenplace.net/2018/beware-of-copying-mutexes-in-go/" 1545630420.0 #s(elfeed-ref "54c9bdab0562751fefce096728a630655118be55") html nil (dev python unread) "https://eli.thegreenplace.net/feeds/all.atom.xml" (:authors ((:name "Eli Bendersky")) :categories ("Go" "Concurrency") :author "Eli Bendersky")) ("eli.thegreenplace.net" . "tag:eli.thegreenplace.net,2018-12-05:/2018/type-erasure-and-reification/") #s(elfeed-entry ("eli.thegreenplace.net" . "tag:eli.thegreenplace.net,2018-12-05:/2018/type-erasure-and-reification/") "Type erasure and reification" "https://eli.thegreenplace.net/2018/type-erasure-and-reification/" 1543986600.0 #s(elfeed-ref "bec58db62472e9dc85e9fea7b35083c62c4f21c7") html nil (dev python unread) "https://eli.thegreenplace.net/feeds/all.atom.xml" (:authors ((:name "Eli Bendersky")) :categories ("Programming" "C & C++" "Python") :author "Eli Bendersky")) ("eli.thegreenplace.net" . "tag:eli.thegreenplace.net,2018-11-14:/2018/type-inference/") #s(elfeed-entry ("eli.thegreenplace.net" . "tag:eli.thegreenplace.net,2018-11-14:/2018/type-inference/") "Type inference" "https://eli.thegreenplace.net/2018/type-inference/" 1542176160.0 #s(elfeed-ref "169f7fa26690b1796f0d3f4ac83c2f9a177f2d4c") html nil (dev python unread) "https://eli.thegreenplace.net/feeds/all.atom.xml" (:authors ((:name "Eli Bendersky")) :categories ("Python" "Programming" "Haskell") :author "Eli Bendersky")) ("eli.thegreenplace.net" . "tag:eli.thegreenplace.net,2018-11-12:/2018/unification/") #s(elfeed-entry ("eli.thegreenplace.net" . "tag:eli.thegreenplace.net,2018-11-12:/2018/unification/") "Unification" "https://eli.thegreenplace.net/2018/unification/" 1542001740.0 #s(elfeed-ref "e3c53629ecaff8e855bea61a037eb73c2d0ed53c") html nil (dev python unread) "https://eli.thegreenplace.net/feeds/all.atom.xml" (:authors ((:name "Eli Bendersky")) :categories ("Python" "Programming" "Math") :author "Eli Bendersky")) ("eli.thegreenplace.net" . "tag:eli.thegreenplace.net,2018-10-17:/2018/covariance-and-contravariance-in-subtyping/") #s(elfeed-entry ("eli.thegreenplace.net" . "tag:eli.thegreenplace.net,2018-10-17:/2018/covariance-and-contravariance-in-subtyping/") "Covariance and contravariance in subtyping" "https://eli.thegreenplace.net/2018/covariance-and-contravariance-in-subtyping/" 1539754500.0 #s(elfeed-ref "d627e975cfba97feee9e6c4162d0a7de16bc13fb") html nil (dev python unread) "https://eli.thegreenplace.net/feeds/all.atom.xml" (:authors ((:name "Eli Bendersky")) :categories ("Programming" "Python" "C & C++") :author "Eli Bendersky")) ("eli.thegreenplace.net" . "tag:eli.thegreenplace.net,2018-10-04:/2018/go-hits-the-concurrency-nail-right-on-the-head/") #s(elfeed-entry ("eli.thegreenplace.net" . "tag:eli.thegreenplace.net,2018-10-04:/2018/go-hits-the-concurrency-nail-right-on-the-head/") "Go hits the concurrency nail right on the head" "https://eli.thegreenplace.net/2018/go-hits-the-concurrency-nail-right-on-the-head/" 1538633400.0 #s(elfeed-ref "bfc7af9dc0e8c3bd21eb444f84291231f3e8e97b") html nil (dev python unread) "https://eli.thegreenplace.net/feeds/all.atom.xml" (:authors ((:name "Eli Bendersky")) :categories ("Go" "Concurrency") :author "Eli Bendersky")) ("eli.thegreenplace.net" . "tag:eli.thegreenplace.net,2018-10-01:/2018/partial-and-total-orders/") #s(elfeed-entry ("eli.thegreenplace.net" . "tag:eli.thegreenplace.net,2018-10-01:/2018/partial-and-total-orders/") "Partial and Total Orders" "https://eli.thegreenplace.net/2018/partial-and-total-orders/" 1538373660.0 #s(elfeed-ref "e8b19224fb68889d04650a637f5f5efec8591c49") html nil (dev python unread) "https://eli.thegreenplace.net/feeds/all.atom.xml" (:authors ((:name "Eli Bendersky")) :categories ("Math" "Programming") :author "Eli Bendersky")) ("eli.thegreenplace.net" . "tag:eli.thegreenplace.net,2018-09-30:/2018/summary-of-reading-july-september-2018/") #s(elfeed-entry ("eli.thegreenplace.net" . "tag:eli.thegreenplace.net,2018-09-30:/2018/summary-of-reading-july-september-2018/") "Summary of reading: July - September 2018" "https://eli.thegreenplace.net/2018/summary-of-reading-july-september-2018/" 1538286000.0 #s(elfeed-ref "eb8056400efb190e6dd5aca8a2fd39bf4ba5a5c7") html nil (dev python unread) "https://eli.thegreenplace.net/feeds/all.atom.xml" (:authors ((:name "Eli Bendersky")) :categories ("Book reviews") :author "Eli Bendersky")) ("eli.thegreenplace.net" . "tag:eli.thegreenplace.net,2018-09-13:/2018/go-and-algebraic-data-types/") #s(elfeed-entry ("eli.thegreenplace.net" . "tag:eli.thegreenplace.net,2018-09-13:/2018/go-and-algebraic-data-types/") "Go and Algebraic Data Types" "https://eli.thegreenplace.net/2018/go-and-algebraic-data-types/" 1536817200.0 #s(elfeed-ref "6608e7f7fbe73272bbc0cf152a5e00cccf36c661") html nil (dev python unread) "https://eli.thegreenplace.net/feeds/all.atom.xml" (:authors ((:name "Eli Bendersky")) :categories ("Go" "Haskell") :author "Eli Bendersky")) ("eli.thegreenplace.net" . "tag:eli.thegreenplace.net,2018-09-04:/2018/measuring-context-switching-and-memory-overheads-for-linux-threads/") #s(elfeed-entry ("eli.thegreenplace.net" . "tag:eli.thegreenplace.net,2018-09-04:/2018/measuring-context-switching-and-memory-overheads-for-linux-threads/") "Measuring context switching and memory overheads for Linux threads" "https://eli.thegreenplace.net/2018/measuring-context-switching-and-memory-overheads-for-linux-threads/" 1536039300.0 #s(elfeed-ref "72da9311e405c12e07f97a158530e90ef2ade72f") html nil (dev python unread) "https://eli.thegreenplace.net/feeds/all.atom.xml" (:authors ((:name "Eli Bendersky")) :categories ("Concurrency" "C & C++" "Linux") :author "Eli Bendersky")) ("eli.thegreenplace.net" . "tag:eli.thegreenplace.net,2018-08-08:/2018/on-the-uses-and-misuses-of-panics-in-go/") #s(elfeed-entry ("eli.thegreenplace.net" . "tag:eli.thegreenplace.net,2018-08-08:/2018/on-the-uses-and-misuses-of-panics-in-go/") "On the uses and misuses of panics in Go" "https://eli.thegreenplace.net/2018/on-the-uses-and-misuses-of-panics-in-go/" 1533707760.0 #s(elfeed-ref "33a97ffa2658737ec9be38002893923ab0af6fe1") html nil (dev python unread) "https://eli.thegreenplace.net/feeds/all.atom.xml" (:authors ((:name "Eli Bendersky")) :categories ("Go" "Programming") :author "Eli Bendersky")) ("eli.thegreenplace.net" . "tag:eli.thegreenplace.net,2018-08-01:/2018/launching-linux-threads-and-processes-with-clone/") #s(elfeed-entry ("eli.thegreenplace.net" . "tag:eli.thegreenplace.net,2018-08-01:/2018/launching-linux-threads-and-processes-with-clone/") "Launching Linux threads and processes with clone" "https://eli.thegreenplace.net/2018/launching-linux-threads-and-processes-with-clone/" 1533104040.0 #s(elfeed-ref "983ec35fd31bd8bfcf75cf3222de2ff580490a21") html nil (dev python unread) "https://eli.thegreenplace.net/feeds/all.atom.xml" (:authors ((:name "Eli Bendersky")) :categories ("Concurrency" "C & C++" "Linux") :author "Eli Bendersky")) ("eli.thegreenplace.net" . "tag:eli.thegreenplace.net,2018-07-13:/2018/basics-of-futexes/") #s(elfeed-entry ("eli.thegreenplace.net" . "tag:eli.thegreenplace.net,2018-07-13:/2018/basics-of-futexes/") "Basics of Futexes" "https://eli.thegreenplace.net/2018/basics-of-futexes/" 1531461180.0 #s(elfeed-ref "2e4c431de63fe1010d5ab66b57d5362c91c00397") html nil (dev python unread) "https://eli.thegreenplace.net/feeds/all.atom.xml" (:authors ((:name "Eli Bendersky")) :categories ("Concurrency" "C & C++" "Linux") :author "Eli Bendersky")) ("eli.thegreenplace.net" . "tag:eli.thegreenplace.net,2018-07-05:/2018/elegant-python-code-for-a-markov-chain-text-generator/") #s(elfeed-entry ("eli.thegreenplace.net" . "tag:eli.thegreenplace.net,2018-07-05:/2018/elegant-python-code-for-a-markov-chain-text-generator/") "Elegant Python code for a Markov chain text generator" "https://eli.thegreenplace.net/2018/elegant-python-code-for-a-markov-chain-text-generator/" 1530769200.0 #s(elfeed-ref "f6234d29747a673fcbcb5d48f5d043a2ab84814f") html nil (dev python unread) "https://eli.thegreenplace.net/feeds/all.atom.xml" (:authors ((:name "Eli Bendersky")) :categories ("Python") :author "Eli Bendersky")) ("eli.thegreenplace.net" . "tag:eli.thegreenplace.net,2018-06-30:/2018/summary-of-reading-april-june-2018/") #s(elfeed-entry ("eli.thegreenplace.net" . "tag:eli.thegreenplace.net,2018-06-30:/2018/summary-of-reading-april-june-2018/") "Summary of reading: April - June 2018" "https://eli.thegreenplace.net/2018/summary-of-reading-april-june-2018/" 1530336840.0 #s(elfeed-ref "e33ffeb1e89e5f2aaaa194054dae034b44505669") html nil (dev python unread) "https://eli.thegreenplace.net/feeds/all.atom.xml" (:authors ((:name "Eli Bendersky")) :categories ("Book reviews") :author "Eli Bendersky")) ("eli.thegreenplace.net" . "tag:eli.thegreenplace.net,2018-06-28:/2018/slow-and-fast-methods-for-generating-random-integers-in-python/") #s(elfeed-entry ("eli.thegreenplace.net" . "tag:eli.thegreenplace.net,2018-06-28:/2018/slow-and-fast-methods-for-generating-random-integers-in-python/") "Slow and fast methods for generating random integers in Python" "https://eli.thegreenplace.net/2018/slow-and-fast-methods-for-generating-random-integers-in-python/" 1530167340.0 #s(elfeed-ref "3d7b710022bc6ed578cf9a76cf835e3a944e8771") html nil (dev python unread) "https://eli.thegreenplace.net/feeds/all.atom.xml" (:authors ((:name "Eli Bendersky")) :categories ("Python") :author "Eli Bendersky")) ("eli.thegreenplace.net" . "tag:eli.thegreenplace.net,2018-06-07:/2018/minimal-character-based-lstm-implementation/") #s(elfeed-entry ("eli.thegreenplace.net" . "tag:eli.thegreenplace.net,2018-06-07:/2018/minimal-character-based-lstm-implementation/") "Minimal character-based LSTM implementation" "https://eli.thegreenplace.net/2018/minimal-character-based-lstm-implementation/" 1528349640.0 #s(elfeed-ref "675f8d4a4a745ccbc69038ac9d7dad22979f2d09") html nil (dev python unread) "https://eli.thegreenplace.net/feeds/all.atom.xml" (:authors ((:name "Eli Bendersky")) :categories ("Math" "Machine Learning") :author "Eli Bendersky")) ("eli.thegreenplace.net" . "tag:eli.thegreenplace.net,2018-05-25:/2018/understanding-how-to-implement-a-character-based-rnn-language-model/") #s(elfeed-entry ("eli.thegreenplace.net" . "tag:eli.thegreenplace.net,2018-05-25:/2018/understanding-how-to-implement-a-character-based-rnn-language-model/") "Understanding how to implement a character-based RNN language model" "https://eli.thegreenplace.net/2018/understanding-how-to-implement-a-character-based-rnn-language-model/" 1527225600.0 #s(elfeed-ref "d113bac5357e49bfac15795ec2ef1c64cf0c1211") html nil (dev python unread) "https://eli.thegreenplace.net/feeds/all.atom.xml" (:authors ((:name "Eli Bendersky")) :categories ("Math" "Machine Learning" "Python") :author "Eli Bendersky")) ("eli.thegreenplace.net" . "tag:eli.thegreenplace.net,2018-05-22:/2018/backpropagation-through-a-fully-connected-layer/") #s(elfeed-entry ("eli.thegreenplace.net" . "tag:eli.thegreenplace.net,2018-05-22:/2018/backpropagation-through-a-fully-connected-layer/") "Backpropagation through a fully-connected layer" "https://eli.thegreenplace.net/2018/backpropagation-through-a-fully-connected-layer/" 1526968020.0 #s(elfeed-ref "5cefef480efd1581ccca63e7ff0865cf94681e59") html nil (dev python unread) "https://eli.thegreenplace.net/feeds/all.atom.xml" (:authors ((:name "Eli Bendersky")) :categories ("Math" "Machine Learning") :author "Eli Bendersky")) ("eli.thegreenplace.net" . "tag:eli.thegreenplace.net,2018-05-08:/2018/concurrent-servers-part-6-callbacks-promises-and-asyncawait/") #s(elfeed-entry ("eli.thegreenplace.net" . "tag:eli.thegreenplace.net,2018-05-08:/2018/concurrent-servers-part-6-callbacks-promises-and-asyncawait/") "Concurrent Servers: Part 6 - Callbacks, Promises and async/await" "https://eli.thegreenplace.net/2018/concurrent-servers-part-6-callbacks-promises-and-asyncawait/" 1525758600.0 #s(elfeed-ref "2b081fe375531b0a1de87f47ab548c557f5d3592") html nil (dev python unread) "https://eli.thegreenplace.net/feeds/all.atom.xml" (:authors ((:name "Eli Bendersky")) :categories ("Concurrency" "Javascript") :author "Eli Bendersky")) ("eli.thegreenplace.net" . "tag:eli.thegreenplace.net,2018-04-04:/2018/depthwise-separable-convolutions-for-machine-learning/") #s(elfeed-entry ("eli.thegreenplace.net" . "tag:eli.thegreenplace.net,2018-04-04:/2018/depthwise-separable-convolutions-for-machine-learning/") "Depthwise separable convolutions for machine learning" "https://eli.thegreenplace.net/2018/depthwise-separable-convolutions-for-machine-learning/" 1522822860.0 #s(elfeed-ref "ca39d315d8b7f1ecac320d6083f840a5e7f4dd28") html nil (dev python unread) "https://eli.thegreenplace.net/feeds/all.atom.xml" (:authors ((:name "Eli Bendersky")) :categories ("Math" "Machine Learning" "Python") :author "Eli Bendersky")) ("feeds.feedburner.com" . "5e23331833ff8500440fb9c7") #s(elfeed-entry ("feeds.feedburner.com" . "5e23331833ff8500440fb9c7") "Weekly Update 174" "http://feedproxy.google.com/~r/TroyHunt/~3/6if3Pw87_zI/" 1579374060.0 #s(elfeed-ref "e7183bbabc24cf3394010fe5b2023814c8ecc124") html nil (dev security unread) "https://feeds.feedburner.com/TroyHunt" (:authors ((:name "Troy Hunt")) :categories ("Weekly update"))) ("feeds.feedburner.com" . "5e15687d472cad0038a71a93") #s(elfeed-entry ("feeds.feedburner.com" . "5e15687d472cad0038a71a93") "Welcoming the Danish Government to Have I Been Pwned" "http://feedproxy.google.com/~r/TroyHunt/~3/ugXQJ708sKo/" 1578908149.0 #s(elfeed-ref "3f8e99402ba9afa3f896bc497cfb1c42d939c468") html nil (dev security unread) "https://feeds.feedburner.com/TroyHunt" (:authors ((:name "Troy Hunt")) :categories ("Have I Been Pwned" "Government"))) ("feeds.feedburner.com" . "5e18407d472cad0038a71b58") #s(elfeed-entry ("feeds.feedburner.com" . "5e18407d472cad0038a71b58") "Weekly Update 173" "http://feedproxy.google.com/~r/TroyHunt/~3/AvEFT9AiidU/" 1578649237.0 #s(elfeed-ref "8c057dab25ad094c0df842830393dfce5f4df091") html nil (dev security unread) "https://feeds.feedburner.com/TroyHunt" (:authors ((:name "Troy Hunt")) :categories ("Weekly update"))) ("feeds.feedburner.com" . "5e146db1472cad0038a7170d") #s(elfeed-entry ("feeds.feedburner.com" . "5e146db1472cad0038a7170d") "The Difficulty of Disclosure, Surebet247 and the Streisand Effect" "http://feedproxy.google.com/~r/TroyHunt/~3/8Ii5ormnus4/" 1578470752.0 #s(elfeed-ref "6ae8841e21e0bfe0358e5e62a5c223b406b9124c") html nil (dev security unread) "https://feeds.feedburner.com/TroyHunt" (:authors ((:name "Troy Hunt")) :categories ("Security"))) ("feeds.feedburner.com" . "5e0e25e2472cad0038a71592") #s(elfeed-entry ("feeds.feedburner.com" . "5e0e25e2472cad0038a71592") "Weekly Update 172" "http://feedproxy.google.com/~r/TroyHunt/~3/d-ZbzNO_b8o/" 1578052702.0 #s(elfeed-ref "6d0643f9e4a8c34657eb2b66bc4b5ae55ba5eb16") html nil (dev security unread) "https://feeds.feedburner.com/TroyHunt" (:authors ((:name "Troy Hunt")) :categories ("Weekly update"))) ("feeds.feedburner.com" . "5dfdc780472cad0038a7107c") #s(elfeed-entry ("feeds.feedburner.com" . "5dfdc780472cad0038a7107c") "Promiscuous Cookies and Their Impending Death via the SameSite Policy" "http://feedproxy.google.com/~r/TroyHunt/~3/35eyIV9_gvw/" 1578038775.0 #s(elfeed-ref "d1b97832bce3b6319ba28f2d51342811ffa2abdd") html nil (dev security unread) "https://feeds.feedburner.com/TroyHunt" (:authors ((:name "Troy Hunt")) :categories ("Cookies" "Security"))) ("feeds.feedburner.com" . "5e075624472cad0038a7140d") #s(elfeed-entry ("feeds.feedburner.com" . "5e075624472cad0038a7140d") "Weekly Update 171" "http://feedproxy.google.com/~r/TroyHunt/~3/OUV8YLZxeqM/" 1577540094.0 #s(elfeed-ref "f22d8fe4fd9eb3db4827ba3e2ea2332c6d1913c7") html nil (dev security unread) "https://feeds.feedburner.com/TroyHunt" (:authors ((:name "Troy Hunt")) :categories ("Weekly update"))) ("feeds.feedburner.com" . "5e007785472cad0038a7113f") #s(elfeed-entry ("feeds.feedburner.com" . "5e007785472cad0038a7113f") "When Is Data \"Public\"? (And 2.5M Public Factual Records in HIBP)" "http://feedproxy.google.com/~r/TroyHunt/~3/eoF_T9rG7AM/" 1577185115.0 #s(elfeed-ref "e0fc5c9ef9ff54ddadfd226f4b47a4d84108912b") html nil (dev security unread) "https://feeds.feedburner.com/TroyHunt" (:authors ((:name "Troy Hunt")) :categories ("Have I Been Pwned"))) ("feeds.feedburner.com" . "5dfe2b83472cad0038a710fa") #s(elfeed-entry ("feeds.feedburner.com" . "5dfe2b83472cad0038a710fa") "Weekly Update 170" "http://feedproxy.google.com/~r/TroyHunt/~3/2dTwY-8dRqQ/" 1576940230.0 #s(elfeed-ref "db45efc161e8421c6a6f615636c3d719b87e0b5e") html nil (dev security unread) "https://feeds.feedburner.com/TroyHunt" (:authors ((:name "Troy Hunt")) :categories ("Weekly update"))) ("feeds.feedburner.com" . "5df0b7840d6b25003886027f") #s(elfeed-entry ("feeds.feedburner.com" . "5df0b7840d6b25003886027f") "Still Why No HTTPS?" "http://feedproxy.google.com/~r/TroyHunt/~3/Rqzp7Xw6v7M/" 1576531527.0 #s(elfeed-ref "a6951f8d455a26cdeaaa3e2b535476f115241614") html nil (dev security unread) "https://feeds.feedburner.com/TroyHunt" (:authors ((:name "Troy Hunt")) :categories ("SSL" "Security"))) ("feeds.feedburner.com" . "5df31ec00d6b2500388602f6") #s(elfeed-entry ("feeds.feedburner.com" . "5df31ec00d6b2500388602f6") "Weekly Update 169" "http://feedproxy.google.com/~r/TroyHunt/~3/u4qXNkqEk-o/" 1576224357.0 #s(elfeed-ref "dbdabf2db0359566071ce7f2902d9b8e08f3b3b8") html nil (dev security unread) "https://feeds.feedburner.com/TroyHunt" (:authors ((:name "Troy Hunt")) :categories ("Weekly update"))) ("feeds.feedburner.com" . "5deecf880d6b25003886000b") #s(elfeed-entry ("feeds.feedburner.com" . "5deecf880d6b25003886000b") "Generated Passwords, UX and Security Absolutism" "http://feedproxy.google.com/~r/TroyHunt/~3/1do4wTotHYA/" 1576009970.0 #s(elfeed-ref "051d714cfff0ede603a96b367666c755195b6e89") html nil (dev security unread) "https://feeds.feedburner.com/TroyHunt" (:authors ((:name "Troy Hunt")) :categories ("Security" "Passwords"))) ("feeds.feedburner.com" . "5ded82ac0d6b25003885ffd3") #s(elfeed-entry ("feeds.feedburner.com" . "5ded82ac0d6b25003885ffd3") "Weekly Update 168" "http://feedproxy.google.com/~r/TroyHunt/~3/6ZZh23WB2Nc/" 1575870274.0 #s(elfeed-ref "b47c98ebced402359c629091afed77f3970fdc43") html nil (dev security unread) "https://feeds.feedburner.com/TroyHunt" (:authors ((:name "Troy Hunt")) :categories ("Weekly update"))) ("feeds.feedburner.com" . "5de3828e538b5c0044f314a1") #s(elfeed-entry ("feeds.feedburner.com" . "5de3828e538b5c0044f314a1") "Weekly Update 167" "http://feedproxy.google.com/~r/TroyHunt/~3/ywI39ZYB4wg/" 1575193361.0 #s(elfeed-ref "ca627474342399795afbc9e072283405f4ae7f23") html nil (dev security unread) "https://feeds.feedburner.com/TroyHunt" (:authors ((:name "Troy Hunt")) :categories ("Weekly update"))) ("feeds.feedburner.com" . "5dbcc202dac39a0038f37a14") #s(elfeed-entry ("feeds.feedburner.com" . "5dbcc202dac39a0038f37a14") "Welcoming the Swiss Government to Have I Been Pwned" "http://feedproxy.google.com/~r/TroyHunt/~3/YUg3sQFTKhg/" 1574930741.0 #s(elfeed-ref "caef6a6f2337de21f8b78dd7f45bc5a7f42af7fa") html nil (dev security unread) "https://feeds.feedburner.com/TroyHunt" (:authors ((:name "Troy Hunt")) :categories ("Have I Been Pwned" "Government"))) ("feeds.feedburner.com" . "tag:blogger.com,1999:blog-8520.post-2229218346688974820") #s(elfeed-entry ("feeds.feedburner.com" . "tag:blogger.com,1999:blog-8520.post-2229218346688974820") "Start using 2FA and API tokens on PyPI" "http://feedproxy.google.com/~r/PythonSoftwareFoundationNews/~3/3wzQ4odyH-4/start-using-2fa-and-api-tokens-on-pypi.html" 1579273560.0 #s(elfeed-ref "1e65d513121e3a4ca037fc675d4c6763070f1c36") html nil (dev python unread) "https://feeds.feedburner.com/PythonSoftwareFoundationNews" (:authors ((:name "Sumana Harihareswara" :uri "http://www.blogger.com/profile/08002085909817689325" :email "noreply@blogger.com")) :categories ("pypi") :author "Sumana Harihareswara")) ("feeds.feedburner.com" . "tag:blogger.com,1999:blog-8520.post-6686093829514667862") #s(elfeed-entry ("feeds.feedburner.com" . "tag:blogger.com,1999:blog-8520.post-6686093829514667862") "Python Software Foundation Fellow Members for Q4 2019" "http://feedproxy.google.com/~r/PythonSoftwareFoundationNews/~3/J-QMrALXO0g/python-software-foundation-fellow.html" 1578394800.0 #s(elfeed-ref "55c2c0e971fdb6eed3d2523af56f0f46046d764a") html nil (dev python unread) "https://feeds.feedburner.com/PythonSoftwareFoundationNews" (:authors ((:name "Ewa Jodlowska" :uri "http://www.blogger.com/profile/18334325508115717169" :email "noreply@blogger.com")) :author "Ewa Jodlowska")) ("feeds.feedburner.com" . "tag:blogger.com,1999:blog-8520.post-8572381617015506818") #s(elfeed-entry ("feeds.feedburner.com" . "tag:blogger.com,1999:blog-8520.post-8572381617015506818") "Python 2 series to be retired by April 2020" "http://feedproxy.google.com/~r/PythonSoftwareFoundationNews/~3/jVt_4dZJWag/python-2-sunset.html" 1576834620.0 #s(elfeed-ref "07d26fd55f6d54f429eaf0f68ab3f5028d06dcd4") html nil (dev python unread) "https://feeds.feedburner.com/PythonSoftwareFoundationNews" (:authors ((:name "Greg H" :uri "http://www.blogger.com/profile/17402093381675240286" :email "noreply@blogger.com")) :categories ("python3") :author "Greg H")) ("feeds.feedburner.com" . "tag:blogger.com,1999:blog-8520.post-7158064099987968072") #s(elfeed-entry ("feeds.feedburner.com" . "tag:blogger.com,1999:blog-8520.post-7158064099987968072") "Mozilla and Chan Zuckerberg Initiative to support pip" "http://feedproxy.google.com/~r/PythonSoftwareFoundationNews/~3/zh_ej8QMx7o/moss-czi-support-pip.html" 1575474780.0 #s(elfeed-ref "c723dde8b7ba13166fb824679fb192ac86949601") html nil (dev python unread) "https://feeds.feedburner.com/PythonSoftwareFoundationNews" (:authors ((:name "Sumana Harihareswara" :uri "http://www.blogger.com/profile/08002085909817689325" :email "noreply@blogger.com")) :categories ("grant" "grants" "open source" "pip") :author "Sumana Harihareswara")) ("feeds.feedburner.com" . "tag:blogger.com,1999:blog-8520.post-3982597027158551843") #s(elfeed-entry ("feeds.feedburner.com" . "tag:blogger.com,1999:blog-8520.post-3982597027158551843") "Giving Tuesday 2019" "http://feedproxy.google.com/~r/PythonSoftwareFoundationNews/~3/jj7TbspCVNY/giving-tuesday-2019.html" 1575312180.0 #s(elfeed-ref "5c62359653f12393cdf1cda494f3a1fdf39491be") html nil (dev python unread) "https://feeds.feedburner.com/PythonSoftwareFoundationNews" (:authors ((:name "Betsy Waliszewski" :uri "http://www.blogger.com/profile/11931343676066539740" :email "noreply@blogger.com")) :author "Betsy Waliszewski")) ("feeds.feedburner.com" . "tag:blogger.com,1999:blog-8520.post-3319552266672129851") #s(elfeed-entry ("feeds.feedburner.com" . "tag:blogger.com,1999:blog-8520.post-3319552266672129851") "Python Software Foundation Fellow Members for Q3 2019" "http://feedproxy.google.com/~r/PythonSoftwareFoundationNews/~3/T3r7qZxo-xg/python-software-foundation-fellow.html" 1574087700.0 #s(elfeed-ref "d22e433100a1910b8af878e9f1695d228b351b83") html nil (dev python unread) "https://feeds.feedburner.com/PythonSoftwareFoundationNews" (:authors ((:name "Ewa Jodlowska" :uri "http://www.blogger.com/profile/18334325508115717169" :email "noreply@blogger.com")) :author "Ewa Jodlowska")) ("feeds.feedburner.com" . "tag:blogger.com,1999:blog-8520.post-3547365549105510316") #s(elfeed-entry ("feeds.feedburner.com" . "tag:blogger.com,1999:blog-8520.post-3547365549105510316") "Why Sponsor PyCon 2020?" "http://feedproxy.google.com/~r/PythonSoftwareFoundationNews/~3/lE0u-5MIUQc/why-sponsor-pycon-2020.html" 1574081880.0 #s(elfeed-ref "29181e478c16b6226f1f7f941871151500ea9f08") html nil (dev python unread) "https://feeds.feedburner.com/PythonSoftwareFoundationNews" (:authors ((:name "Betsy Waliszewski" :uri "http://www.blogger.com/profile/11931343676066539740" :email "noreply@blogger.com")) :author "Betsy Waliszewski")) ("feeds.feedburner.com" . "tag:blogger.com,1999:blog-8520.post-8902279872127503977") #s(elfeed-entry ("feeds.feedburner.com" . "tag:blogger.com,1999:blog-8520.post-8902279872127503977") "Seeking Developers for Paid Contract Improving pip" "http://feedproxy.google.com/~r/PythonSoftwareFoundationNews/~3/jAMRqiPhWSs/seeking-developers-for-paid-contract.html" 1573477440.0 #s(elfeed-ref "34cb74e355bc607e8e7cee44a9faf8df11f13460") html nil (dev python unread) "https://feeds.feedburner.com/PythonSoftwareFoundationNews" (:authors ((:name "Ernest W. Durbin III" :uri "http://www.blogger.com/profile/13577459520968677064" :email "noreply@blogger.com")) :categories ("request for proposals") :author "Ernest W. Durbin III")) ("feeds.feedburner.com" . "tag:blogger.com,1999:blog-8520.post-3020233577200615459") #s(elfeed-entry ("feeds.feedburner.com" . "tag:blogger.com,1999:blog-8520.post-3020233577200615459") "The 2019 Python Developer Survey is here, take a few minutes to complete the survey!" "http://feedproxy.google.com/~r/PythonSoftwareFoundationNews/~3/Y4CDqUEnEB8/the-2019-python-developer-survey-is.html" 1572535440.0 #s(elfeed-ref "5cda828efc4ad1ac566fa1d0f35f6edfa50a6bac") html nil (dev python unread) "https://feeds.feedburner.com/PythonSoftwareFoundationNews" (:authors ((:name "Ewa Jodlowska" :uri "http://www.blogger.com/profile/18334325508115717169" :email "noreply@blogger.com")) :author "Ewa Jodlowska")) ("feeds.feedburner.com" . "tag:blogger.com,1999:blog-8520.post-3140451627024098055") #s(elfeed-entry ("feeds.feedburner.com" . "tag:blogger.com,1999:blog-8520.post-3140451627024098055") "CPython Core Developer Sprint 2019" "http://feedproxy.google.com/~r/PythonSoftwareFoundationNews/~3/dQEL0laUUlw/cpython-core-developer-sprint-2019.html" 1572438180.0 #s(elfeed-ref "131e881fdc0f944e6f10e6d15aaea066bd50a067") html nil (dev python unread) "https://feeds.feedburner.com/PythonSoftwareFoundationNews" (:authors ((:name "Pablo Galindo" :uri "http://www.blogger.com/profile/07923137967169776470" :email "noreply@blogger.com")) :author "Pablo Galindo")) ("feeds.feedburner.com" . "tag:blogger.com,1999:blog-8520.post-901870891261608318") #s(elfeed-entry ("feeds.feedburner.com" . "tag:blogger.com,1999:blog-8520.post-901870891261608318") "Chris Angelico: 2019 Q2 Community Service Award Winner" "http://feedproxy.google.com/~r/PythonSoftwareFoundationNews/~3/OfbgmiSSWnE/chris-angelico-2019-q2-community.html" 1571902200.0 #s(elfeed-ref "eec6d3224934be10b1a9fa5c5a771d762a417aa3") html nil (dev python unread) "https://feeds.feedburner.com/PythonSoftwareFoundationNews" (:authors ((:name "Unknown" :email "noreply@blogger.com")) :author "Unknown")) ("feeds.feedburner.com" . "tag:blogger.com,1999:blog-8520.post-8141835333411392599") #s(elfeed-entry ("feeds.feedburner.com" . "tag:blogger.com,1999:blog-8520.post-8141835333411392599") "Grants Awarded for Python in Education" "http://feedproxy.google.com/~r/PythonSoftwareFoundationNews/~3/f_OZiFUX3q0/grants-awarded-for-python-in-education.html" 1569845100.0 #s(elfeed-ref "6fc19ece542ac2e74e8f4476f1624f39f7ffd922") html nil (dev python unread) "https://feeds.feedburner.com/PythonSoftwareFoundationNews" (:authors ((:name "Ewa Jodlowska" :uri "http://www.blogger.com/profile/18334325508115717169" :email "noreply@blogger.com")) :author "Ewa Jodlowska")) ("feeds.feedburner.com" . "tag:blogger.com,1999:blog-8520.post-3192920820041855868") #s(elfeed-entry ("feeds.feedburner.com" . "tag:blogger.com,1999:blog-8520.post-3192920820041855868") "Felipe de Morais: 2019 Q2 Community Service Award Winner" "http://feedproxy.google.com/~r/PythonSoftwareFoundationNews/~3/6kRjmldWAVo/felipe-de-morais-2019-q2-community.html" 1569490200.0 #s(elfeed-ref "582b7e25954ba09a2a6da1d6eff5a2e772d97230") html nil (dev python unread) "https://feeds.feedburner.com/PythonSoftwareFoundationNews" (:authors ((:name "Unknown" :email "noreply@blogger.com")) :author "Unknown")) ("feeds.feedburner.com" . "tag:blogger.com,1999:blog-8520.post-6227041716604156040") #s(elfeed-entry ("feeds.feedburner.com" . "tag:blogger.com,1999:blog-8520.post-6227041716604156040") "PyPI Security Q4 2019 Request for Proposals period opens." "http://feedproxy.google.com/~r/PythonSoftwareFoundationNews/~3/LBx7-RCzQCk/pypi-security-q4-2019-request-for.html" 1569433620.0 #s(elfeed-ref "0160baf4864a6cae2ac956cab9d115e9c6be7aa3") html nil (dev python unread) "https://feeds.feedburner.com/PythonSoftwareFoundationNews" (:authors ((:name "Ernest W. Durbin III" :uri "http://www.blogger.com/profile/13577459520968677064" :email "noreply@blogger.com")) :categories ("pypi" "request for proposals") :author "Ernest W. Durbin III")) ("feeds.feedburner.com" . "tag:blogger.com,1999:blog-8520.post-6874436449023685386") #s(elfeed-entry ("feeds.feedburner.com" . "tag:blogger.com,1999:blog-8520.post-6874436449023685386") "The Python Software Foundation has updated its Code of Conduct" "http://feedproxy.google.com/~r/PythonSoftwareFoundationNews/~3/zXXv-H7zJUc/the-python-software-foundation-has_24.html" 1569331680.0 #s(elfeed-ref "8d9a9c98388bb4528e5a6407344018d079fbc6a8") html nil (dev python unread) "https://feeds.feedburner.com/PythonSoftwareFoundationNews" (:authors ((:name "Christopher Neugebauer" :uri "http://www.blogger.com/profile/05686111958689401667" :email "noreply@blogger.com")) :author "Christopher Neugebauer")) ("feeds.feedburner.com" . "tag:blogger.com,1999:blog-8520.post-4610446765525112516") #s(elfeed-entry ("feeds.feedburner.com" . "tag:blogger.com,1999:blog-8520.post-4610446765525112516") "PyPI Security Q4 2019 Request for Information period opens." "http://feedproxy.google.com/~r/PythonSoftwareFoundationNews/~3/gIKwwagf0H0/pypi-security-q4-2019-request-for.html" 1567012980.0 #s(elfeed-ref "9ae513cb0c5e081717cb5f797c16bcde4c4e24fb") html nil (dev python unread) "https://feeds.feedburner.com/PythonSoftwareFoundationNews" (:authors ((:name "Ernest W. Durbin III" :uri "http://www.blogger.com/profile/13577459520968677064" :email "noreply@blogger.com")) :author "Ernest W. Durbin III")) ("feeds.feedburner.com" . "tag:blogger.com,1999:blog-8520.post-5336974345699327947") #s(elfeed-entry ("feeds.feedburner.com" . "tag:blogger.com,1999:blog-8520.post-5336974345699327947") "Python Software Foundation Fellow Members for Q1 & Q2 2019" "http://feedproxy.google.com/~r/PythonSoftwareFoundationNews/~3/MJTB6RSjp38/python-software-foundation-fellow.html" 1566895260.0 #s(elfeed-ref "73db34220e78e92ca7a7d1decf4746a8613c9f62") html nil (dev python unread) "https://feeds.feedburner.com/PythonSoftwareFoundationNews" (:authors ((:name "Ewa Jodlowska" :uri "http://www.blogger.com/profile/18334325508115717169" :email "noreply@blogger.com")) :author "Ewa Jodlowska")) ("feeds.feedburner.com" . "tag:blogger.com,1999:blog-8520.post-5882246688697377044") #s(elfeed-entry ("feeds.feedburner.com" . "tag:blogger.com,1999:blog-8520.post-5882246688697377044") "Humble Bundle by No Starch supports the Python Software Foundation!" "http://feedproxy.google.com/~r/PythonSoftwareFoundationNews/~3/CUsPxiYXK-g/humble-bundle-by-no-starch-supports.html" 1566223620.0 #s(elfeed-ref "70f202c7ca6135db1fe2f7fc42e1a86ee474909c") html nil (dev python unread) "https://feeds.feedburner.com/PythonSoftwareFoundationNews" (:authors ((:name "Ewa Jodlowska" :uri "http://www.blogger.com/profile/18334325508115717169" :email "noreply@blogger.com")) :author "Ewa Jodlowska")) ("feeds.feedburner.com" . "tag:blogger.com,1999:blog-8520.post-4621905600709948175") #s(elfeed-entry ("feeds.feedburner.com" . "tag:blogger.com,1999:blog-8520.post-4621905600709948175") "PyPI now supports uploading via API token" "http://feedproxy.google.com/~r/PythonSoftwareFoundationNews/~3/PyfIYGrs4Vo/pypi-now-supports-uploading-via-api.html" 1564574520.0 #s(elfeed-ref "53a45cbb8a5489389cd89aff3231514cc93c02fe") html nil (dev python unread) "https://feeds.feedburner.com/PythonSoftwareFoundationNews" (:authors ((:name "Sumana Harihareswara" :uri "http://www.blogger.com/profile/08002085909817689325" :email "noreply@blogger.com")) :categories ("pypi") :author "Sumana Harihareswara")) ("feeds.feedburner.com" . "tag:blogger.com,1999:blog-8520.post-6074168904828755246") #s(elfeed-entry ("feeds.feedburner.com" . "tag:blogger.com,1999:blog-8520.post-6074168904828755246") "2019 PSF Fundraiser - Thank you & debrief" "http://feedproxy.google.com/~r/PythonSoftwareFoundationNews/~3/9sGpXmeE1-c/2019-psf-fundraiser-thank-you-debrief.html" 1562843040.0 #s(elfeed-ref "6d6a1100a24e3a54ed7bc914a35dc962699bf104") html nil (dev python unread) "https://feeds.feedburner.com/PythonSoftwareFoundationNews" (:authors ((:name "Ewa Jodlowska" :uri "http://www.blogger.com/profile/18334325508115717169" :email "noreply@blogger.com")) :author "Ewa Jodlowska")) ("feeds.feedburner.com" . "tag:blogger.com,1999:blog-8520.post-5009252771627820904") #s(elfeed-entry ("feeds.feedburner.com" . "tag:blogger.com,1999:blog-8520.post-5009252771627820904") "The Python Software Foundation is looking for bloggers!" "http://feedproxy.google.com/~r/PythonSoftwareFoundationNews/~3/hf9N-_dx7VQ/the-python-software-foundation-is.html" 1562664060.0 #s(elfeed-ref "45dfc223d59834958aec7e7c70d86acb574d21f8") html nil (dev python unread) "https://feeds.feedburner.com/PythonSoftwareFoundationNews" (:authors ((:name "Marlene_zw" :uri "http://www.blogger.com/profile/12157871163204008115" :email "noreply@blogger.com")) :author "Marlene_zw")) ("feeds.feedburner.com" . "tag:blogger.com,1999:blog-8520.post-5850145450258307998") #s(elfeed-entry ("feeds.feedburner.com" . "tag:blogger.com,1999:blog-8520.post-5850145450258307998") "PyPI Now Supports Two-Factor Login via WebAuthn" "http://feedproxy.google.com/~r/PythonSoftwareFoundationNews/~3/3WpekcDpX4A/pypi-now-supports-two-factor-login-via.html" 1560856560.0 #s(elfeed-ref "64661c700cdb2198ef45f41536e08c96cd5e07ff") html nil (dev python unread) "https://feeds.feedburner.com/PythonSoftwareFoundationNews" (:authors ((:name "Ernest W. Durbin III" :uri "http://www.blogger.com/profile/13577459520968677064" :email "noreply@blogger.com")) :categories ("pypi") :author "Ernest W. Durbin III")) ("feeds.feedburner.com" . "tag:blogger.com,1999:blog-8520.post-4241697215788925619") #s(elfeed-entry ("feeds.feedburner.com" . "tag:blogger.com,1999:blog-8520.post-4241697215788925619") "2019 Board of Directors Election - Voting is Open" "http://feedproxy.google.com/~r/PythonSoftwareFoundationNews/~3/wV9HN81G75M/2019-board-of-directors-election-voting.html" 1560343380.0 #s(elfeed-ref "a23ac739b01cd641ff7cce82de3e36523caa16cd") html nil (dev python unread) "https://feeds.feedburner.com/PythonSoftwareFoundationNews" (:authors ((:name "Ewa Jodlowska" :uri "http://www.blogger.com/profile/18334325508115717169" :email "noreply@blogger.com")) :author "Ewa Jodlowska")) ("feeds.feedburner.com" . "tag:blogger.com,1999:blog-8520.post-2098597540963845979") #s(elfeed-entry ("feeds.feedburner.com" . "tag:blogger.com,1999:blog-8520.post-2098597540963845979") "Python Language Summit Lightning Talks, Part 2" "http://feedproxy.google.com/~r/PythonSoftwareFoundationNews/~3/jlRKcKv7vRU/python-language-summit-lightning-talks-part-2.html" 1559651580.0 #s(elfeed-ref "a48efabe1f569217ec1b6ce1dde3b7d5a918801e") html nil (dev python unread) "https://feeds.feedburner.com/PythonSoftwareFoundationNews" (:authors ((:name "A. Jesse Jiryu Davis" :uri "http://www.blogger.com/profile/08612435176546178055" :email "noreply@blogger.com")) :author "A. Jesse Jiryu Davis")) ("feeds.feedburner.com" . "tag:blogger.com,1999:blog-8520.post-7160843106892467380") #s(elfeed-entry ("feeds.feedburner.com" . "tag:blogger.com,1999:blog-8520.post-7160843106892467380") "Python Language Summit Lightning Talks, Part 1" "http://feedproxy.google.com/~r/PythonSoftwareFoundationNews/~3/lNfFWm0ugTw/python-language-summit-lightning-talks.html" 1559597160.0 #s(elfeed-ref "31b5ee28fa38dcd8eabccd35e7450efcf1cd5f02") html nil (dev python unread) "https://feeds.feedburner.com/PythonSoftwareFoundationNews" (:authors ((:name "A. Jesse Jiryu Davis" :uri "http://www.blogger.com/profile/08612435176546178055" :email "noreply@blogger.com")) :author "A. Jesse Jiryu Davis")) ("feeds.feedburner.com" . "tag:words.steveklabnik.com,2014:Post/a-sad-day-for-rust") #s(elfeed-entry ("feeds.feedburner.com" . "tag:words.steveklabnik.com,2014:Post/a-sad-day-for-rust") "A sad day for Rust" "https://words.steveklabnik.com/a-sad-day-for-rust" 1579242353.0 #s(elfeed-ref "18dbdef57c5fd02bcadf1f470a823801ffaab9e4") html nil (dev rust unread) "https://feeds.feedburner.com/steveklabnik/words" nil) ("feeds.feedburner.com" . "tag:words.steveklabnik.com,2014:Post/c-is-not-how-the-computer-works-can-lead-to-inefficient-code") #s(elfeed-entry ("feeds.feedburner.com" . "tag:words.steveklabnik.com,2014:Post/c-is-not-how-the-computer-works-can-lead-to-inefficient-code") "\"C is not how the computer works\" can lead to inefficient code" "https://words.steveklabnik.com/c-is-not-how-the-computer-works-can-lead-to-inefficient-code" 1571989539.0 #s(elfeed-ref "b4ae9354ca11e9e0810c1f873fc510b26ac78c0e") html nil (dev rust unread) "https://feeds.feedburner.com/steveklabnik/words" nil) ("feeds.feedburner.com" . "tag:words.steveklabnik.com,2014:Post/porting-steveklabnik-com-to-workers-sites-and-zola") #s(elfeed-entry ("feeds.feedburner.com" . "tag:words.steveklabnik.com,2014:Post/porting-steveklabnik-com-to-workers-sites-and-zola") "Porting steveklabnik.com to Workers Sites and Zola" "https://words.steveklabnik.com/porting-steveklabnik-com-to-workers-sites-and-zola" 1569485051.0 #s(elfeed-ref "3bb527e77220a5e1c5f2a6b1bc294920f6852916") html nil (dev rust unread) "https://feeds.feedburner.com/steveklabnik/words" nil) ("feeds.feedburner.com" . "tag:words.steveklabnik.com,2014:Post/i-m-joining-cloudflare") #s(elfeed-entry ("feeds.feedburner.com" . "tag:words.steveklabnik.com,2014:Post/i-m-joining-cloudflare") "I'm joining Cloudflare" "https://words.steveklabnik.com/i-m-joining-cloudflare" 1554454854.0 #s(elfeed-ref "d1a042db8a782e8ed9f9a9dea21deb8e1718de45") html nil (dev rust unread) "https://feeds.feedburner.com/steveklabnik/words" nil) ("feeds.feedburner.com" . "tag:words.steveklabnik.com,2014:Post/what-comes-after-open-source") #s(elfeed-entry ("feeds.feedburner.com" . "tag:words.steveklabnik.com,2014:Post/what-comes-after-open-source") "What comes after \"open source\"" "https://words.steveklabnik.com/what-comes-after-open-source" 1554189211.0 #s(elfeed-ref "7ba7aa0d4ef54849974c0b9e0dd281cff955dce0") html nil (dev rust unread) "https://feeds.feedburner.com/steveklabnik/words" nil) ("feeds.feedburner.com" . "tag:words.steveklabnik.com,2014:Post/rust-has-finally-outgrown-me") #s(elfeed-entry ("feeds.feedburner.com" . "tag:words.steveklabnik.com,2014:Post/rust-has-finally-outgrown-me") "Rust has finally outgrown me" "https://words.steveklabnik.com/rust-has-finally-outgrown-me" 1553851312.0 #s(elfeed-ref "3555248ad82c44410a39aebcd94fd3fa8e9226ab") html nil (dev rust unread) "https://feeds.feedburner.com/steveklabnik/words" nil) ("feeds.feedburner.com" . "tag:words.steveklabnik.com,2014:Post/learning-ada") #s(elfeed-entry ("feeds.feedburner.com" . "tag:words.steveklabnik.com,2014:Post/learning-ada") "Learning Ada" "https://words.steveklabnik.com/learning-ada" 1553605472.0 #s(elfeed-ref "b8a69afdfe98cfc86f6e4e48cc5585b34fc7c251") html nil (dev rust unread) "https://feeds.feedburner.com/steveklabnik/words" nil) ("feeds.feedburner.com" . "tag:words.steveklabnik.com,2014:Post/the-culture-war-at-the-heart-of-open-source") #s(elfeed-entry ("feeds.feedburner.com" . "tag:words.steveklabnik.com,2014:Post/the-culture-war-at-the-heart-of-open-source") "The culture war at the heart of open source" "https://words.steveklabnik.com/the-culture-war-at-the-heart-of-open-source" 1553591505.0 #s(elfeed-ref "b5591acaac7fa1c8b9fa93e560ae2d6b45dd3c30") html nil (dev rust unread) "https://feeds.feedburner.com/steveklabnik/words" nil) ("feeds.feedburner.com" . "tag:words.steveklabnik.com,2014:Post/what-s-next-for-semver") #s(elfeed-entry ("feeds.feedburner.com" . "tag:words.steveklabnik.com,2014:Post/what-s-next-for-semver") "What's next for SemVer" "https://words.steveklabnik.com/what-s-next-for-semver" 1549865683.0 #s(elfeed-ref "38fc22098691935ea04ba9027af7b33047cece1c") html nil (dev rust unread) "https://feeds.feedburner.com/steveklabnik/words" nil) ("feeds.feedburner.com" . "tag:words.steveklabnik.com,2014:Post/thank-u-next") #s(elfeed-entry ("feeds.feedburner.com" . "tag:words.steveklabnik.com,2014:Post/thank-u-next") "thank u, next" "https://words.steveklabnik.com/thank-u-next" 1546782290.0 #s(elfeed-ref "71c17f6b9d746f7de732f43cb025089fb2329880") html nil (dev rust unread) "https://feeds.feedburner.com/steveklabnik/words" nil) ("www.bunniestudios.com" . "https://www.bunniestudios.com/blog/?p=5701") #s(elfeed-entry ("www.bunniestudios.com" . "https://www.bunniestudios.com/blog/?p=5701") "Formlabs Form 3 Teardown" "https://www.bunniestudios.com/blog/?p=5701" 1578404605.0 #s(elfeed-ref "8012d746cbc4aa6eceaf6398f87e1c2cde24383e") html (("https://bunniefoo.com/form3/form3-lpu-sound.mp3" "audio/mpeg" "105796")) (hardware make unread) "https://www.bunniestudios.com/blog/?feed=rss2" (:authors ((:name "bunnie")) :categories ("Hacking" "name that ware" "Ponderings"))) ("www.bunniestudios.com" . "https://www.bunniestudios.com/blog/?p=5706") #s(elfeed-entry ("www.bunniestudios.com" . "https://www.bunniestudios.com/blog/?p=5706") "Can We Build Trustable Hardware?" "https://www.bunniestudios.com/blog/?p=5706" 1577449914.0 #s(elfeed-ref "79c65c0dd0faeddb97b3f21c756bb6a149cc2d16") html nil (hardware make unread) "https://www.bunniestudios.com/blog/?feed=rss2" (:authors ((:name "bunnie")) :categories ("Hacking" "novena" "open source" "Ponderings"))) ("www.bunniestudios.com" . "https://www.bunniestudios.com/blog/?p=5742") #s(elfeed-entry ("www.bunniestudios.com" . "https://www.bunniestudios.com/blog/?p=5742") "Name that Ware, December 2019" "https://www.bunniestudios.com/blog/?p=5742" 1577258871.0 #s(elfeed-ref "5108215724516c9b70ef4e0491e79c15c9bfc875") html nil (hardware make unread) "https://www.bunniestudios.com/blog/?feed=rss2" (:authors ((:name "bunnie")) :categories ("name that ware"))) ("www.bunniestudios.com" . "https://www.bunniestudios.com/blog/?p=5740") #s(elfeed-entry ("www.bunniestudios.com" . "https://www.bunniestudios.com/blog/?p=5740") "Winner, Name that Ware November 2019" "https://www.bunniestudios.com/blog/?p=5740" 1577258856.0 #s(elfeed-ref "d19e93ff03a0d6315ce8fd2c021f71548b654e07") html nil (hardware make unread) "https://www.bunniestudios.com/blog/?feed=rss2" (:authors ((:name "bunnie")) :categories ("name that ware"))) ("www.bunniestudios.com" . "https://www.bunniestudios.com/blog/?p=5689") #s(elfeed-entry ("www.bunniestudios.com" . "https://www.bunniestudios.com/blog/?p=5689") "The Essential Guide to Electronics in Shenzhen, Web Edition" "https://www.bunniestudios.com/blog/?p=5689" 1576487039.0 #s(elfeed-ref "af7d81362ae595bec068aad32ed2d2a301a0a40d") html nil (hardware make unread) "https://www.bunniestudios.com/blog/?feed=rss2" (:authors ((:name "bunnie")) :categories ("Made in China"))) ("www.archlinux.org" . "tag:www.archlinux.org,2020-01-15:/news/rsync-compatibility/") #s(elfeed-entry ("www.archlinux.org" . "tag:www.archlinux.org,2020-01-15:/news/rsync-compatibility/") "rsync compatibility" "https://www.archlinux.org/news/rsync-compatibility/" 1579119283.0 #s(elfeed-ref "1e636a5be1007587897f96e40f865d9f3f843820") html nil (linux os unread) "https://www.archlinux.org/feeds/news/" (:authors ((:name "Christian Hesse")))) ("www.archlinux.org" . "tag:www.archlinux.org,2020-01-04:/news/now-using-zstandard-instead-of-xz-for-package-compression/") #s(elfeed-entry ("www.archlinux.org" . "tag:www.archlinux.org,2020-01-04:/news/now-using-zstandard-instead-of-xz-for-package-compression/") "Now using Zstandard instead of xz for package compression" "https://www.archlinux.org/news/now-using-zstandard-instead-of-xz-for-package-compression/" 1578170155.0 #s(elfeed-ref "96c2c97714f82210f8825edf663c22dd5bc4cf19") html nil (linux os unread) "https://www.archlinux.org/feeds/news/" (:authors ((:name "Robin Broda")))) ("www.archlinux.org" . "tag:www.archlinux.org,2019-12-20:/news/xorg-cleanup-requires-manual-intervention/") #s(elfeed-entry ("www.archlinux.org" . "tag:www.archlinux.org,2019-12-20:/news/xorg-cleanup-requires-manual-intervention/") "Xorg cleanup requires manual intervention" "https://www.archlinux.org/news/xorg-cleanup-requires-manual-intervention/" 1576849060.0 #s(elfeed-ref "948cc26f18cec0501f63733daa97d92c070dced2") html nil (linux os unread) "https://www.archlinux.org/feeds/news/" (:authors ((:name "Andreas Radke")))) ("www.archlinux.org" . "tag:www.archlinux.org,2019-11-25:/news/primus_vk13-1-update-requires-manual-intervention/") #s(elfeed-entry ("www.archlinux.org" . "tag:www.archlinux.org,2019-11-25:/news/primus_vk13-1-update-requires-manual-intervention/") "primus_vk>=1.3-1 update requires manual intervention" "https://www.archlinux.org/news/primus_vk13-1-update-requires-manual-intervention/" 1574687025.0 #s(elfeed-ref "d317590b62f75e3052ddb505f38e2e2e3a238e97") html nil (linux os unread) "https://www.archlinux.org/feeds/news/" (:authors ((:name "Giancarlo Razzolini")))) ("www.archlinux.org" . "tag:www.archlinux.org,2019-11-10:/news/new-kernel-packages-and-mkinitcpio-hooks/") #s(elfeed-entry ("www.archlinux.org" . "tag:www.archlinux.org,2019-11-10:/news/new-kernel-packages-and-mkinitcpio-hooks/") "New kernel packages and mkinitcpio hooks" "https://www.archlinux.org/news/new-kernel-packages-and-mkinitcpio-hooks/" 1573422084.0 #s(elfeed-ref "8b911c0337a5843169d8a268fcb25f4da6b9f44b") html nil (linux os unread) "https://www.archlinux.org/feeds/news/" (:authors ((:name "Giancarlo Razzolini")))) ("www.archlinux.org" . "tag:www.archlinux.org,2019-10-25:/news/clarification-regarding-recent-email-activity-on-the-arch-announce-list/") #s(elfeed-entry ("www.archlinux.org" . "tag:www.archlinux.org,2019-10-25:/news/clarification-regarding-recent-email-activity-on-the-arch-announce-list/") "Clarification regarding recent email activity on the arch-announce list" "https://www.archlinux.org/news/clarification-regarding-recent-email-activity-on-the-arch-announce-list/" 1572035266.0 #s(elfeed-ref "fa41fbb19b1868a82fd9c5ea668f325ccae2b05a") html nil (linux os unread) "https://www.archlinux.org/feeds/news/" (:authors ((:name "Giancarlo Razzolini")))) ("www.archlinux.org" . "tag:www.archlinux.org,2019-10-16:/news/required-update-to-recent-libarchive/") #s(elfeed-entry ("www.archlinux.org" . "tag:www.archlinux.org,2019-10-16:/news/required-update-to-recent-libarchive/") "Required update to recent libarchive" "https://www.archlinux.org/news/required-update-to-recent-libarchive/" 1571229834.0 #s(elfeed-ref "15bf09db50bc5857608475c20a4c79bb137ddf8b") html nil (linux os unread) "https://www.archlinux.org/feeds/news/" (:authors ((:name "Christian Hesse")))) ("www.archlinux.org" . "tag:www.archlinux.org,2019-10-06:/news/base-group-replaced-by-mandatory-base-package-manual-intervention-required/") #s(elfeed-entry ("www.archlinux.org" . "tag:www.archlinux.org,2019-10-06:/news/base-group-replaced-by-mandatory-base-package-manual-intervention-required/") "`base` group replaced by mandatory `base` package - manual intervention required" "https://www.archlinux.org/news/base-group-replaced-by-mandatory-base-package-manual-intervention-required/" 1570356552.0 #s(elfeed-ref "933c1a012634fa35cabe030c307208cafd03fa64") html nil (linux os unread) "https://www.archlinux.org/feeds/news/" (:authors ((:name "Robin Broda")))) ("www.archlinux.org" . "tag:www.archlinux.org,2019-08-26:/news/astyle31-2-update-requires-manual-intervention/") #s(elfeed-entry ("www.archlinux.org" . "tag:www.archlinux.org,2019-08-26:/news/astyle31-2-update-requires-manual-intervention/") "astyle>=3.1-2 update requires manual intervention" "https://www.archlinux.org/news/astyle31-2-update-requires-manual-intervention/" 1566801548.0 #s(elfeed-ref "e466d90652c907071b9bf69c3db93e25601549b1") html nil (linux os unread) "https://www.archlinux.org/feeds/news/" (:authors ((:name "Antonio Rojas")))) ("www.archlinux.org" . "tag:www.archlinux.org,2019-08-20:/news/tensorflow1140-5-update-requires-manual-intervention/") #s(elfeed-entry ("www.archlinux.org" . "tag:www.archlinux.org,2019-08-20:/news/tensorflow1140-5-update-requires-manual-intervention/") "tensorflow>=1.14.0-5 update requires manual intervention" "https://www.archlinux.org/news/tensorflow1140-5-update-requires-manual-intervention/" 1566339737.0 #s(elfeed-ref "8be7372c4817364044d02ab58a28363da0e0919c") html nil (linux os unread) "https://www.archlinux.org/feeds/news/" (:authors ((:name "Konstantin Gizdov")))) ("neopythonic.blogspot.com" . "tag:blogger.com,1999:blog-4195135246107166251.post-775339472173253922") #s(elfeed-entry ("neopythonic.blogspot.com" . "tag:blogger.com,1999:blog-4195135246107166251.post-775339472173253922") "Why operators are useful" "https://neopythonic.blogspot.com/2019/03/why-operators-are-useful.html" 1552647480.0 #s(elfeed-ref "66a1ff4660f9582391b721d5b2c183f06ff9b44e") html nil (dev python unread) "https://neopythonic.blogspot.com/feeds/posts/default" (:authors ((:name "Guido van Rossum" :uri "http://www.blogger.com/profile/12821714508588242516" :email "noreply@blogger.com")) :author "Guido van Rossum")) ("neopythonic.blogspot.com" . "tag:blogger.com,1999:blog-4195135246107166251.post-2471146972433715807") #s(elfeed-entry ("neopythonic.blogspot.com" . "tag:blogger.com,1999:blog-4195135246107166251.post-2471146972433715807") "What to do with your computer science career" "https://neopythonic.blogspot.com/2018/11/what-do-do-with-your-computer-science.html" 1543223580.0 #s(elfeed-ref "dc04ab243a13d2444f7b34a0d2ca13e1d1df6f59") html nil (dev python unread) "https://neopythonic.blogspot.com/feeds/posts/default" (:authors ((:name "Guido van Rossum" :uri "http://www.blogger.com/profile/12821714508588242516" :email "noreply@blogger.com")) :author "Guido van Rossum")) ("neopythonic.blogspot.com" . "tag:blogger.com,1999:blog-4195135246107166251.post-2468107226962512288") #s(elfeed-entry ("neopythonic.blogspot.com" . "tag:blogger.com,1999:blog-4195135246107166251.post-2468107226962512288") "About spammers and comments" "https://neopythonic.blogspot.com/2016/07/about-spammers-and-comments.html" 1469283060.0 #s(elfeed-ref "e1a5ba78b5ff958b3f7b9eb88ca6d3830ec4b2db") html nil (dev python unread) "https://neopythonic.blogspot.com/feeds/posts/default" (:authors ((:name "Guido van Rossum" :uri "http://www.blogger.com/profile/12821714508588242516" :email "noreply@blogger.com")) :author "Guido van Rossum")) ("neopythonic.blogspot.com" . "tag:blogger.com,1999:blog-4195135246107166251.post-4387175608679924841") #s(elfeed-entry ("neopythonic.blogspot.com" . "tag:blogger.com,1999:blog-4195135246107166251.post-4387175608679924841") "Union syntax" "https://neopythonic.blogspot.com/2016/05/union-syntax.html" 1463572500.0 #s(elfeed-ref "ca864498873851f402647151049b435604712c98") html nil (dev python unread) "https://neopythonic.blogspot.com/feeds/posts/default" (:authors ((:name "Guido van Rossum" :uri "http://www.blogger.com/profile/12821714508588242516" :email "noreply@blogger.com")) :author "Guido van Rossum")) ("neopythonic.blogspot.com" . "tag:blogger.com,1999:blog-4195135246107166251.post-8854185106045973213") #s(elfeed-entry ("neopythonic.blogspot.com" . "tag:blogger.com,1999:blog-4195135246107166251.post-8854185106045973213") "Adding type annotations for fspath" "https://neopythonic.blogspot.com/2016/05/adding-type-annotations-for-fspath.html" 1463555160.0 #s(elfeed-ref "5064043dea0fc7f57db58ff59942d6d4780a7e49") html nil (dev python unread) "https://neopythonic.blogspot.com/feeds/posts/default" (:authors ((:name "Guido van Rossum" :uri "http://www.blogger.com/profile/12821714508588242516" :email "noreply@blogger.com")) :author "Guido van Rossum")) ("neopythonic.blogspot.com" . "tag:blogger.com,1999:blog-4195135246107166251.post-1468618515324597653") #s(elfeed-entry ("neopythonic.blogspot.com" . "tag:blogger.com,1999:blog-4195135246107166251.post-1468618515324597653") "The AnyStr type variable" "https://neopythonic.blogspot.com/2016/05/the-anystr-type-variable.html" 1463478780.0 #s(elfeed-ref "53ab593a827488bd4ab3879798d1cd10cb105c99") html nil (dev python unread) "https://neopythonic.blogspot.com/feeds/posts/default" (:authors ((:name "Guido van Rossum" :uri "http://www.blogger.com/profile/12821714508588242516" :email "noreply@blogger.com")) :author "Guido van Rossum")) ("neopythonic.blogspot.com" . "tag:blogger.com,1999:blog-4195135246107166251.post-218945325011447228") #s(elfeed-entry ("neopythonic.blogspot.com" . "tag:blogger.com,1999:blog-4195135246107166251.post-218945325011447228") "King's Day Speech" "https://neopythonic.blogspot.com/2016/04/kings-day-speech.html" 1461752220.0 #s(elfeed-ref "1904707b24b5ee4225b8482baebe1a01b0bbaadb") html nil (dev python unread) "https://neopythonic.blogspot.com/feeds/posts/default" (:authors ((:name "Guido van Rossum" :uri "http://www.blogger.com/profile/12821714508588242516" :email "noreply@blogger.com")) :author "Guido van Rossum")) ("neopythonic.blogspot.com" . "tag:blogger.com,1999:blog-4195135246107166251.post-3167655459813772349") #s(elfeed-entry ("neopythonic.blogspot.com" . "tag:blogger.com,1999:blog-4195135246107166251.post-3167655459813772349") "Book review: Introduction to Computer Science Using Python (by Charles Dierbach)" "https://neopythonic.blogspot.com/2013/10/book-review-charles-dierbach.html" 1382968560.0 #s(elfeed-ref "b8ced39033a4d7dbe7ffb4ca5db4c70864ade1fe") html nil (dev python unread) "https://neopythonic.blogspot.com/feeds/posts/default" (:authors ((:name "Guido van Rossum" :uri "http://www.blogger.com/profile/12821714508588242516" :email "noreply@blogger.com")) :categories ("book review" "computer science" "python") :author "Guido van Rossum")) ("neopythonic.blogspot.com" . "tag:blogger.com,1999:blog-4195135246107166251.post-1365333064034396988") #s(elfeed-entry ("neopythonic.blogspot.com" . "tag:blogger.com,1999:blog-4195135246107166251.post-1365333064034396988") "Letter to a young programmer" "https://neopythonic.blogspot.com/2013/10/letter-to-young-programmer.html" 1382642340.0 #s(elfeed-ref "d34edf05d415f67be621609876a158713958e674") html nil (dev python unread) "https://neopythonic.blogspot.com/feeds/posts/default" (:authors ((:name "Guido van Rossum" :uri "http://www.blogger.com/profile/12821714508588242516" :email "noreply@blogger.com")) :author "Guido van Rossum")) ("neopythonic.blogspot.com" . "tag:blogger.com,1999:blog-4195135246107166251.post-466875216353064816") #s(elfeed-entry ("neopythonic.blogspot.com" . "tag:blogger.com,1999:blog-4195135246107166251.post-466875216353064816") "Compare-And-Set in Memcache" "https://neopythonic.blogspot.com/2011/08/compare-and-set-in-memcache.html" 1314266340.0 #s(elfeed-ref "5ae9efe25b0e522584f1e61239068c2a16e9c4e2") html nil (dev python unread) "https://neopythonic.blogspot.com/feeds/posts/default" (:authors ((:name "Guido van Rossum" :uri "http://www.blogger.com/profile/12821714508588242516" :email "noreply@blogger.com")) :categories ("algorithms" "appengine" "google" "memcache" "python") :author "Guido van Rossum")) ("neopythonic.blogspot.com" . "tag:blogger.com,1999:blog-4195135246107166251.post-1297815584959918832") #s(elfeed-entry ("neopythonic.blogspot.com" . "tag:blogger.com,1999:blog-4195135246107166251.post-1297815584959918832") "Before Python" "https://neopythonic.blogspot.com/2011/07/before-python.html" 1311592620.0 #s(elfeed-ref "41e799c3c993b0f4b20004f7e58a76052b17185c") html nil (dev python unread) "https://neopythonic.blogspot.com/feeds/posts/default" (:authors ((:name "Guido van Rossum" :uri "http://www.blogger.com/profile/12821714508588242516" :email "noreply@blogger.com")) :categories ("personal" "programming languages" "python") :author "Guido van Rossum")) ("neopythonic.blogspot.com" . "tag:blogger.com,1999:blog-4195135246107166251.post-9216930950165013030") #s(elfeed-entry ("neopythonic.blogspot.com" . "tag:blogger.com,1999:blog-4195135246107166251.post-9216930950165013030") "The depth and breadth of Python" "https://neopythonic.blogspot.com/2011/06/depth-and-breadth-of-python.html" 1307092620.0 #s(elfeed-ref "43c8928baa989901c83b18af140d612d9193d71f") html nil (dev python unread) "https://neopythonic.blogspot.com/feeds/posts/default" (:authors ((:name "Guido van Rossum" :uri "http://www.blogger.com/profile/12821714508588242516" :email "noreply@blogger.com")) :categories ("algorithms" "personal" "programming languages" "python" "technology") :author "Guido van Rossum")) ("neopythonic.blogspot.com" . "tag:blogger.com,1999:blog-4195135246107166251.post-255580926374362830") #s(elfeed-entry ("neopythonic.blogspot.com" . "tag:blogger.com,1999:blog-4195135246107166251.post-255580926374362830") "Asynchronous RPC in App Engine Today" "https://neopythonic.blogspot.com/2011/01/asynchronous-rpc-in-app-engine-today.html" 1295863620.0 #s(elfeed-ref "43e95bf502c358190ea4f269121d7e992745e7d8") html nil (dev python unread) "https://neopythonic.blogspot.com/feeds/posts/default" (:authors ((:name "Guido van Rossum" :uri "http://www.blogger.com/profile/12821714508588242516" :email "noreply@blogger.com")) :categories ("appengine" "python") :author "Guido van Rossum")) ("neopythonic.blogspot.com" . "tag:blogger.com,1999:blog-4195135246107166251.post-4493381985776030546") #s(elfeed-entry ("neopythonic.blogspot.com" . "tag:blogger.com,1999:blog-4195135246107166251.post-4493381985776030546") "A new App Engine datastore API" "https://neopythonic.blogspot.com/2011/01/new-app-engine-datastore-api.html" 1294402800.0 #s(elfeed-ref "1f8432a318727f62d16f613a82335f01ce95ea74") html nil (dev python unread) "https://neopythonic.blogspot.com/feeds/posts/default" (:authors ((:name "Guido van Rossum" :uri "http://www.blogger.com/profile/12821714508588242516" :email "noreply@blogger.com")) :categories ("appengine" "python") :author "Guido van Rossum")) ("neopythonic.blogspot.com" . "tag:blogger.com,1999:blog-4195135246107166251.post-677348085577431332") #s(elfeed-entry ("neopythonic.blogspot.com" . "tag:blogger.com,1999:blog-4195135246107166251.post-677348085577431332") "While-you-type Searching" "https://neopythonic.blogspot.com/2009/12/while-you-type-searching.html" 1260539100.0 #s(elfeed-ref "d0ca400d2e2d8c7c3e8da6fd6573b6a35fa48e26") html nil (dev python unread) "https://neopythonic.blogspot.com/feeds/posts/default" (:authors ((:name "Guido van Rossum" :uri "http://www.blogger.com/profile/12821714508588242516" :email "noreply@blogger.com")) :author "Guido van Rossum")) ("neopythonic.blogspot.com" . "tag:blogger.com,1999:blog-4195135246107166251.post-6686408606508944888") #s(elfeed-entry ("neopythonic.blogspot.com" . "tag:blogger.com,1999:blog-4195135246107166251.post-6686408606508944888") "Python in the Scientific World" "https://neopythonic.blogspot.com/2009/11/python-in-scientific-world.html" 1257415920.0 #s(elfeed-ref "d34f88ff063d999453bbf6d3e897cfa51781a044") html nil (dev python unread) "https://neopythonic.blogspot.com/feeds/posts/default" (:authors ((:name "Guido van Rossum" :uri "http://www.blogger.com/profile/12821714508588242516" :email "noreply@blogger.com")) :categories ("python") :author "Guido van Rossum")) ("neopythonic.blogspot.com" . "tag:blogger.com,1999:blog-4195135246107166251.post-7278397071139257786") #s(elfeed-entry ("neopythonic.blogspot.com" . "tag:blogger.com,1999:blog-4195135246107166251.post-7278397071139257786") "Lovely Python!" "https://neopythonic.blogspot.com/2009/09/lovely-python.html" 1253180880.0 #s(elfeed-ref "4d14c6bca97f3b198a40805c4a311e386f547e57") html nil (dev python unread) "https://neopythonic.blogspot.com/feeds/posts/default" (:authors ((:name "Guido van Rossum" :uri "http://www.blogger.com/profile/12821714508588242516" :email "noreply@blogger.com")) :author "Guido van Rossum")) ("neopythonic.blogspot.com" . "tag:blogger.com,1999:blog-4195135246107166251.post-2874247659060782299") #s(elfeed-entry ("neopythonic.blogspot.com" . "tag:blogger.com,1999:blog-4195135246107166251.post-2874247659060782299") "Scientists Discover That Hidden Persuaders Are Real" "https://neopythonic.blogspot.com/2009/07/scientists-discover-that-hidden.html" 1248269340.0 #s(elfeed-ref "eaffff7236de8b0481239fcc3d1ba2289387d1d9") html nil (dev python unread) "https://neopythonic.blogspot.com/feeds/posts/default" (:authors ((:name "Guido van Rossum" :uri "http://www.blogger.com/profile/12821714508588242516" :email "noreply@blogger.com")) :categories ("book review" "politics") :author "Guido van Rossum")) ("neopythonic.blogspot.com" . "tag:blogger.com,1999:blog-4195135246107166251.post-6051448894535598481") #s(elfeed-entry ("neopythonic.blogspot.com" . "tag:blogger.com,1999:blog-4195135246107166251.post-6051448894535598481") "Progressive vs. Conservative" "https://neopythonic.blogspot.com/2009/07/progressive-vs-conservative.html" 1248177000.0 #s(elfeed-ref "0e7887f4fb989f15a6db30458b5ff16f18e9f843") html nil (dev python unread) "https://neopythonic.blogspot.com/feeds/posts/default" (:authors ((:name "Guido van Rossum" :uri "http://www.blogger.com/profile/12821714508588242516" :email "noreply@blogger.com")) :categories ("book review" "politics" "python") :author "Guido van Rossum")) ("neopythonic.blogspot.com" . "tag:blogger.com,1999:blog-4195135246107166251.post-8117106389970387149") #s(elfeed-entry ("neopythonic.blogspot.com" . "tag:blogger.com,1999:blog-4195135246107166251.post-8117106389970387149") "IronPython in Action and the Decline of Windows" "https://neopythonic.blogspot.com/2009/06/ironpython-in-action-and-decline-of.html" 1246017900.0 #s(elfeed-ref "4f382e5f400dd0b052a769954b7a6d539f39477e") html nil (dev python unread) "https://neopythonic.blogspot.com/feeds/posts/default" (:authors ((:name "Guido van Rossum" :uri "http://www.blogger.com/profile/12821714508588242516" :email "noreply@blogger.com")) :categories ("book review" "windows") :author "Guido van Rossum")) ("neopythonic.blogspot.com" . "tag:blogger.com,1999:blog-4195135246107166251.post-566392419873568850") #s(elfeed-entry ("neopythonic.blogspot.com" . "tag:blogger.com,1999:blog-4195135246107166251.post-566392419873568850") "Highs and Lows of IEEE Computer Magazine" "https://neopythonic.blogspot.com/2009/06/higs-and-lows-of-ieee-computer-magazine.html" 1245178020.0 #s(elfeed-ref "32c0d03ac294085e95c6c1ede5f18cc62cfa2a85") html nil (dev python unread) "https://neopythonic.blogspot.com/feeds/posts/default" (:authors ((:name "Guido van Rossum" :uri "http://www.blogger.com/profile/12821714508588242516" :email "noreply@blogger.com")) :author "Guido van Rossum")) ("neopythonic.blogspot.com" . "tag:blogger.com,1999:blog-4195135246107166251.post-7726509872610193829") #s(elfeed-entry ("neopythonic.blogspot.com" . "tag:blogger.com,1999:blog-4195135246107166251.post-7726509872610193829") "New App Engine Book" "https://neopythonic.blogspot.com/2009/06/new-app-engine-book.html" 1245057600.0 #s(elfeed-ref "cefe74dc5c077027ea947c9f62dcaa2f03640da2") html nil (dev python unread) "https://neopythonic.blogspot.com/feeds/posts/default" (:authors ((:name "Guido van Rossum" :uri "http://www.blogger.com/profile/12821714508588242516" :email "noreply@blogger.com")) :categories ("appengine" "book review" "python") :author "Guido van Rossum")) ("neopythonic.blogspot.com" . "tag:blogger.com,1999:blog-4195135246107166251.post-3285747448942201250") #s(elfeed-entry ("neopythonic.blogspot.com" . "tag:blogger.com,1999:blog-4195135246107166251.post-3285747448942201250") "So you want to learn Python?" "https://neopythonic.blogspot.com/2009/05/so-you-want-to-learn-python.html" 1243352760.0 #s(elfeed-ref "0cf22b902a89d296d6942e8665e4d393eb7a96ae") html nil (dev python unread) "https://neopythonic.blogspot.com/feeds/posts/default" (:authors ((:name "Guido van Rossum" :uri "http://www.blogger.com/profile/12821714508588242516" :email "noreply@blogger.com")) :categories ("book review" "python") :author "Guido van Rossum")) ("neopythonic.blogspot.com" . "tag:blogger.com,1999:blog-4195135246107166251.post-2448992805347535879") #s(elfeed-entry ("neopythonic.blogspot.com" . "tag:blogger.com,1999:blog-4195135246107166251.post-2448992805347535879") "Final Words on Tail Calls" "https://neopythonic.blogspot.com/2009/04/final-words-on-tail-calls.html" 1240861860.0 #s(elfeed-ref "2192a79bfdb69566af34e98c39cd5e9c7143ad35") html nil (dev python unread) "https://neopythonic.blogspot.com/feeds/posts/default" (:authors ((:name "Guido van Rossum" :uri "http://www.blogger.com/profile/12821714508588242516" :email "noreply@blogger.com")) :categories ("algorithms" "programming languages" "python") :author "Guido van Rossum")) ("neopythonic.blogspot.com" . "tag:blogger.com,1999:blog-4195135246107166251.post-1180522963260162790") #s(elfeed-entry ("neopythonic.blogspot.com" . "tag:blogger.com,1999:blog-4195135246107166251.post-1180522963260162790") "People Who Annoy Me" "https://neopythonic.blogspot.com/2009/04/people-who-annoy-me.html" 1240650240.0 #s(elfeed-ref "07b8396f6fb786c591dd2efd3bf99d0f83673b39") html nil (dev python unread) "https://neopythonic.blogspot.com/feeds/posts/default" (:authors ((:name "Guido van Rossum" :uri "http://www.blogger.com/profile/12821714508588242516" :email "noreply@blogger.com")) :categories ("personal") :author "Guido van Rossum")) ("bitbashing.io" . "/concurrency-primer.html") #s(elfeed-entry ("bitbashing.io" . "/concurrency-primer.html") "What every systems programmer should know about concurrency" "/concurrency-primer.html" 1511913600.0 #s(elfeed-ref "f8712e7aaf113ee352e009d270aa9c44412564fd") html nil (C dev unread) "http://bitbashing.io/feed.xml" nil) ("bitbashing.io" . "/tex.html") #s(elfeed-entry ("bitbashing.io" . "/tex.html") "TeX: A tale of two worlds" "/tex.html" 1508198400.0 #s(elfeed-ref "c0267e8e5f2dbf4a82ba3c72d669db26ffe8f519") html nil (C dev unread) "http://bitbashing.io/feed.xml" nil) ("bitbashing.io" . "/std-visit.html") #s(elfeed-entry ("bitbashing.io" . "/std-visit.html") "std::visit is everything wrong with modern C++" "/std-visit.html" 1505347200.0 #s(elfeed-ref "d1007d444e964e4107a4633f4cc62e1b8705df19") html nil (C dev unread) "http://bitbashing.io/feed.xml" nil) ("bitbashing.io" . "/now-with-ssl.html") #s(elfeed-entry ("bitbashing.io" . "/now-with-ssl.html") "Now with SSL" "/now-with-ssl.html" 1502150400.0 #s(elfeed-ref "1cdd2356f06b2ed89c371b8c06090203bb179340") html nil (C dev unread) "http://bitbashing.io/feed.xml" nil) ("bitbashing.io" . "/comparing-floats.html") #s(elfeed-entry ("bitbashing.io" . "/comparing-floats.html") "Comparing Floating-Point Numbers Is Tricky" "/comparing-floats.html" 1490832000.0 #s(elfeed-ref "f7615de5f86147ef61b6485c7f9a2422968f84af") html nil (C dev unread) "http://bitbashing.io/feed.xml" nil) ("bitbashing.io" . "/embedded-cpp.html") #s(elfeed-entry ("bitbashing.io" . "/embedded-cpp.html") "C++ On Embedded Systems" "/embedded-cpp.html" 1487548800.0 #s(elfeed-ref "97257133dfb8a66f54b23158335afdd12e87b5ca") html nil (C dev unread) "http://bitbashing.io/feed.xml" nil) ("bitbashing.io" . "/terrible-style.html") #s(elfeed-entry ("bitbashing.io" . "/terrible-style.html") "How to write (and use) a terrible style guide" "/terrible-style.html" 1447113600.0 #s(elfeed-ref "dec921c56a9274ce14e79feddbb72adad29c9307") html nil (C dev unread) "http://bitbashing.io/feed.xml" nil) ("bitbashing.io" . "/be-lazy-use-ranges.html") #s(elfeed-entry ("bitbashing.io" . "/be-lazy-use-ranges.html") "Be lazy. Use ranges." "/be-lazy-use-ranges.html" 1437264000.0 #s(elfeed-ref "576d2fa21a075b0112748d1638b4ec0ab9713e7e") html nil (C dev unread) "http://bitbashing.io/feed.xml" nil) ("bitbashing.io" . "/smoke-tests.html") #s(elfeed-entry ("bitbashing.io" . "/smoke-tests.html") "In defense of smoke tests" "/smoke-tests.html" 1434240000.0 #s(elfeed-ref "974c100f4b54133c1e5d5297b97d9a474d76c884") html nil (C dev unread) "http://bitbashing.io/feed.xml" nil) ("bitbashing.io" . "/time-for-d-to-own-up.html") #s(elfeed-entry ("bitbashing.io" . "/time-for-d-to-own-up.html") "It's time for D to own up" "/time-for-d-to-own-up.html" 1429574400.0 #s(elfeed-ref "dac15734abeba9a71795593f063ace58c30c5ad3") html nil (C dev unread) "http://bitbashing.io/feed.xml" nil) ("hynek.me" . "https://hynek.me/articles/books-that-changed-my-life/") #s(elfeed-entry ("hynek.me" . "https://hynek.me/articles/books-that-changed-my-life/") "Books That Changed My Life" "https://hynek.me/articles/books-that-changed-my-life/" 1569240000.0 #s(elfeed-ref "480f02cfe1c5706f2187fa398bb176d233ff7865") html nil (dev python unread) "https://hynek.me/index.xml" (:authors ((:name "Hynek Schlawack" :uri "https://hynek.me/" :email "hs@ox.cx")) :author "Hynek Schlawack")) ("hynek.me" . "https://hynek.me/articles/simple-python-azure-pipelines/") #s(elfeed-entry ("hynek.me" . "https://hynek.me/articles/simple-python-azure-pipelines/") "Python in Azure Pipelines, Step by Step" "https://hynek.me/articles/simple-python-azure-pipelines/" 1559553240.0 #s(elfeed-ref "2c9685643bb45da7f1704f12d0e3eef3741238d8") html nil (dev python unread) "https://hynek.me/index.xml" (:authors ((:name "Hynek Schlawack" :uri "https://hynek.me/" :email "hs@ox.cx")) :author "Hynek Schlawack")) ("hynek.me" . "https://hynek.me/articles/hallway-track/") #s(elfeed-entry ("hynek.me" . "https://hynek.me/articles/hallway-track/") "The Price of the Hallway Track" "https://hynek.me/articles/hallway-track/" 1557943200.0 #s(elfeed-ref "f1f8b8b2641ad219c3f4c1a87c79f1da0c334200") html nil (dev python unread) "https://hynek.me/index.xml" (:authors ((:name "Hynek Schlawack" :uri "https://hynek.me/" :email "hs@ox.cx")) :author "Hynek Schlawack")) ("hynek.me" . "https://hynek.me/talks/python-foss/") #s(elfeed-entry ("hynek.me" . "https://hynek.me/talks/python-foss/") "Maintaining a Python Project When It’s Not Your Job" "https://hynek.me/talks/python-foss/" 1556841600.0 #s(elfeed-ref "7a53b2c808b3acb6e536119e45da6f822d3219c4") html nil (dev python unread) "https://hynek.me/index.xml" (:authors ((:name "Hynek Schlawack" :uri "https://hynek.me/" :email "hs@ox.cx")) :author "Hynek Schlawack")) ("hynek.me" . "https://hynek.me/articles/python-app-deps-2018/") #s(elfeed-entry ("hynek.me" . "https://hynek.me/articles/python-app-deps-2018/") "Python Application Dependency Management in 2018" "https://hynek.me/articles/python-app-deps-2018/" 1543510800.0 #s(elfeed-ref "021a72d1ddb157cb9056f078454fb99f7c710d20") html nil (dev python unread) "https://hynek.me/index.xml" (:authors ((:name "Hynek Schlawack" :uri "https://hynek.me/" :email "hs@ox.cx")) :author "Hynek Schlawack")) ("hynek.me" . "https://hynek.me/talks/deploy-friendly/") #s(elfeed-entry ("hynek.me" . "https://hynek.me/talks/deploy-friendly/") "How to Write Deployment-friendly Applications" "https://hynek.me/talks/deploy-friendly/" 1526083200.0 #s(elfeed-ref "c0ca5d6276d680901a8ff173bb53f442186a2d08") html nil (dev python unread) "https://hynek.me/index.xml" (:authors ((:name "Hynek Schlawack" :uri "https://hynek.me/" :email "hs@ox.cx")) :author "Hynek Schlawack")) ("hynek.me" . "https://hynek.me/articles/hashes-and-equality/") #s(elfeed-entry ("hynek.me" . "https://hynek.me/articles/hashes-and-equality/") "Python Hashes and Equality" "https://hynek.me/articles/hashes-and-equality/" 1511160300.0 #s(elfeed-ref "1ce46f321e244437bb6cea08afbca5b5d4adaf87") html nil (dev python unread) "https://hynek.me/index.xml" (:authors ((:name "Hynek Schlawack" :uri "https://hynek.me/" :email "hs@ox.cx")) :author "Hynek Schlawack")) ("hynek.me" . "https://hynek.me/articles/docker-signals/") #s(elfeed-entry ("hynek.me" . "https://hynek.me/articles/docker-signals/") "Why Your Dockerized Application Isn’t Receiving Signals" "https://hynek.me/articles/docker-signals/" 1497830400.0 #s(elfeed-ref "9a4567b8588573eaa9cc17ff5013ac0ec598fad7") html nil (dev python unread) "https://hynek.me/index.xml" (:authors ((:name "Hynek Schlawack" :uri "https://hynek.me/" :email "hs@ox.cx")) :author "Hynek Schlawack")) ("hynek.me" . "https://hynek.me/articles/speaking/") #s(elfeed-entry ("hynek.me" . "https://hynek.me/articles/speaking/") "On Conference Speaking" "https://hynek.me/articles/speaking/" 1496102400.0 #s(elfeed-ref "a7026a37af858d227df7d773c72f9b8727d6a658") html nil (dev python unread) "https://hynek.me/index.xml" (:authors ((:name "Hynek Schlawack" :uri "https://hynek.me/" :email "hs@ox.cx")) :author "Hynek Schlawack")) ("hynek.me" . "https://hynek.me/talks/reliability/") #s(elfeed-entry ("hynek.me" . "https://hynek.me/talks/reliability/") "Solid Snakes or: How to Take 5 Weeks of Vacation" "https://hynek.me/talks/reliability/" 1495152000.0 #s(elfeed-ref "831a62941aef63f0ead96bf4361259de8b16a9d8") html nil (dev python unread) "https://hynek.me/index.xml" (:authors ((:name "Hynek Schlawack" :uri "https://hynek.me/" :email "hs@ox.cx")) :author "Hynek Schlawack")) ("hynek.me" . "https://hynek.me/articles/serialization/") #s(elfeed-entry ("hynek.me" . "https://hynek.me/articles/serialization/") "Better Python Object Serialization" "https://hynek.me/articles/serialization/" 1471869000.0 #s(elfeed-ref "d9c7babef81d83eb296fbf40868aa3e79b347e21") html nil (dev python unread) "https://hynek.me/index.xml" (:authors ((:name "Hynek Schlawack" :uri "https://hynek.me/" :email "hs@ox.cx")) :author "Hynek Schlawack")) ("hynek.me" . "https://hynek.me/articles/decorators/") #s(elfeed-entry ("hynek.me" . "https://hynek.me/articles/decorators/") "Please Fix Your Decorators" "https://hynek.me/articles/decorators/" 1470052800.0 #s(elfeed-ref "f19248440264c62162952cb6f29da33868e77426") html nil (dev python unread) "https://hynek.me/index.xml" (:authors ((:name "Hynek Schlawack" :uri "https://hynek.me/" :email "hs@ox.cx")) :author "Hynek Schlawack")) ("hynek.me" . "https://hynek.me/talks/prometheus/") #s(elfeed-entry ("hynek.me" . "https://hynek.me/talks/prometheus/") "Get Instrumented: How Prometheus Can Unify Your Metrics" "https://hynek.me/talks/prometheus/" 1464652800.0 #s(elfeed-ref "396eec50944d6cd1dc7086f60ed92d169ada5f2b") html nil (dev python unread) "https://hynek.me/index.xml" (:authors ((:name "Hynek Schlawack" :uri "https://hynek.me/" :email "hs@ox.cx")) :author "Hynek Schlawack")) ("hynek.me" . "https://hynek.me/articles/conditional-python-dependencies/") #s(elfeed-entry ("hynek.me" . "https://hynek.me/articles/conditional-python-dependencies/") "Conditional Python Dependencies" "https://hynek.me/articles/conditional-python-dependencies/" 1463616000.0 #s(elfeed-ref "862c6f418de770cbebcbc464e4e55fb60857f310") html nil (dev python unread) "https://hynek.me/index.xml" (:authors ((:name "Hynek Schlawack" :uri "https://hynek.me/" :email "hs@ox.cx")) :author "Hynek Schlawack")) ("hynek.me" . "https://hynek.me/articles/python3-2016/") #s(elfeed-entry ("hynek.me" . "https://hynek.me/articles/python3-2016/") "Python 3 in 2016" "https://hynek.me/articles/python3-2016/" 1455667200.0 #s(elfeed-ref "6d2abde30da5b6dc57759070b6e12c949497f29d") html nil (dev python unread) "https://hynek.me/index.xml" (:authors ((:name "Hynek Schlawack" :uri "https://hynek.me/" :email "hs@ox.cx")) :author "Hynek Schlawack")) ("hynek.me" . "https://hynek.me/articles/hasattr/") #s(elfeed-entry ("hynek.me" . "https://hynek.me/articles/hasattr/") "hasattr() – A Dangerous Misnomer" "https://hynek.me/articles/hasattr/" 1452643200.0 #s(elfeed-ref "31479ff404641409f4a04f2766500483fc56e878") html nil (dev python unread) "https://hynek.me/index.xml" (:authors ((:name "Hynek Schlawack" :uri "https://hynek.me/" :email "hs@ox.cx")) :author "Hynek Schlawack")) ("hynek.me" . "https://hynek.me/articles/storing-passwords/") #s(elfeed-entry ("hynek.me" . "https://hynek.me/articles/storing-passwords/") "Storing Passwords in a Highly Parallelized World" "https://hynek.me/articles/storing-passwords/" 1452038400.0 #s(elfeed-ref "ac914beea73e90bec5c161eb73ce7136641a47c7") html nil (dev python unread) "https://hynek.me/index.xml" (:authors ((:name "Hynek Schlawack" :uri "https://hynek.me/" :email "hs@ox.cx")) :author "Hynek Schlawack")) ("hynek.me" . "https://hynek.me/articles/testing-packaging/") #s(elfeed-entry ("hynek.me" . "https://hynek.me/articles/testing-packaging/") "Testing & Packaging" "https://hynek.me/articles/testing-packaging/" 1445281200.0 #s(elfeed-ref "9030a5d47d9f3619d2b8e15ac32ecdaf6dfa1775") html nil (dev python unread) "https://hynek.me/index.xml" (:authors ((:name "Hynek Schlawack" :uri "https://hynek.me/" :email "hs@ox.cx")) :author "Hynek Schlawack")) ("hynek.me" . "https://hynek.me/talks/beyond-grep/") #s(elfeed-entry ("hynek.me" . "https://hynek.me/talks/beyond-grep/") "Beyond grep: Practical Logging and Metrics" "https://hynek.me/talks/beyond-grep/" 1428796800.0 #s(elfeed-ref "3b6ebf649ec5a102a2e2aaebce378aeb8c06b68f") html nil (dev python unread) "https://hynek.me/index.xml" (:authors ((:name "Hynek Schlawack" :uri "https://hynek.me/" :email "hs@ox.cx")) :author "Hynek Schlawack")) ("hynek.me" . "https://hynek.me/articles/virtualenv-lives/") #s(elfeed-entry ("hynek.me" . "https://hynek.me/articles/virtualenv-lives/") "virtualenv Lives!" "https://hynek.me/articles/virtualenv-lives/" 1410793200.0 #s(elfeed-ref "da86edef01daebe406f198ef1890cc6fa4805127") html nil (dev python unread) "https://hynek.me/index.xml" (:authors ((:name "Hynek Schlawack" :uri "https://hynek.me/" :email "hs@ox.cx")) :author "Hynek Schlawack")) ("hynek.me" . "https://hynek.me/talks/tls/") #s(elfeed-entry ("hynek.me" . "https://hynek.me/talks/tls/") "The Sorry State Of SSL" "https://hynek.me/talks/tls/" 1397260800.0 #s(elfeed-ref "2bb460e6219331d32b2af64bb7ec13a2f2c8e12f") html nil (dev python unread) "https://hynek.me/index.xml" (:authors ((:name "Hynek Schlawack" :uri "https://hynek.me/" :email "hs@ox.cx")) :author "Hynek Schlawack")) ("hynek.me" . "https://hynek.me/articles/apple-openssl-verification-surprises/") #s(elfeed-entry ("hynek.me" . "https://hynek.me/articles/apple-openssl-verification-surprises/") "Apple OpenSSL Verification Surprises" "https://hynek.me/articles/apple-openssl-verification-surprises/" 1393860600.0 #s(elfeed-ref "e892cb119902d9bfd2d8363c22cf7fb77b442ac4") html nil (dev python unread) "https://hynek.me/index.xml" (:authors ((:name "Hynek Schlawack" :uri "https://hynek.me/" :email "hs@ox.cx")) :author "Hynek Schlawack")) ("hynek.me" . "https://hynek.me/articles/sharing-your-labor-of-love-pypi-quick-and-dirty/") #s(elfeed-entry ("hynek.me" . "https://hynek.me/articles/sharing-your-labor-of-love-pypi-quick-and-dirty/") "Sharing Your Labor of Love: PyPI Quick and Dirty" "https://hynek.me/articles/sharing-your-labor-of-love-pypi-quick-and-dirty/" 1375099200.0 #s(elfeed-ref "3ed4e22a7ae375c51c67ec94f6eb4816a32a5b21") html nil (dev python unread) "https://hynek.me/index.xml" (:authors ((:name "Hynek Schlawack" :uri "https://hynek.me/" :email "hs@ox.cx")) :author "Hynek Schlawack")) ("hynek.me" . "https://hynek.me/articles/life-after-google-reader/") #s(elfeed-entry ("hynek.me" . "https://hynek.me/articles/life-after-google-reader/") "Life after Google Reader" "https://hynek.me/articles/life-after-google-reader/" 1372334400.0 #s(elfeed-ref "d00bdfc251da006acb27b7d0440b8ffeaa62cd61") html nil (dev python unread) "https://hynek.me/index.xml" (:authors ((:name "Hynek Schlawack" :uri "https://hynek.me/" :email "hs@ox.cx")) :author "Hynek Schlawack")) ("hynek.me" . "https://hynek.me/articles/a-short-summary-on-sybase-sql-anywhere-python/") #s(elfeed-entry ("hynek.me" . "https://hynek.me/articles/a-short-summary-on-sybase-sql-anywhere-python/") "A Short Summary on Sybase SQL Anywhere and Python" "https://hynek.me/articles/a-short-summary-on-sybase-sql-anywhere-python/" 1369828800.0 #s(elfeed-ref "f21e8c8a311154678c074ed7555c96244192d243") html nil (dev python unread) "https://hynek.me/index.xml" (:authors ((:name "Hynek Schlawack" :uri "https://hynek.me/" :email "hs@ox.cx")) :author "Hynek Schlawack")) ("hynek.me" . "https://hynek.me/articles/know-your-models/") #s(elfeed-entry ("hynek.me" . "https://hynek.me/articles/know-your-models/") "Know Your Models" "https://hynek.me/articles/know-your-models/" 1368619200.0 #s(elfeed-ref "6227f9a1438d35bed51febc67bc68a04becadaac") html nil (dev python unread) "https://hynek.me/index.xml" (:authors ((:name "Hynek Schlawack" :uri "https://hynek.me/" :email "hs@ox.cx")) :author "Hynek Schlawack")) ("hynek.me" . "https://hynek.me/talks/python-deployments/") #s(elfeed-entry ("hynek.me" . "https://hynek.me/talks/python-deployments/") "Solid Python Deployments for Everybody" "https://hynek.me/talks/python-deployments/" 1363392000.0 #s(elfeed-ref "e2fb4d8da85419feff79efb2b34e94fe22033fa8") html nil (dev python unread) "https://hynek.me/index.xml" (:authors ((:name "Hynek Schlawack" :uri "https://hynek.me/" :email "hs@ox.cx")) :author "Hynek Schlawack")) ("hynek.me" . "https://hynek.me/articles/taking-some-pain-out-of-python-logging/") #s(elfeed-entry ("hynek.me" . "https://hynek.me/articles/taking-some-pain-out-of-python-logging/") "Taking Some Pain out of Python Logging" "https://hynek.me/articles/taking-some-pain-out-of-python-logging/" 1362571200.0 #s(elfeed-ref "eaeaa33b1fdeb685ad25a860038469db4bb1da61") html nil (dev python unread) "https://hynek.me/index.xml" (:authors ((:name "Hynek Schlawack" :uri "https://hynek.me/" :email "hs@ox.cx")) :author "Hynek Schlawack")) ("hynek.me" . "https://hynek.me/articles/hardening-your-web-servers-ssl-ciphers/") #s(elfeed-entry ("hynek.me" . "https://hynek.me/articles/hardening-your-web-servers-ssl-ciphers/") "Hardening Your Web Server’s SSL Ciphers" "https://hynek.me/articles/hardening-your-web-servers-ssl-ciphers/" 1360065600.0 #s(elfeed-ref "0d58f9fe758a7cfe977e7f32c8804f1b9607610b") html nil (dev python unread) "https://hynek.me/index.xml" (:authors ((:name "Hynek Schlawack" :uri "https://hynek.me/" :email "hs@ox.cx")) :author "Hynek Schlawack")) ("hynek.me" . "https://hynek.me/articles/using-celery-with-pyramid/") #s(elfeed-entry ("hynek.me" . "https://hynek.me/articles/using-celery-with-pyramid/") "Using Celery with Pyramid" "https://hynek.me/articles/using-celery-with-pyramid/" 1342785600.0 #s(elfeed-ref "8b6ce94cc364becc25c81a64aa34df8ba911fd12") html nil (dev python unread) "https://hynek.me/index.xml" (:authors ((:name "Hynek Schlawack" :uri "https://hynek.me/" :email "hs@ox.cx")) :author "Hynek Schlawack")) ("hynek.me" . "https://hynek.me/articles/how-i-stopped-worrying-and-started-loving-pyladies/") #s(elfeed-entry ("hynek.me" . "https://hynek.me/articles/how-i-stopped-worrying-and-started-loving-pyladies/") "How I Stopped Worrying and Started Loving PyLadies" "https://hynek.me/articles/how-i-stopped-worrying-and-started-loving-pyladies/" 1342180800.0 #s(elfeed-ref "9a04661fb9c31c83aa656ac0cfe85f4168ace7e4") html nil (dev python unread) "https://hynek.me/index.xml" (:authors ((:name "Hynek Schlawack" :uri "https://hynek.me/" :email "hs@ox.cx")) :author "Hynek Schlawack")) ("hynek.me" . "https://hynek.me/articles/my-road-to-the-python-commit-bit/") #s(elfeed-entry ("hynek.me" . "https://hynek.me/articles/my-road-to-the-python-commit-bit/") "My Road to the Python Commit Bit" "https://hynek.me/articles/my-road-to-the-python-commit-bit/" 1337428800.0 #s(elfeed-ref "01a22b76b7d6180b19a0910d9aabfad80dd01d56") html nil (dev python unread) "https://hynek.me/index.xml" (:authors ((:name "Hynek Schlawack" :uri "https://hynek.me/" :email "hs@ox.cx")) :author "Hynek Schlawack")) ("hynek.me" . "https://hynek.me/articles/python-app-deployment-with-native-packages/") #s(elfeed-entry ("hynek.me" . "https://hynek.me/articles/python-app-deployment-with-native-packages/") "Python Application Deployment with Native Packages" "https://hynek.me/articles/python-app-deployment-with-native-packages/" 1336046400.0 #s(elfeed-ref "a4b954eab48ee434200997cdfe53e2b7b981351c") html nil (dev python unread) "https://hynek.me/index.xml" (:authors ((:name "Hynek Schlawack" :uri "https://hynek.me/" :email "hs@ox.cx")) :author "Hynek Schlawack")) ("hynek.me" . "https://hynek.me/articles/python-deployment-anti-patterns/") #s(elfeed-entry ("hynek.me" . "https://hynek.me/articles/python-deployment-anti-patterns/") "Python Deployment Anti-Patterns" "https://hynek.me/articles/python-deployment-anti-patterns/" 1335182400.0 #s(elfeed-ref "4bf3fcf9f288b3bcf7887b42f256c98f19f271bd") html nil (dev python unread) "https://hynek.me/index.xml" (:authors ((:name "Hynek Schlawack" :uri "https://hynek.me/" :email "hs@ox.cx")) :author "Hynek Schlawack")) ("hynek.me" . "https://hynek.me/articles/celery-and-sybase/") #s(elfeed-entry ("hynek.me" . "https://hynek.me/articles/celery-and-sybase/") "Celery and Sybase SQL Anywhere" "https://hynek.me/articles/celery-and-sybase/" 1330171200.0 #s(elfeed-ref "bd244b41a6f1ac8fc93d10bb3d1ce66419413d80") html nil (dev python unread) "https://hynek.me/index.xml" (:authors ((:name "Hynek Schlawack" :uri "https://hynek.me/" :email "hs@ox.cx")) :author "Hynek Schlawack")) ("hynek.me" . "https://hynek.me/articles/fleeing-from-gmail/") #s(elfeed-entry ("hynek.me" . "https://hynek.me/articles/fleeing-from-gmail/") "Fleeing from Gmail" "https://hynek.me/articles/fleeing-from-gmail/" 1327579200.0 #s(elfeed-ref "6248be0f8efcbfda079b78ce71e712dfce93c973") html nil (dev python unread) "https://hynek.me/index.xml" (:authors ((:name "Hynek Schlawack" :uri "https://hynek.me/" :email "hs@ox.cx")) :author "Hynek Schlawack")) ("hynek.me" . "https://hynek.me/articles/my-2011/") #s(elfeed-entry ("hynek.me" . "https://hynek.me/articles/my-2011/") "My 2011" "https://hynek.me/articles/my-2011/" 1325332800.0 #s(elfeed-ref "6d93077573fb4301d437a706d952491b6040f37c") html nil (dev python unread) "https://hynek.me/index.xml" (:authors ((:name "Hynek Schlawack" :uri "https://hynek.me/" :email "hs@ox.cx")) :author "Hynek Schlawack")) ("hynek.me" . "https://hynek.me/articles/dead-simple-connection-pooling-with-twisted/") #s(elfeed-entry ("hynek.me" . "https://hynek.me/articles/dead-simple-connection-pooling-with-twisted/") "Dead Simple Connection Pooling with Twisted" "https://hynek.me/articles/dead-simple-connection-pooling-with-twisted/" 1323864000.0 #s(elfeed-ref "a0c5353c887fb9db28d410c1fe664629903d9198") html nil (dev python unread) "https://hynek.me/index.xml" (:authors ((:name "Hynek Schlawack" :uri "https://hynek.me/" :email "hs@ox.cx")) :author "Hynek Schlawack")) ("hynek.me" . "https://hynek.me/articles/macvim-and-the-clipboard/") #s(elfeed-entry ("hynek.me" . "https://hynek.me/articles/macvim-and-the-clipboard/") "MacVim and the Clipboard" "https://hynek.me/articles/macvim-and-the-clipboard/" 1323172800.0 #s(elfeed-ref "0aa56dc65b43fe820b65170c317a95bc49612161") html nil (dev python unread) "https://hynek.me/index.xml" (:authors ((:name "Hynek Schlawack" :uri "https://hynek.me/" :email "hs@ox.cx")) :author "Hynek Schlawack")) ("hynek.me" . "https://hynek.me/articles/why-tomatoes-are-awesome/") #s(elfeed-entry ("hynek.me" . "https://hynek.me/articles/why-tomatoes-are-awesome/") "Why Tomatoes Are Awesome" "https://hynek.me/articles/why-tomatoes-are-awesome/" 1317470400.0 #s(elfeed-ref "2d6127945c3330f55804c49503ede1723b02cb7f") html nil (dev python unread) "https://hynek.me/index.xml" (:authors ((:name "Hynek Schlawack" :uri "https://hynek.me/" :email "hs@ox.cx")) :author "Hynek Schlawack")) ("hynek.me" . "https://hynek.me/articles/my-mutt-gmail-setup/") #s(elfeed-entry ("hynek.me" . "https://hynek.me/articles/my-mutt-gmail-setup/") "My mutt & Gmail Setup" "https://hynek.me/articles/my-mutt-gmail-setup/" 1314014400.0 #s(elfeed-ref "b2073a12104816f62566f8d06ebb8abd7d41878f") html nil (dev python unread) "https://hynek.me/index.xml" (:authors ((:name "Hynek Schlawack" :uri "https://hynek.me/" :email "hs@ox.cx")) :author "Hynek Schlawack")) ("hynek.me" . "https://hynek.me/articles/solarized-love-on-first-sight/") #s(elfeed-entry ("hynek.me" . "https://hynek.me/articles/solarized-love-on-first-sight/") "Solarized – Love on First Sight" "https://hynek.me/articles/solarized-love-on-first-sight/" 1310299200.0 #s(elfeed-ref "d896f625df702e5acbde360fe442df6900ce523f") html nil (dev python unread) "https://hynek.me/index.xml" (:authors ((:name "Hynek Schlawack" :uri "https://hynek.me/" :email "hs@ox.cx")) :author "Hynek Schlawack")) ("hynek.me" . "https://hynek.me/articles/mercurial-to-git/") #s(elfeed-entry ("hynek.me" . "https://hynek.me/articles/mercurial-to-git/") "Mercurial to Git" "https://hynek.me/articles/mercurial-to-git/" 1305028800.0 #s(elfeed-ref "fe24f7a5f0dc22e4362b428640fc23c56258da83") html nil (dev python unread) "https://hynek.me/index.xml" (:authors ((:name "Hynek Schlawack" :uri "https://hynek.me/" :email "hs@ox.cx")) :author "Hynek Schlawack")) ("hynek.me" . "https://hynek.me/articles/twisted-sybase/") #s(elfeed-entry ("hynek.me" . "https://hynek.me/articles/twisted-sybase/") "Twisted Sybase SQL Anywhere" "https://hynek.me/articles/twisted-sybase/" 1303905600.0 #s(elfeed-ref "3de053ec2639774ad23bd5ca6bb6c523255ddbed") html nil (dev python unread) "https://hynek.me/index.xml" (:authors ((:name "Hynek Schlawack" :uri "https://hynek.me/" :email "hs@ox.cx")) :author "Hynek Schlawack")) ("hynek.me" . "https://hynek.me/articles/django-postgres-ssl/") #s(elfeed-entry ("hynek.me" . "https://hynek.me/articles/django-postgres-ssl/") "Django & Postgres & SSL" "https://hynek.me/articles/django-postgres-ssl/" 1302609600.0 #s(elfeed-ref "5e7a08962167024eb85dcdcbceed6bf55a4d9647") html nil (dev python unread) "https://hynek.me/index.xml" (:authors ((:name "Hynek Schlawack" :uri "https://hynek.me/" :email "hs@ox.cx")) :author "Hynek Schlawack")) ("hynek.me" . "https://hynek.me/articles/information-diet/") #s(elfeed-entry ("hynek.me" . "https://hynek.me/articles/information-diet/") "Information Diet" "https://hynek.me/articles/information-diet/" 1301659200.0 #s(elfeed-ref "88164213b5ee88f492af8296f97e06627fc660f4") html nil (dev python unread) "https://hynek.me/index.xml" (:authors ((:name "Hynek Schlawack" :uri "https://hynek.me/" :email "hs@ox.cx")) :author "Hynek Schlawack")) ("hynek.me" . "https://hynek.me/articles/django-and-remote-sybase-servers/") #s(elfeed-entry ("hynek.me" . "https://hynek.me/articles/django-and-remote-sybase-servers/") "Django and Remote Sybase Servers" "https://hynek.me/articles/django-and-remote-sybase-servers/" 1297080000.0 #s(elfeed-ref "f95ed92f63fe267cc0131f46d007bb25b153b392") html nil (dev python unread) "https://hynek.me/index.xml" (:authors ((:name "Hynek Schlawack" :uri "https://hynek.me/" :email "hs@ox.cx")) :author "Hynek Schlawack")) ("hynek.me" . "https://hynek.me/articles/freezing-kindle/") #s(elfeed-entry ("hynek.me" . "https://hynek.me/articles/freezing-kindle/") "Freezing Kindle" "https://hynek.me/articles/freezing-kindle/" 1291723200.0 #s(elfeed-ref "95d59e0edd6a6547e478e0f76c8f6dc9c1df5f51") html nil (dev python unread) "https://hynek.me/index.xml" (:authors ((:name "Hynek Schlawack" :uri "https://hynek.me/" :email "hs@ox.cx")) :author "Hynek Schlawack")) ("hynek.me" . "https://hynek.me/articles/ldap-a-gentle-introduction/") #s(elfeed-entry ("hynek.me" . "https://hynek.me/articles/ldap-a-gentle-introduction/") "LDAP: A Gentle Introduction" "https://hynek.me/articles/ldap-a-gentle-introduction/" 1171368000.0 #s(elfeed-ref "20f58d13899110a8e5199b62367ddad3e00fb4c2") html nil (dev python unread) "https://hynek.me/index.xml" (:authors ((:name "Hynek Schlawack" :uri "https://hynek.me/" :email "hs@ox.cx")) :author "Hynek Schlawack")) ("hynek.me" . "https://hynek.me/articles/mysql-replication/") #s(elfeed-entry ("hynek.me" . "https://hynek.me/articles/mysql-replication/") "MySQL Replication" "https://hynek.me/articles/mysql-replication/" 1171022400.0 #s(elfeed-ref "31424f12bc250e79f91ed88624be6eff9e01d2b3") html nil (dev python unread) "https://hynek.me/index.xml" (:authors ((:name "Hynek Schlawack" :uri "https://hynek.me/" :email "hs@ox.cx")) :author "Hynek Schlawack")) ("hynek.me" . "https://hynek.me/articles/pcap-format-for-logs/") #s(elfeed-entry ("hynek.me" . "https://hynek.me/articles/pcap-format-for-logs/") "PCAP Format for Logs" "https://hynek.me/articles/pcap-format-for-logs/" 1132660800.0 #s(elfeed-ref "4ac246cbc41d7d1c61798b05c51da32873808313") html nil (dev python unread) "https://hynek.me/index.xml" (:authors ((:name "Hynek Schlawack" :uri "https://hynek.me/" :email "hs@ox.cx")) :author "Hynek Schlawack")) ("rhettinger.wordpress.com" . "http://rhettinger.wordpress.com/?p=134") #s(elfeed-entry ("rhettinger.wordpress.com" . "http://rhettinger.wordpress.com/?p=134") "Python’s super() considered super!" "https://rhettinger.wordpress.com/2011/05/26/super-considered-super/" 1306426542.0 #s(elfeed-ref "c5f3b3922d57026dd4c4838a0fe0f527a96ed93f") html nil (dev python unread) "https://rhettinger.wordpress.com/feed/" (:authors ((:name "rhettinger")) :categories ("Algorithms" "Documentation" "Inheritance" "Open Source" "Python"))) ("rhettinger.wordpress.com" . "http://rhettinger.wordpress.com/?p=40") #s(elfeed-entry ("rhettinger.wordpress.com" . "http://rhettinger.wordpress.com/?p=40") "Open Source Challenge: Open Your Source, More" "https://rhettinger.wordpress.com/2011/01/28/open-your-source-more/" 1296220559.0 #s(elfeed-ref "721a6f6a97dfa1e746f8d74ebe649a1235721a4a") html nil (dev python unread) "https://rhettinger.wordpress.com/feed/" (:authors ((:name "rhettinger")) :categories ("Documentation" "Open Source" "Python"))) ("rhettinger.wordpress.com" . "https://rhettinger.wordpress.com/2010/02/06/lost-knowledge/") #s(elfeed-entry ("rhettinger.wordpress.com" . "https://rhettinger.wordpress.com/2010/02/06/lost-knowledge/") "Regaining Lost Knowledge" "https://rhettinger.wordpress.com/2010/02/06/lost-knowledge/" 1265498910.0 #s(elfeed-ref "7ee896b45c8e633aa8cc663c46cfe50041e660de") html nil (dev python unread) "https://rhettinger.wordpress.com/feed/" (:authors ((:name "rhettinger")) :categories ("Algorithms" "Lost Knowledge" "Running Median" "Skiplists" "Wikipedia"))) ("unixism.net" . "https://unixism.net/?p=378") #s(elfeed-entry ("unixism.net" . "https://unixism.net/?p=378") "Sparkler: A KVM-based Virtual Machine Manager" "https://unixism.net/2019/10/sparkler-kvm-based-virtual-machine-manager/?utm_source=rss&utm_medium=rss&utm_campaign=sparkler-kvm-based-virtual-machine-manager" 1571190905.0 #s(elfeed-ref "6f068a3ded9250ef1e7e0b4d524f0d30f544f51e") html nil (general unread) "https://unixism.net/feed" (:authors ((:name "shuveb")) :categories ("Cloud" "Linux" "Network Programming" "Virtualization" "aws firecracker" "firecracker" "kvm" "sparkler" "virtualization"))) ("unixism.net" . "https://unixism.net/?p=354") #s(elfeed-entry ("unixism.net" . "https://unixism.net/?p=354") "How AWS Firecracker works: a deep dive" "https://unixism.net/2019/10/how-aws-firecracker-works-a-deep-dive/?utm_source=rss&utm_medium=rss&utm_campaign=how-aws-firecracker-works-a-deep-dive" 1570546904.0 #s(elfeed-ref "fb153dbca3982e9eb8839b581811651c6152c2e5") html nil (general unread) "https://unixism.net/feed" (:authors ((:name "shuveb")) :categories ("Cloud" "Linux" "Virtualization" "aws firecracker" "firecracker" "kata containers" "Kubernetes" "kvm" "linux" "qemu" "virtualization"))) ("unixism.net" . "https://unixism.net/?p=308") #s(elfeed-entry ("unixism.net" . "https://unixism.net/?p=308") "Linux Pressure Stall Information (PSI) by Example" "https://unixism.net/2019/08/linux-pressure-stall-information-psi-by-example/?utm_source=rss&utm_medium=rss&utm_campaign=linux-pressure-stall-information-psi-by-example" 1567099494.0 #s(elfeed-ref "bd9812c3af2c2674c4fabc23d2455839fd70715c") html nil (general unread) "https://unixism.net/feed" (:authors ((:name "shuveb")) :categories ("Linux" "linux" "load averages" "pressure stall information" "psi"))) ("unixism.net" . "https://unixism.net/?p=295") #s(elfeed-entry ("unixism.net" . "https://unixism.net/?p=295") "A Manager’s Guide to Kubernetes Adoption" "https://unixism.net/2019/08/a-managers-guide-to-kubernetes-adoption/?utm_source=rss&utm_medium=rss&utm_campaign=a-managers-guide-to-kubernetes-adoption" 1565101245.0 #s(elfeed-ref "b3c3dd0a23d7026be833db9c6e356853c91b4db5") html nil (general unread) "https://unixism.net/feed" (:authors ((:name "shuveb")) :categories ("Docker" "Kubernetes" "Tech for Managers"))) ("unixism.net" . "http://unixism.net/?p=183") #s(elfeed-entry ("unixism.net" . "http://unixism.net/?p=183") "Linux Applications Performance: Part VII: epoll Servers" "https://unixism.net/2019/04/linux-applications-performance-part-vii-epoll-servers/?utm_source=rss&utm_medium=rss&utm_campaign=linux-applications-performance-part-vii-epoll-servers" 1556448308.0 #s(elfeed-ref "4742251513734d237494ad978341b0a9aef65011") html nil (general unread) "https://unixism.net/feed" (:authors ((:name "shuveb")) :categories ("Linux" "Network Programming" "Performance"))) ("unixism.net" . "http://unixism.net/?p=166") #s(elfeed-entry ("unixism.net" . "http://unixism.net/?p=166") "Linux Applications Performance: Part IV: Threaded Servers" "https://unixism.net/2019/04/linux-applications-performance-part-iv-threaded-servers/?utm_source=rss&utm_medium=rss&utm_campaign=linux-applications-performance-part-iv-threaded-servers" 1556448286.0 #s(elfeed-ref "59d1f05aaf4f4380c17c1b2e963b360aefb210e7") html nil (general unread) "https://unixism.net/feed" (:authors ((:name "shuveb")) :categories ("Linux" "Network Programming" "Performance"))) ("unixism.net" . "http://unixism.net/?p=169") #s(elfeed-entry ("unixism.net" . "http://unixism.net/?p=169") "Linux Applications Performance: Part V: Pre-threaded Servers" "https://unixism.net/2019/04/linux-applications-performance-part-v-pre-threaded-servers/?utm_source=rss&utm_medium=rss&utm_campaign=linux-applications-performance-part-v-pre-threaded-servers" 1556448255.0 #s(elfeed-ref "1a357bc8aea3457ed6e64d2c2d791f1b26a83be6") html nil (general unread) "https://unixism.net/feed" (:authors ((:name "shuveb")) :categories ("Linux" "Network Programming" "Performance"))) ("unixism.net" . "http://unixism.net/?p=172") #s(elfeed-entry ("unixism.net" . "http://unixism.net/?p=172") "Linux Applications Performance: Part VI: Polling Servers" "https://unixism.net/2019/04/linux-applications-performance-part-vi-polling-servers/?utm_source=rss&utm_medium=rss&utm_campaign=linux-applications-performance-part-vi-polling-servers" 1556448233.0 #s(elfeed-ref "774764653bc23c488409eeef0fa098632a14b201") html nil (general unread) "https://unixism.net/feed" (:authors ((:name "shuveb")) :categories ("Linux" "Network Programming" "Performance"))) ("unixism.net" . "http://unixism.net/?p=158") #s(elfeed-entry ("unixism.net" . "http://unixism.net/?p=158") "Linux Applications Performance: Part III: Preforked Servers" "https://unixism.net/2019/04/linux-applications-performance-part-iii-preforked-servers/?utm_source=rss&utm_medium=rss&utm_campaign=linux-applications-performance-part-iii-preforked-servers" 1556448213.0 #s(elfeed-ref "a5d5ae5992aeae8f3586b8db78efe35df1b49c76") html nil (general unread) "https://unixism.net/feed" (:authors ((:name "shuveb")) :categories ("Linux" "Network Programming" "Performance"))) ("unixism.net" . "http://unixism.net/?p=47") #s(elfeed-entry ("unixism.net" . "http://unixism.net/?p=47") "Linux Applications Performance: Part II: Forking Servers" "https://unixism.net/2019/04/linux-applications-performance-part-ii-forking-servers/?utm_source=rss&utm_medium=rss&utm_campaign=linux-applications-performance-part-ii-forking-servers" 1556448192.0 #s(elfeed-ref "938f4778a75f0ee6c155ad53769507a942b3c049") html nil (general unread) "https://unixism.net/feed" (:authors ((:name "shuveb")) :categories ("Linux" "Network Programming" "Performance"))) ("bg.battletech.com" . "http://bg.battletech.com/?p=8270") #s(elfeed-entry ("bg.battletech.com" . "http://bg.battletech.com/?p=8270") "More BattleTech Legends Novels Now Available for Print-on-Demand" "https://bg.battletech.com/uncategorized/more-battletech-legends-novels-now-available-for-print-on-demand/" 1576851039.0 #s(elfeed-ref "0ecf2e4409249bfc41e70bcd958d7813d468a799") html nil (Gaming TT unread) "https://bg.battletech.com/feed/" (:authors ((:name "Aaron Cahall")) :categories ("Uncategorized"))) ("bg.battletech.com" . "http://bg.battletech.com/?p=8241") #s(elfeed-entry ("bg.battletech.com" . "http://bg.battletech.com/?p=8241") "MechWarrior 5 Tie-In Fiction by Randall N. Bills Now Available as Free Download" "https://bg.battletech.com/news/mechwarrior-5-tie-in-fiction-by-randall-n-bills-now-available-as-free-download/" 1574186448.0 #s(elfeed-ref "7ed9940bf8424fc2efaa0a869ac56d5179419e75") html nil (Gaming TT unread) "https://bg.battletech.com/feed/" (:authors ((:name "Aaron Cahall")) :categories ("News" "News and Announcements" "BattleTech" "fiction" "MechWarrior 5" "new" "Randall N. Bills"))) ("bg.battletech.com" . "http://bg.battletech.com/?p=8235") #s(elfeed-entry ("bg.battletech.com" . "http://bg.battletech.com/?p=8235") "Clan Invasion Kickstarter Pledge Manager is Live!" "https://bg.battletech.com/news/clan-invasion-kickstarter-pledge-manager-is-live/" 1573763842.0 #s(elfeed-ref "011e66b1ceca8a1c8ae0fec7d4103ce33639a917") html nil (Gaming TT unread) "https://bg.battletech.com/feed/" (:authors ((:name "Aaron Cahall")) :categories ("News" "News and Announcements" "BattleTech" "Clan Invasion" "Kickstarter" "Pledge Manager" "update"))) ("bg.battletech.com" . "http://bg.battletech.com/?p=8228") #s(elfeed-entry ("bg.battletech.com" . "http://bg.battletech.com/?p=8228") "Now Available – Worldwide Event 2019: Requiem for a Blue Star" "https://bg.battletech.com/uncategorized/now-available-worldwide-event-2019-requiem-for-a-blue-star/" 1572535220.0 #s(elfeed-ref "64d2f8d5fe7555b4ae258d55ec3a4934b1a5d92c") html nil (Gaming TT unread) "https://bg.battletech.com/feed/" (:authors ((:name "Aaron Cahall")) :categories ("Uncategorized"))) ("bg.battletech.com" . "http://bg.battletech.com/?p=8199") #s(elfeed-entry ("bg.battletech.com" . "http://bg.battletech.com/?p=8199") "Catalyst Game Labs Announces Executive Editor, New BattleTech and Leviathans Line Developers" "https://bg.battletech.com/uncategorized/catalyst-game-labs-announces-executive-editor-new-battletech-and-leviathans-line-developers/" 1568393606.0 #s(elfeed-ref "383b9129a4658ec15da94bde28557dcda671ca71") html nil (Gaming TT unread) "https://bg.battletech.com/feed/" (:authors ((:name "Aaron Cahall")) :categories ("Uncategorized" "BattleTech" "fiction" "John Helfers" "Line Developer" "Ray Arrastia"))) ("bg.battletech.com" . "http://bg.battletech.com/?p=8182") #s(elfeed-entry ("bg.battletech.com" . "http://bg.battletech.com/?p=8182") "A Bonfire of Worlds and BattleCorps Vol. 6 Now in Print!" "https://bg.battletech.com/uncategorized/a-bonfire-of-worlds-and-battlecorps-vol-6-now-in-print/" 1566911325.0 #s(elfeed-ref "672cabc054e3aa4c8abc65c8a0e39eb10f8a88e6") html nil (Gaming TT unread) "https://bg.battletech.com/feed/" (:authors ((:name "Aaron Cahall")) :categories ("Uncategorized"))) ("bg.battletech.com" . "http://bg.battletech.com/?p=8178") #s(elfeed-entry ("bg.battletech.com" . "http://bg.battletech.com/?p=8178") "Now Available – Chaos Campaign: Succession Wars in Print-on-Demand" "https://bg.battletech.com/uncategorized/now-available-chaos-campaign-succession-wars-in-print-on-demand/" 1565787875.0 #s(elfeed-ref "b331dd9ecd2849c6fedd08bb9fc63a551bdf260b") html nil (Gaming TT unread) "https://bg.battletech.com/feed/" (:authors ((:name "Aaron Cahall")) :categories ("Uncategorized"))) ("bg.battletech.com" . "http://bg.battletech.com/?p=8174") #s(elfeed-entry ("bg.battletech.com" . "http://bg.battletech.com/?p=8174") "Now Available – Technical Readout: Clan Invasion!" "https://bg.battletech.com/uncategorized/now-available-technical-readout-clan-invasion/" 1565284272.0 #s(elfeed-ref "e8969a365542cf1bf2ad9b58fd35cb7d3e022cd2") html nil (Gaming TT unread) "https://bg.battletech.com/feed/" (:authors ((:name "Aaron Cahall")) :categories ("Uncategorized"))) ("bg.battletech.com" . "http://bg.battletech.com/?p=8164") #s(elfeed-entry ("bg.battletech.com" . "http://bg.battletech.com/?p=8164") "BattleTech: Clan Invasion is LIVE on Kickstarter!" "https://bg.battletech.com/news/battletech-clan-invasion-is-live-on-kickstarter/" 1563382797.0 #s(elfeed-ref "c6d4710e11e5e5eda856997fcad06f9651e12a66") html nil (Gaming TT unread) "https://bg.battletech.com/feed/" (:authors ((:name "Aaron Cahall")) :categories ("News" "News and Announcements" "campaign" "Clan Invasion" "Kickstarter" "link"))) ("bg.battletech.com" . "http://bg.battletech.com/?p=8154") #s(elfeed-entry ("bg.battletech.com" . "http://bg.battletech.com/?p=8154") "Sneak Peek – BattleTech: Clan Invasion Boxed Set Contents" "https://bg.battletech.com/news/sneak-peek-battletech-clan-invasion-boxed-set-contents/" 1562808787.0 #s(elfeed-ref "82222eaed961a21a88be9ce6b0aef1f998c8962f") html nil (Gaming TT unread) "https://bg.battletech.com/feed/" (:authors ((:name "Aaron Cahall")) :categories ("News" "News and Announcements" "BattleTech" "box set" "Clan Invasion" "contents" "Kickstarter"))) ("habitatchronicles.com" . "http://habitatchronicles.com/?p=511") #s(elfeed-entry ("habitatchronicles.com" . "http://habitatchronicles.com/?p=511") "The Unum Pattern" "http://habitatchronicles.com/2019/08/the-unum-pattern/" 1567060920.0 #s(elfeed-ref "163a0681d9ebf46fca532e0831e84f86dc569af3") html nil (dev se unread) "http://habitatchronicles.com/feed/" (:authors ((:name "Chip")) :categories ("History" "Technology" "Theory"))) ("habitatchronicles.com" . "http://habitatchronicles.com/?p=505") #s(elfeed-entry ("habitatchronicles.com" . "http://habitatchronicles.com/?p=505") "Another Thing Found While Packing to Move" "http://habitatchronicles.com/2019/05/another-thing-found-while-packing-to-move/" 1556764614.0 #s(elfeed-ref "bf87cd8c3b7a703ea580ea87cb2ae938afd6c3bf") html nil (dev se unread) "http://habitatchronicles.com/feed/" (:authors ((:name "Chip")) :categories ("History"))) ("habitatchronicles.com" . "http://habitatchronicles.com/?p=501") #s(elfeed-entry ("habitatchronicles.com" . "http://habitatchronicles.com/?p=501") "A Lost Treasure of Xanadu" "http://habitatchronicles.com/2019/03/a-lost-treasure-of-xanadu/" 1552204630.0 #s(elfeed-ref "0b3e8d9e394651914f3d6c2ac4993507c40fa7f9") html nil (dev se unread) "http://habitatchronicles.com/feed/" (:authors ((:name "Chip")) :categories ("History" "Technology"))) ("habitatchronicles.com" . "http://habitatchronicles.com/?p=493") #s(elfeed-entry ("habitatchronicles.com" . "http://habitatchronicles.com/?p=493") "Pool Abuse" "http://habitatchronicles.com/2018/01/pool-abuse/" 1515461091.0 #s(elfeed-ref "85bd30be8258e53acb1608ebf5386ef6fb9d91fb") html nil (dev se unread) "http://habitatchronicles.com/feed/" (:authors ((:name "Chip")) :categories ("Technology"))) ("habitatchronicles.com" . "http://habitatchronicles.com/?p=486") #s(elfeed-entry ("habitatchronicles.com" . "http://habitatchronicles.com/?p=486") "A Slightly Skeptical Perspective on REST" "http://habitatchronicles.com/2017/11/a-slightly-skeptical-perspective-on-rest/" 1511573402.0 #s(elfeed-ref "7093b02475cd437caa70eee71fcbb6d758238aad") html nil (dev se unread) "http://habitatchronicles.com/feed/" (:authors ((:name "Chip")) :categories ("Technology"))) ("habitatchronicles.com" . "http://habitatchronicles.com/?p=475") #s(elfeed-entry ("habitatchronicles.com" . "http://habitatchronicles.com/?p=475") "What Are Capabilities?" "http://habitatchronicles.com/2017/05/what-are-capabilities/" 1494187873.0 #s(elfeed-ref "cb8a81b43f9e054c7d11dbdacd49238817fea534") html nil (dev se unread) "http://habitatchronicles.com/feed/" (:authors ((:name "Chip")) :categories ("Technology" "Theory"))) ("habitatchronicles.com" . "http://habitatchronicles.com/?p=467") #s(elfeed-entry ("habitatchronicles.com" . "http://habitatchronicles.com/?p=467") "Open Source Lucasfilm’s Habitat Restoration Underway" "http://habitatchronicles.com/2017/02/reboot/" 1486485958.0 #s(elfeed-ref "e8bfc58ab24b24957fe3e7beda686c8b9629d7fa") html nil (dev se unread) "http://habitatchronicles.com/feed/" (:authors ((:name "Randy")) :categories ("Avatar" "Business" "General" "History" "Lessons Learned" "News" "Technology"))) ("habitatchronicles.com" . "http://habitatchronicles.com/?p=452") #s(elfeed-entry ("habitatchronicles.com" . "http://habitatchronicles.com/?p=452") "Software Crisis: The Next Generation" "http://habitatchronicles.com/2016/10/software-crisis-the-next-generation/" 1476435651.0 #s(elfeed-ref "f2f5d1ede6c6fa6f64cc64635d0ef42f5557be98") html nil (dev se unread) "http://habitatchronicles.com/feed/" (:authors ((:name "Chip")) :categories ("Technology"))) ("habitatchronicles.com" . "http://habitatchronicles.com/?p=446") #s(elfeed-entry ("habitatchronicles.com" . "http://habitatchronicles.com/?p=446") "The Bureaucratic Failure Mode Pattern" "http://habitatchronicles.com/2014/10/the-bureaucratic-failure-mode-pattern/" 1414442222.0 #s(elfeed-ref "96ec85c008845bf8c9bf2a0a8f0ae63be04a0ef5") html nil (dev se unread) "http://habitatchronicles.com/feed/" (:authors ((:name "Chip")) :categories ("Lessons Learned"))) ("habitatchronicles.com" . "http://habitatchronicles.com/?p=437") #s(elfeed-entry ("habitatchronicles.com" . "http://habitatchronicles.com/?p=437") "Map of The Habitat World" "http://habitatchronicles.com/2014/10/map-of-the-habitat-world/" 1413779345.0 #s(elfeed-ref "92e70ece14719a5bd3883f84bb636a2c957f1c0a") html nil (dev se unread) "http://habitatchronicles.com/feed/" (:authors ((:name "Chip")) :categories ("History"))) ("blog.acolyer.org" . "http://blog.acolyer.org/?p=9489") #s(elfeed-entry ("blog.acolyer.org" . "http://blog.acolyer.org/?p=9489") "STELLA: report from the SNAFU-catchers workshop on coping with complexity" "https://blog.acolyer.org/2020/01/20/stella-coping-with-complexity-2/" 1579500000.0 #s(elfeed-ref "94a45e14c8047290e7b3cb1f644aea5281d78007") html nil (general unread) "https://blog.acolyer.org/feed/" (:authors ((:name "adriancolyer")) :categories ("Uncategorized" "Operations"))) ("blog.acolyer.org" . "http://blog.acolyer.org/?p=9480") #s(elfeed-entry ("blog.acolyer.org" . "http://blog.acolyer.org/?p=9480") "Synthesizing data structure transformations from input-output examples" "https://blog.acolyer.org/2020/01/17/synthesizing-data-structure-transformations/" 1579240800.0 #s(elfeed-ref "cb10a6c0e5b047b326ea6516166fab9fd3f3755e") html nil (general unread) "https://blog.acolyer.org/feed/" (:authors ((:name "adriancolyer")) :categories ("Uncategorized" "Software Engineering"))) ("blog.acolyer.org" . "http://blog.acolyer.org/?p=9479") #s(elfeed-entry ("blog.acolyer.org" . "http://blog.acolyer.org/?p=9479") "Programmatically interpretable reinforcement learning" "https://blog.acolyer.org/2020/01/15/programmatically-interpretable-reinforcement-learning/" 1579068000.0 #s(elfeed-ref "a2bc250fbf42351afbe68e206aad152f3794e0ff") html nil (general unread) "https://blog.acolyer.org/feed/" (:authors ((:name "adriancolyer")) :categories ("Uncategorized" "Machine Learning"))) ("blog.acolyer.org" . "http://blog.acolyer.org/?p=9478") #s(elfeed-entry ("blog.acolyer.org" . "http://blog.acolyer.org/?p=9478") "Challenges of real-world reinforcement learning" "https://blog.acolyer.org/2020/01/13/challenges-of-real-world-rl/" 1578895200.0 #s(elfeed-ref "8bd8b8d3e0178deb892413a0bbdf9ba60200dd65") html nil (general unread) "https://blog.acolyer.org/feed/" (:authors ((:name "adriancolyer")) :categories ("Uncategorized" "Machine Learning"))) ("blog.acolyer.org" . "http://blog.acolyer.org/?p=9462") #s(elfeed-entry ("blog.acolyer.org" . "http://blog.acolyer.org/?p=9462") "Ten challenges for making automation a ‘team player’ in joint human-agent activity" "https://blog.acolyer.org/2020/01/10/ten-challenges-for-automation/" 1578636000.0 #s(elfeed-ref "bd812f543d29e1f7d73dfa5602b35752ab52eadf") html nil (general unread) "https://blog.acolyer.org/feed/" (:authors ((:name "adriancolyer")) :categories ("Uncategorized"))) ("blog.acolyer.org" . "http://blog.acolyer.org/?p=9460") #s(elfeed-entry ("blog.acolyer.org" . "http://blog.acolyer.org/?p=9460") "Ironies of automation" "https://blog.acolyer.org/2020/01/08/ironies-of-automation/" 1578463200.0 #s(elfeed-ref "3cc34e67d78f847fe5d14b20ad0406ea5ca804bc") html nil (general unread) "https://blog.acolyer.org/feed/" (:authors ((:name "adriancolyer")) :categories ("Uncategorized"))) ("blog.acolyer.org" . "http://blog.acolyer.org/?p=9458") #s(elfeed-entry ("blog.acolyer.org" . "http://blog.acolyer.org/?p=9458") "The Year Ahead" "https://blog.acolyer.org/2020/01/06/2020-the-year-ahead/" 1578290400.0 #s(elfeed-ref "1507447d0b6c26483915f08ee3c4c6941ec12001") html nil (general unread) "https://blog.acolyer.org/feed/" (:authors ((:name "adriancolyer")) :categories ("Uncategorized"))) ("blog.acolyer.org" . "http://blog.acolyer.org/?p=9427") #s(elfeed-entry ("blog.acolyer.org" . "http://blog.acolyer.org/?p=9427") "End of term" "https://blog.acolyer.org/2019/12/16/end-of-term-7/" 1576476000.0 #s(elfeed-ref "f1901c686178ee233592d27abcb7634ff0f9d482") html nil (general unread) "https://blog.acolyer.org/feed/" (:authors ((:name "adriancolyer")) :categories ("Uncategorized"))) ("blog.acolyer.org" . "http://blog.acolyer.org/?p=9423") #s(elfeed-entry ("blog.acolyer.org" . "http://blog.acolyer.org/?p=9423") "How do committees invent?" "https://blog.acolyer.org/2019/12/13/how-do-committees-invent/" 1576216800.0 #s(elfeed-ref "ae96ad615ec9658a8259a1bb002b243e0cc81e68") html nil (general unread) "https://blog.acolyer.org/feed/" (:authors ((:name "adriancolyer")) :categories ("Uncategorized" "Software Engineering"))) ("blog.acolyer.org" . "http://blog.acolyer.org/?p=9417") #s(elfeed-entry ("blog.acolyer.org" . "http://blog.acolyer.org/?p=9417") "A tale of two abstractions: the case for object space" "https://blog.acolyer.org/2019/12/11/a-tale-of-two-abstractions/" 1576044000.0 #s(elfeed-ref "3d668cef68e1ebf4ab03da4e78f75f4cdb23c616") html nil (general unread) "https://blog.acolyer.org/feed/" (:authors ((:name "adriancolyer")) :categories ("Uncategorized" "Operating Systems"))) ("vorpus.org" . "tag:vorpus.org,2019-05-04:/blog/why-im-not-collaborating-with-kenneth-reitz/") #s(elfeed-entry ("vorpus.org" . "tag:vorpus.org,2019-05-04:/blog/why-im-not-collaborating-with-kenneth-reitz/") "Why I'm not collaborating with Kenneth Reitz" "https://vorpus.org/blog/why-im-not-collaborating-with-kenneth-reitz/" 1556964000.0 #s(elfeed-ref "c171a169694f5a240141cdf03f31d725296191fb") html nil (dev python unread) "https://vorpus.org/blog/feeds/atom.xml" (:authors ((:name "Nathaniel J. Smith")) :author "Nathaniel J. Smith")) ("vorpus.org" . "tag:vorpus.org,2018-09-10:/blog/beautiful-tracebacks-in-trio-v070/") #s(elfeed-entry ("vorpus.org" . "tag:vorpus.org,2018-09-10:/blog/beautiful-tracebacks-in-trio-v070/") "Beautiful tracebacks in Trio v0.7.0" "https://vorpus.org/blog/beautiful-tracebacks-in-trio-v070/" 1536580800.0 #s(elfeed-ref "da122159073946c718a0322ad5099e076270da38") html nil (dev python unread) "https://vorpus.org/blog/feeds/atom.xml" (:authors ((:name "Nathaniel J. Smith")) :author "Nathaniel J. Smith")) ("vorpus.org" . "tag:vorpus.org,2018-05-25:/blog/the-unreasonable-effectiveness-of-investment-in-open-source-infrastructure/") #s(elfeed-entry ("vorpus.org" . "tag:vorpus.org,2018-05-25:/blog/the-unreasonable-effectiveness-of-investment-in-open-source-infrastructure/") "The unreasonable effectiveness of investment in open-source infrastructure" "https://vorpus.org/blog/the-unreasonable-effectiveness-of-investment-in-open-source-infrastructure/" 1527213600.0 #s(elfeed-ref "8e29eb8ba8dcc9411c618c04212b7c69492b496a") html nil (dev python unread) "https://vorpus.org/blog/feeds/atom.xml" (:authors ((:name "Nathaniel J. Smith")) :author "Nathaniel J. Smith")) ("vorpus.org" . "tag:vorpus.org,2018-05-25:/blog/a-farewell-to-the-berkeley-institute-for-data-science/") #s(elfeed-entry ("vorpus.org" . "tag:vorpus.org,2018-05-25:/blog/a-farewell-to-the-berkeley-institute-for-data-science/") "A farewell to the Berkeley Institute for Data Science" "https://vorpus.org/blog/a-farewell-to-the-berkeley-institute-for-data-science/" 1527210000.0 #s(elfeed-ref "5196281a5c3a2d4343216a6eda3bafe55236a75c") html nil (dev python unread) "https://vorpus.org/blog/feeds/atom.xml" (:authors ((:name "Nathaniel J. Smith")) :author "Nathaniel J. Smith")) ("vorpus.org" . "tag:vorpus.org,2018-05-11:/blog/companion-post-for-my-pycon-2018-talk-on-async-concurrency-using-trio/") #s(elfeed-entry ("vorpus.org" . "tag:vorpus.org,2018-05-11:/blog/companion-post-for-my-pycon-2018-talk-on-async-concurrency-using-trio/") "Companion post for my PyCon 2018 talk on async concurrency using Trio" "https://vorpus.org/blog/companion-post-for-my-pycon-2018-talk-on-async-concurrency-using-trio/" 1525996800.0 #s(elfeed-ref "6291d391ec81a324b9d7b64b71d2864d6e8d9af3") html nil (dev python unread) "https://vorpus.org/blog/feeds/atom.xml" (:authors ((:name "Nathaniel J. Smith")) :author "Nathaniel J. Smith")) ("vorpus.org" . "tag:vorpus.org,2018-04-25:/blog/notes-on-structured-concurrency-or-go-statement-considered-harmful/") #s(elfeed-entry ("vorpus.org" . "tag:vorpus.org,2018-04-25:/blog/notes-on-structured-concurrency-or-go-statement-considered-harmful/") "Notes on structured concurrency, or: Go statement considered harmful" "https://vorpus.org/blog/notes-on-structured-concurrency-or-go-statement-considered-harmful/" 1524614400.0 #s(elfeed-ref "10f457285e9e5cea31ff9efe7088c65926f253fc") html nil (dev python unread) "https://vorpus.org/blog/feeds/atom.xml" (:authors ((:name "Nathaniel J. Smith")) :author "Nathaniel J. Smith")) ("vorpus.org" . "tag:vorpus.org,2018-01-11:/blog/timeouts-and-cancellation-for-humans/") #s(elfeed-entry ("vorpus.org" . "tag:vorpus.org,2018-01-11:/blog/timeouts-and-cancellation-for-humans/") "Timeouts and cancellation for humans" "https://vorpus.org/blog/timeouts-and-cancellation-for-humans/" 1515628800.0 #s(elfeed-ref "08905e233d581dfa03a60996426c7aa8f60171c8") html nil (dev python unread) "https://vorpus.org/blog/feeds/atom.xml" (:authors ((:name "Nathaniel J. Smith")) :author "Nathaniel J. Smith")) ("vorpus.org" . "tag:vorpus.org,2017-04-19:/blog/control-c-handling-in-python-and-trio/") #s(elfeed-entry ("vorpus.org" . "tag:vorpus.org,2017-04-19:/blog/control-c-handling-in-python-and-trio/") "Control-C handling in Python and Trio" "https://vorpus.org/blog/control-c-handling-in-python-and-trio/" 1492560000.0 #s(elfeed-ref "6e550f204fa097a7a3f55e41645abff8e79948b9") html nil (dev python unread) "https://vorpus.org/blog/feeds/atom.xml" (:authors ((:name "Nathaniel J. Smith")) :author "Nathaniel J. Smith")) ("vorpus.org" . "tag:vorpus.org,2017-03-10:/blog/announcing-trio/") #s(elfeed-entry ("vorpus.org" . "tag:vorpus.org,2017-03-10:/blog/announcing-trio/") "Announcing Trio" "https://vorpus.org/blog/announcing-trio/" 1489104000.0 #s(elfeed-ref "4e65d808d1161301cf69d22aa84557983d9ba0b6") html nil (dev python unread) "https://vorpus.org/blog/feeds/atom.xml" (:authors ((:name "Nathaniel J. Smith")) :author "Nathaniel J. Smith")) ("vorpus.org" . "tag:vorpus.org,2016-12-05:/blog/why-does-calloc-exist/") #s(elfeed-entry ("vorpus.org" . "tag:vorpus.org,2016-12-05:/blog/why-does-calloc-exist/") "Why does calloc exist?" "https://vorpus.org/blog/why-does-calloc-exist/" 1480896000.0 #s(elfeed-ref "ce0fb4255b2aa9b9617c8d7084a59a4c428fb99c") html nil (dev python unread) "https://vorpus.org/blog/feeds/atom.xml" (:authors ((:name "Nathaniel J. Smith")) :author "Nathaniel J. Smith")) ("vorpus.org" . "tag:vorpus.org,2016-11-05:/blog/some-thoughts-on-asynchronous-api-design-in-a-post-asyncawait-world/") #s(elfeed-entry ("vorpus.org" . "tag:vorpus.org,2016-11-05:/blog/some-thoughts-on-asynchronous-api-design-in-a-post-asyncawait-world/") "Some thoughts on asynchronous API design in a post-async/await world" "https://vorpus.org/blog/some-thoughts-on-asynchronous-api-design-in-a-post-asyncawait-world/" 1478304000.0 #s(elfeed-ref "33a91bb2358bf95d480c5dada94656c9346f4ba3") html nil (dev python unread) "https://vorpus.org/blog/feeds/atom.xml" (:authors ((:name "Nathaniel J. Smith")) :author "Nathaniel J. Smith")) ("vorpus.org" . "tag:vorpus.org,2016-10-24:/blog/emerging-from-the-underworld/") #s(elfeed-entry ("vorpus.org" . "tag:vorpus.org,2016-10-24:/blog/emerging-from-the-underworld/") "Emerging from the underworld" "https://vorpus.org/blog/emerging-from-the-underworld/" 1477267200.0 #s(elfeed-ref "f952988618616d4bbd003c2d4edebbd4d28d24b6") html nil (dev python unread) "https://vorpus.org/blog/feeds/atom.xml" (:authors ((:name "Nathaniel J. Smith")) :author "Nathaniel J. Smith")) ("vorpus.org" . "tag:vorpus.org,2016-10-22:/blog/stochastic-descent/") #s(elfeed-entry ("vorpus.org" . "tag:vorpus.org,2016-10-22:/blog/stochastic-descent/") "Stochastic descent" "https://vorpus.org/blog/stochastic-descent/" 1477148160.0 #s(elfeed-ref "13d3e052c2f4a59858ec8fadaeb09ee03a1e52e1") html nil (dev python unread) "https://vorpus.org/blog/feeds/atom.xml" (:authors ((:name "Nathaniel J. Smith")) :author "Nathaniel J. Smith")) ("blogs.msdn.microsoft.com" . "http://devblogs.microsoft.com/oldnewthing/?p=103338") #s(elfeed-entry ("blogs.msdn.microsoft.com" . "http://devblogs.microsoft.com/oldnewthing/?p=103338") "How can I turn a structured exception into a C++ exception without having to use /EHa, if I can constrain exactly where the structured exception is coming from?" "https://devblogs.microsoft.com/oldnewthing/20200117-00/?p=103338" 1579273200.0 #s(elfeed-ref "699f1f67110b0b4692cb7943c3f91fb71b21a1bd") html nil (dev se unread) "https://blogs.msdn.microsoft.com/oldnewthing/feed" (:authors ((:name "Raymond Chen")) :categories ("Old New Thing" "Code"))) ("blogs.msdn.microsoft.com" . "http://devblogs.microsoft.com/oldnewthing/?p=103333") #s(elfeed-entry ("blogs.msdn.microsoft.com" . "http://devblogs.microsoft.com/oldnewthing/?p=103333") "How can I handle both structured exceptions and C++ exceptions potentially coming from the same source?" "https://devblogs.microsoft.com/oldnewthing/20200116-00/?p=103333" 1579186800.0 #s(elfeed-ref "68a5b4f772ff290991b0c4d38e96ab56cf53f5b0") html nil (dev se unread) "https://blogs.msdn.microsoft.com/oldnewthing/feed" (:authors ((:name "Raymond Chen")) :categories ("Old New Thing" "Code"))) ("blogs.msdn.microsoft.com" . "http://devblogs.microsoft.com/oldnewthing/?p=103329") #s(elfeed-entry ("blogs.msdn.microsoft.com" . "http://devblogs.microsoft.com/oldnewthing/?p=103329") "Why can’t I use SHSetKnownFolderPath to change the location of FOLDERID_LocalAppData?" "https://devblogs.microsoft.com/oldnewthing/20200115-00/?p=103329" 1579100400.0 #s(elfeed-ref "a6a2ec44f30f2404f9b49fcb6f2a77956cffa752") html nil (dev se unread) "https://blogs.msdn.microsoft.com/oldnewthing/feed" (:authors ((:name "Raymond Chen")) :categories ("Old New Thing" "Code"))) ("blogs.msdn.microsoft.com" . "http://devblogs.microsoft.com/oldnewthing/?p=103327") #s(elfeed-entry ("blogs.msdn.microsoft.com" . "http://devblogs.microsoft.com/oldnewthing/?p=103327") "The historical significance of the Burgermaster drive-in restaurant" "https://devblogs.microsoft.com/oldnewthing/20200114-00/?p=103327" 1579014000.0 #s(elfeed-ref "f90e432efb71e2d36b32d69a71e191bbbf7818e6") html nil (dev se unread) "https://blogs.msdn.microsoft.com/oldnewthing/feed" (:authors ((:name "Raymond Chen")) :categories ("Old New Thing" "History"))) ("blogs.msdn.microsoft.com" . "http://devblogs.microsoft.com/oldnewthing/?p=103322") #s(elfeed-entry ("blogs.msdn.microsoft.com" . "http://devblogs.microsoft.com/oldnewthing/?p=103322") "It’s not a security vulnerability that users can access files that they have access to, even if the file is a little hard to find" "https://devblogs.microsoft.com/oldnewthing/20200113-00/?p=103322" 1578927600.0 #s(elfeed-ref "ebaec91f47726fe424ca5c1f8e2c4720c3a93c0a") html nil (dev se unread) "https://blogs.msdn.microsoft.com/oldnewthing/feed" (:authors ((:name "Raymond Chen")) :categories ("Old New Thing" "Other"))) ("blogs.msdn.microsoft.com" . "http://devblogs.microsoft.com/oldnewthing/?p=103316") #s(elfeed-entry ("blogs.msdn.microsoft.com" . "http://devblogs.microsoft.com/oldnewthing/?p=103316") "Over-documenting TTM_RELAYEVENT and why it results in a one-second periodic timer running as long as the tooltip is visible" "https://devblogs.microsoft.com/oldnewthing/20200110-00/?p=103316" 1578668400.0 #s(elfeed-ref "2ec7b58c7f8975bea0ca9546154f7782d0865adb") html nil (dev se unread) "https://blogs.msdn.microsoft.com/oldnewthing/feed" (:authors ((:name "Raymond Chen")) :categories ("Old New Thing" "Code"))) ("blogs.msdn.microsoft.com" . "http://devblogs.microsoft.com/oldnewthing/?p=103309") #s(elfeed-entry ("blogs.msdn.microsoft.com" . "http://devblogs.microsoft.com/oldnewthing/?p=103309") "Tree-walking algorithms: Incrementally performing an inorder walk of a binary tree" "https://devblogs.microsoft.com/oldnewthing/20200109-00/?p=103309" 1578582000.0 #s(elfeed-ref "a3d920a5652710b66cbb3a7e89e38ae1b78774ad") html nil (dev se unread) "https://blogs.msdn.microsoft.com/oldnewthing/feed" (:authors ((:name "Raymond Chen")) :categories ("Old New Thing" "Code"))) ("blogs.msdn.microsoft.com" . "http://devblogs.microsoft.com/oldnewthing/?p=103307") #s(elfeed-entry ("blogs.msdn.microsoft.com" . "http://devblogs.microsoft.com/oldnewthing/?p=103307") "Tree-walking algorithms: Incrementally performing a postorder walk of an N-ary tree" "https://devblogs.microsoft.com/oldnewthing/20200108-00/?p=103307" 1578495600.0 #s(elfeed-ref "a2f864695180c666895467122c23ab21c2ba2358") html nil (dev se unread) "https://blogs.msdn.microsoft.com/oldnewthing/feed" (:authors ((:name "Raymond Chen")) :categories ("Old New Thing" "Code"))) ("blogs.msdn.microsoft.com" . "http://devblogs.microsoft.com/oldnewthing/?p=103304") #s(elfeed-entry ("blogs.msdn.microsoft.com" . "http://devblogs.microsoft.com/oldnewthing/?p=103304") "Tree-walking algorithms: Incrementally performing a preorder walk of an N-ary tree" "https://devblogs.microsoft.com/oldnewthing/20200107-00/?p=103304" 1578409200.0 #s(elfeed-ref "2c15326fe1c4bfcfc0bd78737b0130c3db4b1fea") html nil (dev se unread) "https://blogs.msdn.microsoft.com/oldnewthing/feed" (:authors ((:name "Raymond Chen")) :categories ("Old New Thing" "Code"))) ("blogs.msdn.microsoft.com" . "http://devblogs.microsoft.com/oldnewthing/?p=103300") #s(elfeed-entry ("blogs.msdn.microsoft.com" . "http://devblogs.microsoft.com/oldnewthing/?p=103300") "Tree-walking algorithms: Incrementally enumerating leaf nodes of an N-ary tree" "https://devblogs.microsoft.com/oldnewthing/20200106-00/?p=103300" 1578322800.0 #s(elfeed-ref "07b915334afc8a762b1b7d5e18541bc8726da718") html nil (dev se unread) "https://blogs.msdn.microsoft.com/oldnewthing/feed" (:authors ((:name "Raymond Chen")) :categories ("Old New Thing" "Code"))) ("mwl.io" . "https://mwl.io/?p=5327") #s(elfeed-entry ("mwl.io" . "https://mwl.io/?p=5327") "A different sort of interview, on tabletop RPGs" "https://mwl.io/archives/5327" 1579530490.0 #s(elfeed-ref "2fc07d63c4ac4cb9f79337a1b89677eb7b47c9c0") html nil (bsd os unread) "https://mwl.io/feed" (:authors ((:name "Michael Lucas")) :categories ("Chatter" "fiction"))) ("mwl.io" . "https://mwl.io/?p=5274") #s(elfeed-entry ("mwl.io" . "https://mwl.io/?p=5274") "Me, talking SNMP at Semibug: 21 January 2020" "https://mwl.io/archives/5274" 1579097527.0 #s(elfeed-ref "da413a3d4c91c089b38c43f9c80c5303580b4a90") html nil (bsd os unread) "https://mwl.io/feed" (:authors ((:name "Michael Lucas")) :categories ("Chatter"))) ("mwl.io" . "https://mwl.io/?p=5258") #s(elfeed-entry ("mwl.io" . "https://mwl.io/?p=5258") "“SNMP Mastery” cover reveal" "https://mwl.io/archives/5258" 1579035345.0 #s(elfeed-ref "e5952d1c128292df01b508609d158a2c0ef96552") html nil (bsd os unread) "https://mwl.io/feed" (:authors ((:name "Michael Lucas")) :categories ("Nonfiction Books"))) ("mwl.io" . "https://mwl.io/?p=5164") #s(elfeed-entry ("mwl.io" . "https://mwl.io/?p=5164") "2019 Income Sources" "https://mwl.io/archives/5164" 1578330140.0 #s(elfeed-ref "3c796867af88b5abb97164fedc5f4c222ded8ddd") html nil (bsd os unread) "https://mwl.io/feed" (:authors ((:name "Michael Lucas")) :categories ("business"))) ("mwl.io" . "https://mwl.io/?p=4928") #s(elfeed-entry ("mwl.io" . "https://mwl.io/?p=4928") "“SNMP Mastery” tech reviewers wanted" "https://mwl.io/archives/4928" 1576183262.0 #s(elfeed-ref "ae6297ff8496f5f224616fa5df9b33f5a619b529") html nil (bsd os unread) "https://mwl.io/feed" (:authors ((:name "Michael Lucas")) :categories ("Nonfiction Books"))) ("mwl.io" . "https://mwl.io/?p=4772") #s(elfeed-entry ("mwl.io" . "https://mwl.io/?p=4772") "Proof I Am a Monster" "https://mwl.io/archives/4772" 1572447852.0 #s(elfeed-ref "ee0f6713476505817a4664e283a7a510b57f9012") html nil (bsd os unread) "https://mwl.io/feed" (:authors ((:name "Michael Lucas")) :categories ("Chatter"))) ("mwl.io" . "https://mwl.io/?p=4759") #s(elfeed-entry ("mwl.io" . "https://mwl.io/?p=4759") "The Six Prequels to “FreeBSD Mastery: Jails”" "https://mwl.io/archives/4759" 1572275199.0 #s(elfeed-ref "7a692c6bb053cc76c611629bc2ba5a1234d7d03c") html nil (bsd os unread) "https://mwl.io/feed" (:authors ((:name "Michael Lucas")) :categories ("bsd" "Nonfiction Books"))) ("mwl.io" . "https://mwl.io/?p=4557") #s(elfeed-entry ("mwl.io" . "https://mwl.io/?p=4557") "Full-Time Writing: Five Years In" "https://mwl.io/archives/4557" 1570544181.0 #s(elfeed-ref "14fdd59f4b9b474c3f01565beb1683b01cdf7b1a") html nil (bsd os unread) "https://mwl.io/feed" (:authors ((:name "Michael Lucas")) :categories ("writing"))) ("mwl.io" . "https://mwl.io/?p=4671") #s(elfeed-entry ("mwl.io" . "https://mwl.io/?p=4671") "Hear Me Read Without Leaving Your Chair" "https://mwl.io/archives/4671" 1570312071.0 #s(elfeed-ref "f300fa99afa3026f1bca0beabae2636a094b9a04") html nil (bsd os unread) "https://mwl.io/feed" (:authors ((:name "Michael Lucas")) :categories ("fiction"))) ("mwl.io" . "https://mwl.io/?p=4569") #s(elfeed-entry ("mwl.io" . "https://mwl.io/?p=4569") "“SNMP Mastery” sponsorships now live" "https://mwl.io/archives/4569" 1568148947.0 #s(elfeed-ref "5863a84fb016442ba09b2a00e84297f78d653554") html nil (bsd os unread) "https://mwl.io/feed" (:authors ((:name "Michael Lucas")) :categories ("Nonfiction Books"))) ("idea.popcount.org" . "https://idea.popcount.org/2019-12-06-addressing") #s(elfeed-entry ("idea.popcount.org" . "https://idea.popcount.org/2019-12-06-addressing") "Addressing" "https://idea.popcount.org/2019-12-06-addressing" 1575586800.0 #s(elfeed-ref "da39a3ee5e6b4b0d3255bfef95601890afd80709") html nil (general unread) "https://idea.popcount.org/rss.xml" nil) ("idea.popcount.org" . "https://idea.popcount.org/2019-11-06-creating-sockets") #s(elfeed-entry ("idea.popcount.org" . "https://idea.popcount.org/2019-11-06-creating-sockets") "Creating sockets" "https://idea.popcount.org/2019-11-06-creating-sockets" 1572994800.0 #s(elfeed-ref "da39a3ee5e6b4b0d3255bfef95601890afd80709") html nil (general unread) "https://idea.popcount.org/rss.xml" nil) ("idea.popcount.org" . "https://idea.popcount.org/2019-09-30-tcp-puzzles-1-2") #s(elfeed-entry ("idea.popcount.org" . "https://idea.popcount.org/2019-09-30-tcp-puzzles-1-2") "TCP Puzzles 1-2" "https://idea.popcount.org/2019-09-30-tcp-puzzles-1-2" 1569794400.0 #s(elfeed-ref "da39a3ee5e6b4b0d3255bfef95601890afd80709") html nil (general unread) "https://idea.popcount.org/rss.xml" nil) ("idea.popcount.org" . "https://idea.popcount.org/2019-09-20-when-tcp-sockets-refuse-to-die") #s(elfeed-entry ("idea.popcount.org" . "https://idea.popcount.org/2019-09-20-when-tcp-sockets-refuse-to-die") "When TCP sockets refuse to die" "https://idea.popcount.org/2019-09-20-when-tcp-sockets-refuse-to-die" 1568930400.0 #s(elfeed-ref "da39a3ee5e6b4b0d3255bfef95601890afd80709") html nil (general unread) "https://idea.popcount.org/rss.xml" nil) ("idea.popcount.org" . "https://idea.popcount.org/2019-07-10-a-gentle-introduction-to-linux-kernel-fuzzing") #s(elfeed-entry ("idea.popcount.org" . "https://idea.popcount.org/2019-07-10-a-gentle-introduction-to-linux-kernel-fuzzing") "A gentle introduction to Linux Kernel fuzzing" "https://idea.popcount.org/2019-07-10-a-gentle-introduction-to-linux-kernel-fuzzing" 1562709600.0 #s(elfeed-ref "da39a3ee5e6b4b0d3255bfef95601890afd80709") html nil (general unread) "https://idea.popcount.org/rss.xml" nil) ("idea.popcount.org" . "https://idea.popcount.org/2019-05-18-cloudflare-architecture-and-how-bpf-eats-the-world") #s(elfeed-entry ("idea.popcount.org" . "https://idea.popcount.org/2019-05-18-cloudflare-architecture-and-how-bpf-eats-the-world") "Cloudflare architecture and how BPF eats the world" "https://idea.popcount.org/2019-05-18-cloudflare-architecture-and-how-bpf-eats-the-world" 1558130400.0 #s(elfeed-ref "da39a3ee5e6b4b0d3255bfef95601890afd80709") html nil (general unread) "https://idea.popcount.org/rss.xml" nil) ("idea.popcount.org" . "https://idea.popcount.org/2019-03-15-rfc8482---saying-goodbye-to-dns-any") #s(elfeed-entry ("idea.popcount.org" . "https://idea.popcount.org/2019-03-15-rfc8482---saying-goodbye-to-dns-any") "RFC8482 - Saying goodbye to DNS ANY" "https://idea.popcount.org/2019-03-15-rfc8482---saying-goodbye-to-dns-any" 1552604400.0 #s(elfeed-ref "da39a3ee5e6b4b0d3255bfef95601890afd80709") html nil (general unread) "https://idea.popcount.org/rss.xml" nil) ("idea.popcount.org" . "https://idea.popcount.org/2019-02-18-sockmap---tcp-splicing-of-the-future") #s(elfeed-entry ("idea.popcount.org" . "https://idea.popcount.org/2019-02-18-sockmap---tcp-splicing-of-the-future") "SOCKMAP - TCP splicing of the future" "https://idea.popcount.org/2019-02-18-sockmap---tcp-splicing-of-the-future" 1550444400.0 #s(elfeed-ref "da39a3ee5e6b4b0d3255bfef95601890afd80709") html nil (general unread) "https://idea.popcount.org/rss.xml" nil) ("idea.popcount.org" . "https://idea.popcount.org/2019-01-04-io_submit---the-epoll-alternative") #s(elfeed-entry ("idea.popcount.org" . "https://idea.popcount.org/2019-01-04-io_submit---the-epoll-alternative") "io_submit - The epoll alternative" "https://idea.popcount.org/2019-01-04-io_submit---the-epoll-alternative" 1546556400.0 #s(elfeed-ref "da39a3ee5e6b4b0d3255bfef95601890afd80709") html nil (general unread) "https://idea.popcount.org/rss.xml" nil) ("idea.popcount.org" . "https://idea.popcount.org/2018-11-23-every-78us-your-memory-has-a-hiccup") #s(elfeed-entry ("idea.popcount.org" . "https://idea.popcount.org/2018-11-23-every-78us-your-memory-has-a-hiccup") "Every 7.8us your memory has a hiccup" "https://idea.popcount.org/2018-11-23-every-78us-your-memory-has-a-hiccup" 1542927600.0 #s(elfeed-ref "da39a3ee5e6b4b0d3255bfef95601890afd80709") html nil (general unread) "https://idea.popcount.org/rss.xml" nil) ("idea.popcount.org" . "https://idea.popcount.org/2018-11-12-the-rise-of-multivector-attacks") #s(elfeed-entry ("idea.popcount.org" . "https://idea.popcount.org/2018-11-12-the-rise-of-multivector-attacks") "The rise of multivector attacks" "https://idea.popcount.org/2018-11-12-the-rise-of-multivector-attacks" 1541977200.0 #s(elfeed-ref "da39a3ee5e6b4b0d3255bfef95601890afd80709") html nil (general unread) "https://idea.popcount.org/rss.xml" nil) ("idea.popcount.org" . "https://idea.popcount.org/2018-09-10-why-we-are-bumping-the-ipv6-mtu") #s(elfeed-entry ("idea.popcount.org" . "https://idea.popcount.org/2018-09-10-why-we-are-bumping-the-ipv6-mtu") "Why we are bumping the IPv6 MTU" "https://idea.popcount.org/2018-09-10-why-we-are-bumping-the-ipv6-mtu" 1536530400.0 #s(elfeed-ref "da39a3ee5e6b4b0d3255bfef95601890afd80709") html nil (general unread) "https://idea.popcount.org/rss.xml" nil) ("idea.popcount.org" . "https://idea.popcount.org/2018-07-06-how-to-drop-10-million-packets") #s(elfeed-entry ("idea.popcount.org" . "https://idea.popcount.org/2018-07-06-how-to-drop-10-million-packets") "How to drop 10 million packets" "https://idea.popcount.org/2018-07-06-how-to-drop-10-million-packets" 1530828000.0 #s(elfeed-ref "da39a3ee5e6b4b0d3255bfef95601890afd80709") html nil (general unread) "https://idea.popcount.org/rss.xml" nil) ("idea.popcount.org" . "https://idea.popcount.org/2018-06-01-today-we-mitigated-the-resolver") #s(elfeed-entry ("idea.popcount.org" . "https://idea.popcount.org/2018-06-01-today-we-mitigated-the-resolver") "Today we mitigated the resolver" "https://idea.popcount.org/2018-06-01-today-we-mitigated-the-resolver" 1527804000.0 #s(elfeed-ref "da39a3ee5e6b4b0d3255bfef95601890afd80709") html nil (general unread) "https://idea.popcount.org/rss.xml" nil) ("idea.popcount.org" . "https://idea.popcount.org/2018-04-17-mmproxy---creative-linux-routing-hack") #s(elfeed-entry ("idea.popcount.org" . "https://idea.popcount.org/2018-04-17-mmproxy---creative-linux-routing-hack") "mmproxy - creative linux routing hack" "https://idea.popcount.org/2018-04-17-mmproxy---creative-linux-routing-hack" 1523916000.0 #s(elfeed-ref "da39a3ee5e6b4b0d3255bfef95601890afd80709") html nil (general unread) "https://idea.popcount.org/rss.xml" nil) ("idea.popcount.org" . "https://idea.popcount.org/2018-04-12-using-tproxy-for-spectrum-product") #s(elfeed-entry ("idea.popcount.org" . "https://idea.popcount.org/2018-04-12-using-tproxy-for-spectrum-product") "Using TPROXY for Spectrum product" "https://idea.popcount.org/2018-04-12-using-tproxy-for-spectrum-product" 1523484000.0 #s(elfeed-ref "da39a3ee5e6b4b0d3255bfef95601890afd80709") html nil (general unread) "https://idea.popcount.org/rss.xml" nil) ("idea.popcount.org" . "https://idea.popcount.org/2018-03-29-sockets-hop-distance-and-writing-ebpf-assembly") #s(elfeed-entry ("idea.popcount.org" . "https://idea.popcount.org/2018-03-29-sockets-hop-distance-and-writing-ebpf-assembly") "Sockets, Hop Distance and writing eBPF assembly" "https://idea.popcount.org/2018-03-29-sockets-hop-distance-and-writing-ebpf-assembly" 1522274400.0 #s(elfeed-ref "da39a3ee5e6b4b0d3255bfef95601890afd80709") html nil (general unread) "https://idea.popcount.org/rss.xml" nil) ("idea.popcount.org" . "https://idea.popcount.org/2018-03-06-the-real-cause-of-large-ddos---ip-spoofing") #s(elfeed-entry ("idea.popcount.org" . "https://idea.popcount.org/2018-03-06-the-real-cause-of-large-ddos---ip-spoofing") "The real cause of large DDoS - IP Spoofing" "https://idea.popcount.org/2018-03-06-the-real-cause-of-large-ddos---ip-spoofing" 1520290800.0 #s(elfeed-ref "da39a3ee5e6b4b0d3255bfef95601890afd80709") html nil (general unread) "https://idea.popcount.org/rss.xml" nil) ("idea.popcount.org" . "https://idea.popcount.org/2018-02-27-memcrashed---amplification-attacks-from-11211udp") #s(elfeed-entry ("idea.popcount.org" . "https://idea.popcount.org/2018-02-27-memcrashed---amplification-attacks-from-11211udp") "Memcrashed - Amplification attacks from 11211/UDP" "https://idea.popcount.org/2018-02-27-memcrashed---amplification-attacks-from-11211udp" 1519686000.0 #s(elfeed-ref "da39a3ee5e6b4b0d3255bfef95601890afd80709") html nil (general unread) "https://idea.popcount.org/rss.xml" nil) ("idea.popcount.org" . "https://idea.popcount.org/2018-01-26-ip-spoofing-at-packet-hacking-village") #s(elfeed-entry ("idea.popcount.org" . "https://idea.popcount.org/2018-01-26-ip-spoofing-at-packet-hacking-village") "IP Spoofing at Packet Hacking Village" "https://idea.popcount.org/2018-01-26-ip-spoofing-at-packet-hacking-village" 1516921200.0 #s(elfeed-ref "da39a3ee5e6b4b0d3255bfef95601890afd80709") html nil (general unread) "https://idea.popcount.org/rss.xml" nil) ("idea.popcount.org" . "https://idea.popcount.org/2018-01-15-syn-packet-handling") #s(elfeed-entry ("idea.popcount.org" . "https://idea.popcount.org/2018-01-15-syn-packet-handling") "SYN packet handling" "https://idea.popcount.org/2018-01-15-syn-packet-handling" 1515970800.0 #s(elfeed-ref "da39a3ee5e6b4b0d3255bfef95601890afd80709") html nil (general unread) "https://idea.popcount.org/rss.xml" nil) ("idea.popcount.org" . "https://idea.popcount.org/2017-12-22-5-talks-in-5-weeks") #s(elfeed-entry ("idea.popcount.org" . "https://idea.popcount.org/2017-12-22-5-talks-in-5-weeks") "5 talks in 5 weeks" "https://idea.popcount.org/2017-12-22-5-talks-in-5-weeks" 1513897200.0 #s(elfeed-ref "da39a3ee5e6b4b0d3255bfef95601890afd80709") html nil (general unread) "https://idea.popcount.org/rss.xml" nil) ("idea.popcount.org" . "https://idea.popcount.org/2017-11-06-perfect-locality-and-three-systemtap-scripts") #s(elfeed-entry ("idea.popcount.org" . "https://idea.popcount.org/2017-11-06-perfect-locality-and-three-systemtap-scripts") "Perfect locality and three SystemTap scripts" "https://idea.popcount.org/2017-11-06-perfect-locality-and-three-systemtap-scripts" 1509922800.0 #s(elfeed-ref "da39a3ee5e6b4b0d3255bfef95601890afd80709") html nil (general unread) "https://idea.popcount.org/rss.xml" nil) ("idea.popcount.org" . "https://idea.popcount.org/2017-10-24-the-sad-state-of-linux-socket-blancing") #s(elfeed-entry ("idea.popcount.org" . "https://idea.popcount.org/2017-10-24-the-sad-state-of-linux-socket-blancing") "The sad state of Linux socket blancing" "https://idea.popcount.org/2017-10-24-the-sad-state-of-linux-socket-blancing" 1508796000.0 #s(elfeed-ref "da39a3ee5e6b4b0d3255bfef95601890afd80709") html nil (general unread) "https://idea.popcount.org/rss.xml" nil) ("idea.popcount.org" . "https://idea.popcount.org/2017-09-25-meet-gatebot---a-bot-that-allows-us-to-sleep") #s(elfeed-entry ("idea.popcount.org" . "https://idea.popcount.org/2017-09-25-meet-gatebot---a-bot-that-allows-us-to-sleep") "Meet Gatebot - a bot that allows us to sleep" "https://idea.popcount.org/2017-09-25-meet-gatebot---a-bot-that-allows-us-to-sleep" 1506290400.0 #s(elfeed-ref "da39a3ee5e6b4b0d3255bfef95601890afd80709") html nil (general unread) "https://idea.popcount.org/rss.xml" nil) ("idea.popcount.org" . "https://idea.popcount.org/2017-08-18-ip-fragmentation-is-fundamentally-broken") #s(elfeed-entry ("idea.popcount.org" . "https://idea.popcount.org/2017-08-18-ip-fragmentation-is-fundamentally-broken") "IP fragmentation is fundamentally broken" "https://idea.popcount.org/2017-08-18-ip-fragmentation-is-fundamentally-broken" 1503007200.0 #s(elfeed-ref "da39a3ee5e6b4b0d3255bfef95601890afd80709") html nil (general unread) "https://idea.popcount.org/rss.xml" nil) ("idea.popcount.org" . "https://idea.popcount.org/2017-06-29-ssdp-attack-crossing-100gbps") #s(elfeed-entry ("idea.popcount.org" . "https://idea.popcount.org/2017-06-29-ssdp-attack-crossing-100gbps") "SSDP attack crossing 100Gbps" "https://idea.popcount.org/2017-06-29-ssdp-attack-crossing-100gbps" 1498687200.0 #s(elfeed-ref "da39a3ee5e6b4b0d3255bfef95601890afd80709") html nil (general unread) "https://idea.popcount.org/rss.xml" nil) ("idea.popcount.org" . "https://idea.popcount.org/2017-05-25-reflections-on-reflection-attacks") #s(elfeed-entry ("idea.popcount.org" . "https://idea.popcount.org/2017-05-25-reflections-on-reflection-attacks") "Reflections on reflection (attacks)" "https://idea.popcount.org/2017-05-25-reflections-on-reflection-attacks" 1495663200.0 #s(elfeed-ref "da39a3ee5e6b4b0d3255bfef95601890afd80709") html nil (general unread) "https://idea.popcount.org/rss.xml" nil) ("idea.popcount.org" . "https://idea.popcount.org/2017-03-28-sandboxing-landscape") #s(elfeed-entry ("idea.popcount.org" . "https://idea.popcount.org/2017-03-28-sandboxing-landscape") "Sandboxing landscape" "https://idea.popcount.org/2017-03-28-sandboxing-landscape" 1490652000.0 #s(elfeed-ref "da39a3ee5e6b4b0d3255bfef95601890afd80709") html nil (general unread) "https://idea.popcount.org/rss.xml" nil) ("idea.popcount.org" . "https://idea.popcount.org/2017-03-20-epoll-is-fundamentally-broken-22") #s(elfeed-entry ("idea.popcount.org" . "https://idea.popcount.org/2017-03-20-epoll-is-fundamentally-broken-22") "Epoll is fundamentally broken 2/2" "https://idea.popcount.org/2017-03-20-epoll-is-fundamentally-broken-22" 1489964400.0 #s(elfeed-ref "da39a3ee5e6b4b0d3255bfef95601890afd80709") html nil (general unread) "https://idea.popcount.org/rss.xml" nil) ("idea.popcount.org" . "https://idea.popcount.org/2017-02-23-socket-api-thoughts") #s(elfeed-entry ("idea.popcount.org" . "https://idea.popcount.org/2017-02-23-socket-api-thoughts") "Socket API thoughts" "https://idea.popcount.org/2017-02-23-socket-api-thoughts" 1487804400.0 #s(elfeed-ref "da39a3ee5e6b4b0d3255bfef95601890afd80709") html nil (general unread) "https://idea.popcount.org/rss.xml" nil) ("idea.popcount.org" . "https://idea.popcount.org/2017-02-20-epoll-is-fundamentally-broken-12") #s(elfeed-entry ("idea.popcount.org" . "https://idea.popcount.org/2017-02-20-epoll-is-fundamentally-broken-12") "Epoll is fundamentally broken 1/2" "https://idea.popcount.org/2017-02-20-epoll-is-fundamentally-broken-12" 1487545200.0 #s(elfeed-ref "da39a3ee5e6b4b0d3255bfef95601890afd80709") html nil (general unread) "https://idea.popcount.org/rss.xml" nil) ("idea.popcount.org" . "https://idea.popcount.org/2017-01-06-select-is-fundamentally-broken") #s(elfeed-entry ("idea.popcount.org" . "https://idea.popcount.org/2017-01-06-select-is-fundamentally-broken") "Select is fundamentally broken" "https://idea.popcount.org/2017-01-06-select-is-fundamentally-broken" 1483657200.0 #s(elfeed-ref "da39a3ee5e6b4b0d3255bfef95601890afd80709") html nil (general unread) "https://idea.popcount.org/rss.xml" nil) ("idea.popcount.org" . "https://idea.popcount.org/2016-12-05-tld-glue-sticks-around-too-long") #s(elfeed-entry ("idea.popcount.org" . "https://idea.popcount.org/2016-12-05-tld-glue-sticks-around-too-long") "TLD glue sticks around too long" "https://idea.popcount.org/2016-12-05-tld-glue-sticks-around-too-long" 1480892400.0 #s(elfeed-ref "da39a3ee5e6b4b0d3255bfef95601890afd80709") html nil (general unread) "https://idea.popcount.org/rss.xml" nil) ("idea.popcount.org" . "https://idea.popcount.org/2016-11-01-a-brief-history-of-select2") #s(elfeed-entry ("idea.popcount.org" . "https://idea.popcount.org/2016-11-01-a-brief-history-of-select2") "A brief history of select(2)" "https://idea.popcount.org/2016-11-01-a-brief-history-of-select2" 1477954800.0 #s(elfeed-ref "da39a3ee5e6b4b0d3255bfef95601890afd80709") html nil (general unread) "https://idea.popcount.org/rss.xml" nil) ("idea.popcount.org" . "https://idea.popcount.org/2016-10-12-say-cheese-ddos-from-iot-devices") #s(elfeed-entry ("idea.popcount.org" . "https://idea.popcount.org/2016-10-12-say-cheese-ddos-from-iot-devices") "Say Cheese: DDoS from IoT devices" "https://idea.popcount.org/2016-10-12-say-cheese-ddos-from-iot-devices" 1476223200.0 #s(elfeed-ref "da39a3ee5e6b4b0d3255bfef95601890afd80709") html nil (general unread) "https://idea.popcount.org/rss.xml" nil) ("idea.popcount.org" . "https://idea.popcount.org/2016-09-20-strange-loop---ip-spoofing") #s(elfeed-entry ("idea.popcount.org" . "https://idea.popcount.org/2016-09-20-strange-loop---ip-spoofing") "Strange Loop - IP Spoofing" "https://idea.popcount.org/2016-09-20-strange-loop---ip-spoofing" 1474322400.0 #s(elfeed-ref "da39a3ee5e6b4b0d3255bfef95601890afd80709") html nil (general unread) "https://idea.popcount.org/rss.xml" nil) ("idea.popcount.org" . "https://idea.popcount.org/2016-08-12-this-is-strictly-a-violation-of-the-tcp-specification") #s(elfeed-entry ("idea.popcount.org" . "https://idea.popcount.org/2016-08-12-this-is-strictly-a-violation-of-the-tcp-specification") "This is strictly a violation of the TCP specification" "https://idea.popcount.org/2016-08-12-this-is-strictly-a-violation-of-the-tcp-specification" 1470952800.0 #s(elfeed-ref "da39a3ee5e6b4b0d3255bfef95601890afd80709") html nil (general unread) "https://idea.popcount.org/rss.xml" nil) ("idea.popcount.org" . "https://idea.popcount.org/2016-07-07-why-we-use-the-linux-kernels-tcp-stack") #s(elfeed-entry ("idea.popcount.org" . "https://idea.popcount.org/2016-07-07-why-we-use-the-linux-kernels-tcp-stack") "Why we use the Linux kernel's TCP stack" "https://idea.popcount.org/2016-07-07-why-we-use-the-linux-kernels-tcp-stack" 1467842400.0 #s(elfeed-ref "da39a3ee5e6b4b0d3255bfef95601890afd80709") html nil (general unread) "https://idea.popcount.org/rss.xml" nil) ("idea.popcount.org" . "https://idea.popcount.org/2016-04-11-the-curious-case-of-slow-downloads") #s(elfeed-entry ("idea.popcount.org" . "https://idea.popcount.org/2016-04-11-the-curious-case-of-slow-downloads") "The curious case of slow downloads" "https://idea.popcount.org/2016-04-11-the-curious-case-of-slow-downloads" 1460325600.0 #s(elfeed-ref "da39a3ee5e6b4b0d3255bfef95601890afd80709") html nil (general unread) "https://idea.popcount.org/rss.xml" nil) ("idea.popcount.org" . "https://idea.popcount.org/2016-04-05-the-revenge-of-the-listening-sockets") #s(elfeed-entry ("idea.popcount.org" . "https://idea.popcount.org/2016-04-05-the-revenge-of-the-listening-sockets") "The revenge of the listening sockets" "https://idea.popcount.org/2016-04-05-the-revenge-of-the-listening-sockets" 1459807200.0 #s(elfeed-ref "da39a3ee5e6b4b0d3255bfef95601890afd80709") html nil (general unread) "https://idea.popcount.org/rss.xml" nil) ("idea.popcount.org" . "https://idea.popcount.org/2016-03-11-web-archeology---itblog") #s(elfeed-entry ("idea.popcount.org" . "https://idea.popcount.org/2016-03-11-web-archeology---itblog") "Web archeology - itblog" "https://idea.popcount.org/2016-03-11-web-archeology---itblog" 1457650800.0 #s(elfeed-ref "da39a3ee5e6b4b0d3255bfef95601890afd80709") html nil (general unread) "https://idea.popcount.org/rss.xml" nil) ("idea.popcount.org" . "https://idea.popcount.org/2016-03-02-the-winter-of-weekend-attacks") #s(elfeed-entry ("idea.popcount.org" . "https://idea.popcount.org/2016-03-02-the-winter-of-weekend-attacks") "The winter of weekend attacks" "https://idea.popcount.org/2016-03-02-the-winter-of-weekend-attacks" 1456873200.0 #s(elfeed-ref "da39a3ee5e6b4b0d3255bfef95601890afd80709") html nil (general unread) "https://idea.popcount.org/rss.xml" nil) ("idea.popcount.org" . "https://idea.popcount.org/2016-02-01-enigma---building-a-dos-mitigation-pipeline") #s(elfeed-entry ("idea.popcount.org" . "https://idea.popcount.org/2016-02-01-enigma---building-a-dos-mitigation-pipeline") "Enigma - Building a DoS mitigation pipeline" "https://idea.popcount.org/2016-02-01-enigma---building-a-dos-mitigation-pipeline" 1454281200.0 #s(elfeed-ref "da39a3ee5e6b4b0d3255bfef95601890afd80709") html nil (general unread) "https://idea.popcount.org/rss.xml" nil) ("idea.popcount.org" . "https://idea.popcount.org/2015-11-19-a-story-of-one-latency-spike") #s(elfeed-entry ("idea.popcount.org" . "https://idea.popcount.org/2015-11-19-a-story-of-one-latency-spike") "A story of one latency spike" "https://idea.popcount.org/2015-11-19-a-story-of-one-latency-spike" 1447887600.0 #s(elfeed-ref "da39a3ee5e6b4b0d3255bfef95601890afd80709") html nil (general unread) "https://idea.popcount.org/rss.xml" nil) ("idea.popcount.org" . "https://idea.popcount.org/2015-11-16-black-hat-eu---defending-the-indefensible") #s(elfeed-entry ("idea.popcount.org" . "https://idea.popcount.org/2015-11-16-black-hat-eu---defending-the-indefensible") "Black Hat EU - Defending the indefensible" "https://idea.popcount.org/2015-11-16-black-hat-eu---defending-the-indefensible" 1447628400.0 #s(elfeed-ref "da39a3ee5e6b4b0d3255bfef95601890afd80709") html nil (general unread) "https://idea.popcount.org/rss.xml" nil) ("idea.popcount.org" . "https://idea.popcount.org/2015-09-25-analysis-of-a-browser-based-ddos") #s(elfeed-entry ("idea.popcount.org" . "https://idea.popcount.org/2015-09-25-analysis-of-a-browser-based-ddos") "Analysis of a browser-based DDoS" "https://idea.popcount.org/2015-09-25-analysis-of-a-browser-based-ddos" 1443132000.0 #s(elfeed-ref "da39a3ee5e6b4b0d3255bfef95601890afd80709") html nil (general unread) "https://idea.popcount.org/rss.xml" nil) ("idea.popcount.org" . "https://idea.popcount.org/2015-09-07-kernel-bypass") #s(elfeed-entry ("idea.popcount.org" . "https://idea.popcount.org/2015-09-07-kernel-bypass") "Kernel bypass" "https://idea.popcount.org/2015-09-07-kernel-bypass" 1441576800.0 #s(elfeed-ref "da39a3ee5e6b4b0d3255bfef95601890afd80709") html nil (general unread) "https://idea.popcount.org/rss.xml" nil) ("idea.popcount.org" . "https://idea.popcount.org/2015-08-16-turtles-all-the-way-down") #s(elfeed-entry ("idea.popcount.org" . "https://idea.popcount.org/2015-08-16-turtles-all-the-way-down") "Turtles all the way down" "https://idea.popcount.org/2015-08-16-turtles-all-the-way-down" 1439676000.0 #s(elfeed-ref "da39a3ee5e6b4b0d3255bfef95601890afd80709") html nil (general unread) "https://idea.popcount.org/rss.xml" nil) ("idea.popcount.org" . "https://idea.popcount.org/2015-06-30-how-to-achieve-low-latency") #s(elfeed-entry ("idea.popcount.org" . "https://idea.popcount.org/2015-06-30-how-to-achieve-low-latency") "How to achieve low latency" "https://idea.popcount.org/2015-06-30-how-to-achieve-low-latency" 1435615200.0 #s(elfeed-ref "da39a3ee5e6b4b0d3255bfef95601890afd80709") html nil (general unread) "https://idea.popcount.org/rss.xml" nil) ("idea.popcount.org" . "https://idea.popcount.org/2015-06-16-how-to-receive-a-million-packets-per-second") #s(elfeed-entry ("idea.popcount.org" . "https://idea.popcount.org/2015-06-16-how-to-receive-a-million-packets-per-second") "How to receive a million packets per second" "https://idea.popcount.org/2015-06-16-how-to-receive-a-million-packets-per-second" 1434405600.0 #s(elfeed-ref "da39a3ee5e6b4b0d3255bfef95601890afd80709") html nil (general unread) "https://idea.popcount.org/rss.xml" nil) ("idea.popcount.org" . "https://idea.popcount.org/2015-05-11-cloudflare-interview-questions") #s(elfeed-entry ("idea.popcount.org" . "https://idea.popcount.org/2015-05-11-cloudflare-interview-questions") "CloudFlare Interview Questions" "https://idea.popcount.org/2015-05-11-cloudflare-interview-questions" 1431295200.0 #s(elfeed-ref "da39a3ee5e6b4b0d3255bfef95601890afd80709") html nil (general unread) "https://idea.popcount.org/rss.xml" nil) ("idea.popcount.org" . "https://idea.popcount.org/2015-05-11-oarc---dealing-with-dns-packet-floods") #s(elfeed-entry ("idea.popcount.org" . "https://idea.popcount.org/2015-05-11-oarc---dealing-with-dns-packet-floods") "OARC - Dealing with DNS packet floods" "https://idea.popcount.org/2015-05-11-oarc---dealing-with-dns-packet-floods" 1431295200.0 #s(elfeed-ref "da39a3ee5e6b4b0d3255bfef95601890afd80709") html nil (general unread) "https://idea.popcount.org/rss.xml" nil) ("idea.popcount.org" . "https://idea.popcount.org/2015-03-06-deprecating-the-dns-any") #s(elfeed-entry ("idea.popcount.org" . "https://idea.popcount.org/2015-03-06-deprecating-the-dns-any") "Deprecating the DNS ANY" "https://idea.popcount.org/2015-03-06-deprecating-the-dns-any" 1425596400.0 #s(elfeed-ref "da39a3ee5e6b4b0d3255bfef95601890afd80709") html nil (general unread) "https://idea.popcount.org/rss.xml" nil) ("idea.popcount.org" . "https://idea.popcount.org/2015-02-04-path-mtu-discovery-in-practice") #s(elfeed-entry ("idea.popcount.org" . "https://idea.popcount.org/2015-02-04-path-mtu-discovery-in-practice") "Path MTU discovery in practice" "https://idea.popcount.org/2015-02-04-path-mtu-discovery-in-practice" 1423004400.0 #s(elfeed-ref "da39a3ee5e6b4b0d3255bfef95601890afd80709") html nil (general unread) "https://idea.popcount.org/rss.xml" nil) ("idea.popcount.org" . "https://idea.popcount.org/2014-05-21-bpf-the-forgotten-bytecode") #s(elfeed-entry ("idea.popcount.org" . "https://idea.popcount.org/2014-05-21-bpf-the-forgotten-bytecode") "BPF: the forgotten bytecode" "https://idea.popcount.org/2014-05-21-bpf-the-forgotten-bytecode" 1400623200.0 #s(elfeed-ref "da39a3ee5e6b4b0d3255bfef95601890afd80709") html nil (general unread) "https://idea.popcount.org/rss.xml" nil) ("idea.popcount.org" . "https://idea.popcount.org/2014-04-03-bind-before-connect") #s(elfeed-entry ("idea.popcount.org" . "https://idea.popcount.org/2014-04-03-bind-before-connect") "Bind before connect" "https://idea.popcount.org/2014-04-03-bind-before-connect" 1396476000.0 #s(elfeed-ref "da39a3ee5e6b4b0d3255bfef95601890afd80709") html nil (general unread) "https://idea.popcount.org/rss.xml" nil) ("idea.popcount.org" . "https://idea.popcount.org/2014-02-28-improving-containerlist") #s(elfeed-entry ("idea.popcount.org" . "https://idea.popcount.org/2014-02-28-improving-containerlist") "Improving 'container/list'" "https://idea.popcount.org/2014-02-28-improving-containerlist" 1393542000.0 #s(elfeed-ref "da39a3ee5e6b4b0d3255bfef95601890afd80709") html nil (general unread) "https://idea.popcount.org/rss.xml" nil) ("idea.popcount.org" . "https://idea.popcount.org/2013-12-31-logging-best-practises") #s(elfeed-entry ("idea.popcount.org" . "https://idea.popcount.org/2013-12-31-logging-best-practises") "Logging best practices" "https://idea.popcount.org/2013-12-31-logging-best-practises" 1388444400.0 #s(elfeed-ref "da39a3ee5e6b4b0d3255bfef95601890afd80709") html nil (general unread) "https://idea.popcount.org/rss.xml" nil) ("idea.popcount.org" . "https://idea.popcount.org/2013-11-28-how-to-resolve-a-million-domains") #s(elfeed-entry ("idea.popcount.org" . "https://idea.popcount.org/2013-11-28-how-to-resolve-a-million-domains") "How to resolve a million domains" "https://idea.popcount.org/2013-11-28-how-to-resolve-a-million-domains" 1385593200.0 #s(elfeed-ref "da39a3ee5e6b4b0d3255bfef95601890afd80709") html nil (general unread) "https://idea.popcount.org/rss.xml" nil) ("idea.popcount.org" . "https://idea.popcount.org/2013-10-09-visualising-siphash") #s(elfeed-entry ("idea.popcount.org" . "https://idea.popcount.org/2013-10-09-visualising-siphash") "Visualising SipHash" "https://idea.popcount.org/2013-10-09-visualising-siphash" 1381269600.0 #s(elfeed-ref "da39a3ee5e6b4b0d3255bfef95601890afd80709") html nil (general unread) "https://idea.popcount.org/rss.xml" nil) ("idea.popcount.org" . "https://idea.popcount.org/2013-09-05-it-aint-about-the-callbacks") #s(elfeed-entry ("idea.popcount.org" . "https://idea.popcount.org/2013-09-05-it-aint-about-the-callbacks") "It ain't about the callbacks..." "https://idea.popcount.org/2013-09-05-it-aint-about-the-callbacks" 1378332000.0 #s(elfeed-ref "da39a3ee5e6b4b0d3255bfef95601890afd80709") html nil (general unread) "https://idea.popcount.org/rss.xml" nil) ("idea.popcount.org" . "https://idea.popcount.org/2013-08-15-fortify_source") #s(elfeed-entry ("idea.popcount.org" . "https://idea.popcount.org/2013-08-15-fortify_source") "FORTIFY_SOURCE" "https://idea.popcount.org/2013-08-15-fortify_source" 1376517600.0 #s(elfeed-ref "da39a3ee5e6b4b0d3255bfef95601890afd80709") html nil (general unread) "https://idea.popcount.org/rss.xml" nil) ("idea.popcount.org" . "https://idea.popcount.org/2013-07-24-ir-is-better-than-assembly") #s(elfeed-entry ("idea.popcount.org" . "https://idea.popcount.org/2013-07-24-ir-is-better-than-assembly") "IR is better than assembly" "https://idea.popcount.org/2013-07-24-ir-is-better-than-assembly" 1374616800.0 #s(elfeed-ref "da39a3ee5e6b4b0d3255bfef95601890afd80709") html nil (general unread) "https://idea.popcount.org/rss.xml" nil) ("idea.popcount.org" . "https://idea.popcount.org/2013-07-19-how-to-sleep-a-million-years") #s(elfeed-entry ("idea.popcount.org" . "https://idea.popcount.org/2013-07-19-how-to-sleep-a-million-years") "How to sleep a million years" "https://idea.popcount.org/2013-07-19-how-to-sleep-a-million-years" 1374184800.0 #s(elfeed-ref "da39a3ee5e6b4b0d3255bfef95601890afd80709") html nil (general unread) "https://idea.popcount.org/rss.xml" nil) ("idea.popcount.org" . "https://idea.popcount.org/2013-07-16-baby-steps-in-x86-assembly") #s(elfeed-entry ("idea.popcount.org" . "https://idea.popcount.org/2013-07-16-baby-steps-in-x86-assembly") "Baby steps in x86 assembly" "https://idea.popcount.org/2013-07-16-baby-steps-in-x86-assembly" 1373925600.0 #s(elfeed-ref "da39a3ee5e6b4b0d3255bfef95601890afd80709") html nil (general unread) "https://idea.popcount.org/rss.xml" nil) ("idea.popcount.org" . "https://idea.popcount.org/2013-07-11-fun-with-the-great-firewall") #s(elfeed-entry ("idea.popcount.org" . "https://idea.popcount.org/2013-07-11-fun-with-the-great-firewall") "Fun with The Great Firewall" "https://idea.popcount.org/2013-07-11-fun-with-the-great-firewall" 1373493600.0 #s(elfeed-ref "da39a3ee5e6b4b0d3255bfef95601890afd80709") html nil (general unread) "https://idea.popcount.org/rss.xml" nil) ("idea.popcount.org" . "https://idea.popcount.org/2013-03-25-hardware-entropy-rdrand") #s(elfeed-entry ("idea.popcount.org" . "https://idea.popcount.org/2013-03-25-hardware-entropy-rdrand") "Hardware entropy: RDRAND" "https://idea.popcount.org/2013-03-25-hardware-entropy-rdrand" 1364166000.0 #s(elfeed-ref "da39a3ee5e6b4b0d3255bfef95601890afd80709") html nil (general unread) "https://idea.popcount.org/rss.xml" nil) ("idea.popcount.org" . "https://idea.popcount.org/2013-01-30-bitsliced-siphash") #s(elfeed-entry ("idea.popcount.org" . "https://idea.popcount.org/2013-01-30-bitsliced-siphash") "Bitsliced SipHash" "https://idea.popcount.org/2013-01-30-bitsliced-siphash" 1359500400.0 #s(elfeed-ref "da39a3ee5e6b4b0d3255bfef95601890afd80709") html nil (general unread) "https://idea.popcount.org/rss.xml" nil) ("idea.popcount.org" . "https://idea.popcount.org/2013-01-29-stripping-layer-2-in-pcap") #s(elfeed-entry ("idea.popcount.org" . "https://idea.popcount.org/2013-01-29-stripping-layer-2-in-pcap") "Stripping layer 2 in pcap" "https://idea.popcount.org/2013-01-29-stripping-layer-2-in-pcap" 1359414000.0 #s(elfeed-ref "da39a3ee5e6b4b0d3255bfef95601890afd80709") html nil (general unread) "https://idea.popcount.org/rss.xml" nil) ("idea.popcount.org" . "https://idea.popcount.org/2013-01-28-counting-cycles---rdtsc") #s(elfeed-entry ("idea.popcount.org" . "https://idea.popcount.org/2013-01-28-counting-cycles---rdtsc") "Counting cycles - RDTSC" "https://idea.popcount.org/2013-01-28-counting-cycles---rdtsc" 1359327600.0 #s(elfeed-ref "da39a3ee5e6b4b0d3255bfef95601890afd80709") html nil (general unread) "https://idea.popcount.org/rss.xml" nil) ("idea.popcount.org" . "https://idea.popcount.org/2013-01-24-siphash") #s(elfeed-entry ("idea.popcount.org" . "https://idea.popcount.org/2013-01-24-siphash") "SipHash" "https://idea.popcount.org/2013-01-24-siphash" 1358982000.0 #s(elfeed-ref "da39a3ee5e6b4b0d3255bfef95601890afd80709") html nil (general unread) "https://idea.popcount.org/rss.xml" nil) ("idea.popcount.org" . "https://idea.popcount.org/2012-12-11-linux-process-states") #s(elfeed-entry ("idea.popcount.org" . "https://idea.popcount.org/2012-12-11-linux-process-states") "Linux process states" "https://idea.popcount.org/2012-12-11-linux-process-states" 1355180400.0 #s(elfeed-ref "da39a3ee5e6b4b0d3255bfef95601890afd80709") html nil (general unread) "https://idea.popcount.org/rss.xml" nil) ("idea.popcount.org" . "https://idea.popcount.org/2012-12-09-lsof-cant-identify-protocol") #s(elfeed-entry ("idea.popcount.org" . "https://idea.popcount.org/2012-12-09-lsof-cant-identify-protocol") "lsof: can't identify protocol" "https://idea.popcount.org/2012-12-09-lsof-cant-identify-protocol" 1355007600.0 #s(elfeed-ref "da39a3ee5e6b4b0d3255bfef95601890afd80709") html nil (general unread) "https://idea.popcount.org/rss.xml" nil) ("idea.popcount.org" . "https://idea.popcount.org/2012-11-23-too-much-erlang") #s(elfeed-entry ("idea.popcount.org" . "https://idea.popcount.org/2012-11-23-too-much-erlang") "Too much Erlang" "https://idea.popcount.org/2012-11-23-too-much-erlang" 1353625200.0 #s(elfeed-ref "da39a3ee5e6b4b0d3255bfef95601890afd80709") html nil (general unread) "https://idea.popcount.org/rss.xml" nil) ("idea.popcount.org" . "https://idea.popcount.org/2012-11-13-how-to-crash-gdb-on-os-x") #s(elfeed-entry ("idea.popcount.org" . "https://idea.popcount.org/2012-11-13-how-to-crash-gdb-on-os-x") "How to crash gdb on OS X" "https://idea.popcount.org/2012-11-13-how-to-crash-gdb-on-os-x" 1352761200.0 #s(elfeed-ref "da39a3ee5e6b4b0d3255bfef95601890afd80709") html nil (general unread) "https://idea.popcount.org/rss.xml" nil) ("idea.popcount.org" . "https://idea.popcount.org/2012-11-12-ssl-scanners") #s(elfeed-entry ("idea.popcount.org" . "https://idea.popcount.org/2012-11-12-ssl-scanners") "SSL scanners" "https://idea.popcount.org/2012-11-12-ssl-scanners" 1352674800.0 #s(elfeed-ref "da39a3ee5e6b4b0d3255bfef95601890afd80709") html nil (general unread) "https://idea.popcount.org/rss.xml" nil) ("idea.popcount.org" . "https://idea.popcount.org/2012-09-24-aes-support-in-westmere") #s(elfeed-entry ("idea.popcount.org" . "https://idea.popcount.org/2012-09-24-aes-support-in-westmere") "AES support in Westmere" "https://idea.popcount.org/2012-09-24-aes-support-in-westmere" 1348437600.0 #s(elfeed-ref "da39a3ee5e6b4b0d3255bfef95601890afd80709") html nil (general unread) "https://idea.popcount.org/rss.xml" nil) ("idea.popcount.org" . "https://idea.popcount.org/2012-09-21-django-with-sockjs") #s(elfeed-entry ("idea.popcount.org" . "https://idea.popcount.org/2012-09-21-django-with-sockjs") "Django with SockJS" "https://idea.popcount.org/2012-09-21-django-with-sockjs" 1348178400.0 #s(elfeed-ref "da39a3ee5e6b4b0d3255bfef95601890afd80709") html nil (general unread) "https://idea.popcount.org/rss.xml" nil) ("idea.popcount.org" . "https://idea.popcount.org/2012-09-12-reinventing-spinlocks") #s(elfeed-entry ("idea.popcount.org" . "https://idea.popcount.org/2012-09-12-reinventing-spinlocks") "Reinventing spinlocks" "https://idea.popcount.org/2012-09-12-reinventing-spinlocks" 1347400800.0 #s(elfeed-ref "da39a3ee5e6b4b0d3255bfef95601890afd80709") html nil (general unread) "https://idea.popcount.org/rss.xml" nil) ("idea.popcount.org" . "https://idea.popcount.org/2012-09-11-concurrent-queue-in-c") #s(elfeed-entry ("idea.popcount.org" . "https://idea.popcount.org/2012-09-11-concurrent-queue-in-c") "Concurrent queue in C" "https://idea.popcount.org/2012-09-11-concurrent-queue-in-c" 1347314400.0 #s(elfeed-ref "da39a3ee5e6b4b0d3255bfef95601890afd80709") html nil (general unread) "https://idea.popcount.org/rss.xml" nil) ("idea.popcount.org" . "https://idea.popcount.org/2012-07-28-am-i-a-cyborg-now") #s(elfeed-entry ("idea.popcount.org" . "https://idea.popcount.org/2012-07-28-am-i-a-cyborg-now") "Am I a cyborg now?" "https://idea.popcount.org/2012-07-28-am-i-a-cyborg-now" 1343426400.0 #s(elfeed-ref "da39a3ee5e6b4b0d3255bfef95601890afd80709") html nil (general unread) "https://idea.popcount.org/rss.xml" nil) ("idea.popcount.org" . "https://idea.popcount.org/2012-07-25-introduction-to-hamt") #s(elfeed-entry ("idea.popcount.org" . "https://idea.popcount.org/2012-07-25-introduction-to-hamt") "Introduction to HAMT" "https://idea.popcount.org/2012-07-25-introduction-to-hamt" 1343167200.0 #s(elfeed-ref "da39a3ee5e6b4b0d3255bfef95601890afd80709") html nil (general unread) "https://idea.popcount.org/rss.xml" nil) ("idea.popcount.org" . "https://idea.popcount.org/2012-07-02-rethinking-full-text-search") #s(elfeed-entry ("idea.popcount.org" . "https://idea.popcount.org/2012-07-02-rethinking-full-text-search") "Rethinking full text search" "https://idea.popcount.org/2012-07-02-rethinking-full-text-search" 1341180000.0 #s(elfeed-ref "da39a3ee5e6b4b0d3255bfef95601890afd80709") html nil (general unread) "https://idea.popcount.org/rss.xml" nil) ("idea.popcount.org" . "https://idea.popcount.org/2012-06-17-ssl-fingerprinting-for-p0f") #s(elfeed-entry ("idea.popcount.org" . "https://idea.popcount.org/2012-06-17-ssl-fingerprinting-for-p0f") "SSL fingerprinting for p0f" "https://idea.popcount.org/2012-06-17-ssl-fingerprinting-for-p0f" 1339884000.0 #s(elfeed-ref "da39a3ee5e6b4b0d3255bfef95601890afd80709") html nil (general unread) "https://idea.popcount.org/rss.xml" nil) ("idea.popcount.org" . "https://idea.popcount.org/2012-06-16-dissecting-ssl-handshake") #s(elfeed-entry ("idea.popcount.org" . "https://idea.popcount.org/2012-06-16-dissecting-ssl-handshake") "Dissecting SSL handshake" "https://idea.popcount.org/2012-06-16-dissecting-ssl-handshake" 1339797600.0 #s(elfeed-ref "da39a3ee5e6b4b0d3255bfef95601890afd80709") html nil (general unread) "https://idea.popcount.org/rss.xml" nil) ("idea.popcount.org" . "https://idea.popcount.org/2012-06-01-hello-world") #s(elfeed-entry ("idea.popcount.org" . "https://idea.popcount.org/2012-06-01-hello-world") "Hello world!" "https://idea.popcount.org/2012-06-01-hello-world" 1338501600.0 #s(elfeed-ref "da39a3ee5e6b4b0d3255bfef95601890afd80709") html nil (general unread) "https://idea.popcount.org/rss.xml" nil) ("drewdevault.com" . "https://drewdevault.com//2020/01/17/Effective-project-governance.html") #s(elfeed-entry ("drewdevault.com" . "https://drewdevault.com//2020/01/17/Effective-project-governance.html") "A philosophy of project governance" "https://drewdevault.com/2020/01/17/Effective-project-governance.html" 1579219200.0 #s(elfeed-ref "3a7ae2c5d388d0311b04b6d9deaabfb6051ce904") html nil (dev se unread) "https://drewdevault.com/feed.xml" nil) ("drewdevault.com" . "https://drewdevault.com//2020/01/15/Status-update.html") #s(elfeed-entry ("drewdevault.com" . "https://drewdevault.com//2020/01/15/Status-update.html") "Status update, January 2020" "https://drewdevault.com/2020/01/15/Status-update.html" 1579046400.0 #s(elfeed-ref "b6e568969a6ff120b94879d06d1b9cab4a923d98") html nil (dev se unread) "https://drewdevault.com/feed.xml" nil) ("drewdevault.com" . "https://drewdevault.com//2020/01/08/Re-Slow.html") #s(elfeed-entry ("drewdevault.com" . "https://drewdevault.com//2020/01/08/Re-Slow.html") "Following up on \"Hello world\"" "https://drewdevault.com/2020/01/08/Re-Slow.html" 1578441600.0 #s(elfeed-ref "ae7303e44f17c5e01cdc1de2a278465b3d8091bc") html nil (dev se unread) "https://drewdevault.com/feed.xml" nil) ("drewdevault.com" . "https://drewdevault.com//2020/01/04/Slow.html") #s(elfeed-entry ("drewdevault.com" . "https://drewdevault.com//2020/01/04/Slow.html") "Hello world" "https://drewdevault.com/2020/01/04/Slow.html" 1578096000.0 #s(elfeed-ref "d16832c00278c317ca17e367b276be69b760d40d") html nil (dev se unread) "https://drewdevault.com/feed.xml" nil) ("drewdevault.com" . "https://drewdevault.com//2019/12/30/dotfiles.html") #s(elfeed-entry ("drewdevault.com" . "https://drewdevault.com//2019/12/30/dotfiles.html") "Managing my dotfiles as a git repository" "https://drewdevault.com/2019/12/30/dotfiles.html" 1577664000.0 #s(elfeed-ref "be534d6446be48ec69bb559a293b1c5702a87378") html nil (dev se unread) "https://drewdevault.com/feed.xml" nil) ("drewdevault.com" . "https://drewdevault.com//2019/12/18/PinePhone-review.html") #s(elfeed-entry ("drewdevault.com" . "https://drewdevault.com//2019/12/18/PinePhone-review.html") "PinePhone review" "https://drewdevault.com/2019/12/18/PinePhone-review.html" 1576627200.0 #s(elfeed-ref "1ae85b7bb20e62725d6d59f0151fb56c96c361a1") html nil (dev se unread) "https://drewdevault.com/feed.xml" nil) ("drewdevault.com" . "https://drewdevault.com//2019/12/15/Status-update.html") #s(elfeed-entry ("drewdevault.com" . "https://drewdevault.com//2019/12/15/Status-update.html") "Status update, December 2019" "https://drewdevault.com/2019/12/15/Status-update.html" 1576368000.0 #s(elfeed-ref "8b49416fafaae6ea776f054e353b2713c267fddf") html nil (dev se unread) "https://drewdevault.com/feed.xml" nil) ("drewdevault.com" . "https://drewdevault.com//2019/12/09/Developers-shouldnt-distribute.html") #s(elfeed-entry ("drewdevault.com" . "https://drewdevault.com//2019/12/09/Developers-shouldnt-distribute.html") "Developers shouldn't distribute their own software" "https://drewdevault.com/2019/12/09/Developers-shouldnt-distribute.html" 1575849600.0 #s(elfeed-ref "643b46dc1d34c834df152ac256443ed74fcc5949") html nil (dev se unread) "https://drewdevault.com/feed.xml" nil) ("drewdevault.com" . "https://drewdevault.com//2019/11/29/dotorg.html") #s(elfeed-entry ("drewdevault.com" . "https://drewdevault.com//2019/11/29/dotorg.html") "Take action to save .org and prosecute those who sold out the internet" "https://drewdevault.com/2019/11/29/dotorg.html" 1574985600.0 #s(elfeed-ref "a413378181bdcfedcab98dcaf492955096fdb7ce") html nil (dev se unread) "https://drewdevault.com/feed.xml" nil) ("drewdevault.com" . "https://drewdevault.com//2019/11/26/Avoid-traumatic-changes.html") #s(elfeed-entry ("drewdevault.com" . "https://drewdevault.com//2019/11/26/Avoid-traumatic-changes.html") "Software developers should avoid traumatic changes" "https://drewdevault.com/2019/11/26/Avoid-traumatic-changes.html" 1574726400.0 #s(elfeed-ref "7b7110266a3e32fdc9e3d55c7b468f23cf6f216c") html nil (dev se unread) "https://drewdevault.com/feed.xml" nil) ("thecrazyprogrammer.com" . "https://www.thecrazyprogrammer.com/?p=10001") #s(elfeed-entry ("thecrazyprogrammer.com" . "https://www.thecrazyprogrammer.com/?p=10001") "JavaScript outerHTML with Example" "https://www.thecrazyprogrammer.com/2020/01/javascript-outerhtml-with-example.html" 1579262066.0 #s(elfeed-ref "40a8a6aff19d0496811e029a9adb717de26e8142") html nil (general unread) "https://thecrazyprogrammer.com/feed" (:authors ((:name "Neeraj Mishra")) :categories ("JavaScript"))) ("thecrazyprogrammer.com" . "https://www.thecrazyprogrammer.com/?p=9996") #s(elfeed-entry ("thecrazyprogrammer.com" . "https://www.thecrazyprogrammer.com/?p=9996") "Microsoft 70-483 Exam – Resources You Can Use to Prepare" "https://www.thecrazyprogrammer.com/2020/01/microsoft-70-483-exam.html" 1578898554.0 #s(elfeed-ref "314f20a6029744ef5555d1b941fe202c5ebdccc1") html nil (general unread) "https://thecrazyprogrammer.com/feed" (:authors ((:name "Neeraj Mishra")) :categories ("Sponsored"))) ("thecrazyprogrammer.com" . "https://www.thecrazyprogrammer.com/?p=9993") #s(elfeed-entry ("thecrazyprogrammer.com" . "https://www.thecrazyprogrammer.com/?p=9993") "Threaded Binary Tree with Implementation" "https://www.thecrazyprogrammer.com/2020/01/threaded-binary-tree.html" 1578648129.0 #s(elfeed-ref "f5944ffbd6d415c7b9e9b204e370ff30561caed6") html nil (general unread) "https://thecrazyprogrammer.com/feed" (:authors ((:name "Neeraj Mishra")) :categories ("DSA"))) ("thecrazyprogrammer.com" . "https://www.thecrazyprogrammer.com/?p=9983") #s(elfeed-entry ("thecrazyprogrammer.com" . "https://www.thecrazyprogrammer.com/?p=9983") "JavaScript Get URL Parameters" "https://www.thecrazyprogrammer.com/2019/12/javascript-get-url-parameters.html" 1577788301.0 #s(elfeed-ref "1486f7055e88347085ebf5dddd44de97341f8987") html nil (general unread) "https://thecrazyprogrammer.com/feed" (:authors ((:name "Neeraj Mishra")) :categories ("JavaScript"))) ("thecrazyprogrammer.com" . "https://www.thecrazyprogrammer.com/?p=9970") #s(elfeed-entry ("thecrazyprogrammer.com" . "https://www.thecrazyprogrammer.com/?p=9970") "Advantages and Disadvantages of Operating System" "https://www.thecrazyprogrammer.com/2019/12/advantages-and-disadvantages-of-operating-system.html" 1577434468.0 #s(elfeed-ref "cffe1575c05d9a244557d8525348c98ca6fc0b5a") html nil (general unread) "https://thecrazyprogrammer.com/feed" (:authors ((:name "Chirag Manghnani")) :categories ("Operating System"))) ("thecrazyprogrammer.com" . "https://www.thecrazyprogrammer.com/?p=9975") #s(elfeed-entry ("thecrazyprogrammer.com" . "https://www.thecrazyprogrammer.com/?p=9975") "Mobile-First Design: Why It’s The Only Way to Develop Your App" "https://www.thecrazyprogrammer.com/2019/12/mobile-first-design.html" 1577098564.0 #s(elfeed-ref "be79541274999620529ff3139a3a0ad920372e71") html nil (general unread) "https://thecrazyprogrammer.com/feed" (:authors ((:name "Neeraj Mishra")) :categories ("Design"))) ("thecrazyprogrammer.com" . "https://www.thecrazyprogrammer.com/?p=9953") #s(elfeed-entry ("thecrazyprogrammer.com" . "https://www.thecrazyprogrammer.com/?p=9953") "The 5 Best Silicon Valley Startups of 2019" "https://www.thecrazyprogrammer.com/2019/12/best-silicon-valley-startups.html" 1576853748.0 #s(elfeed-ref "c4cd896964b8e44da898e96e5cfb0e925fd1847a") html nil (general unread) "https://thecrazyprogrammer.com/feed" (:authors ((:name "Manish Kumar")) :categories ("News" "best silicon valley startups" "silicon valley" "startups" "startups in silicon valley"))) ("thecrazyprogrammer.com" . "https://www.thecrazyprogrammer.com/?p=9941") #s(elfeed-entry ("thecrazyprogrammer.com" . "https://www.thecrazyprogrammer.com/?p=9941") "Difference between Lossy and Lossless Compression" "https://www.thecrazyprogrammer.com/2019/12/lossy-and-lossless-compression.html" 1576489529.0 #s(elfeed-ref "0c003feec59225b15fa3f0d45f4debe7d8eebd4b") html nil (general unread) "https://thecrazyprogrammer.com/feed" (:authors ((:name "Chirag Manghnani")) :categories ("Algorithm"))) ("thecrazyprogrammer.com" . "https://www.thecrazyprogrammer.com/?p=9947") #s(elfeed-entry ("thecrazyprogrammer.com" . "https://www.thecrazyprogrammer.com/?p=9947") "JavaScript Read and Write to Text File" "https://www.thecrazyprogrammer.com/2019/12/javascript-read-and-write-to-text-file.html" 1576070528.0 #s(elfeed-ref "5b9f04596105e79b65b1851b3d3859404ed097d7") html nil (general unread) "https://thecrazyprogrammer.com/feed" (:authors ((:name "Neeraj Mishra")) :categories ("JavaScript"))) ("thecrazyprogrammer.com" . "https://www.thecrazyprogrammer.com/?p=9932") #s(elfeed-entry ("thecrazyprogrammer.com" . "https://www.thecrazyprogrammer.com/?p=9932") "Metadata in DBMS – Overview and Types" "https://www.thecrazyprogrammer.com/2019/12/metadata-in-dbms.html" 1575484606.0 #s(elfeed-ref "1a6987c7f91ee0a36cf3d0da0896c8375898e47b") html nil (general unread) "https://thecrazyprogrammer.com/feed" (:authors ((:name "Chirag Manghnani")) :categories ("SQL"))) ("hackaday.com" . "https://hackaday.com/?p=394230") #s(elfeed-entry ("hackaday.com" . "https://hackaday.com/?p=394230") "Gradient Infill Puts More Plastic Where You Want It" "https://hackaday.com/2020/01/20/gradient-infill-puts-more-plastic-where-you-want-it/" 1579575624.0 #s(elfeed-ref "af180474df7953e9a8fe70037dd313dc7bd50668") html nil (hardware make unread) "https://hackaday.com/rss" (:authors ((:name "Al Williams")) :categories ("3d Printer hacks" "3d printing" "cura" "g-code" "gcode" "infill"))) ("hackaday.com" . "https://hackaday.com/?p=394726") #s(elfeed-entry ("hackaday.com" . "https://hackaday.com/?p=394726") "Random Numbers From Outer Space" "https://hackaday.com/2020/01/20/random-numbers-from-outer-space/" 1579564821.0 #s(elfeed-ref "7ec3c28205a78d3b7e2452b878cc00aa43faa5f5") html nil (hardware make unread) "https://hackaday.com/rss" (:authors ((:name "Kristina Panos")) :categories ("classic hacks" "555" "decade counter" "Geiger tube" "muon" "nixie" "random number" "random number generator"))) ("hackaday.com" . "https://hackaday.com/?p=393790") #s(elfeed-entry ("hackaday.com" . "https://hackaday.com/?p=393790") "Electric Unicorn Is Our Kind Of Rideable" "https://hackaday.com/2020/01/20/electric-unicorn-is-our-kind-of-rideable/" 1579554005.0 #s(elfeed-ref "6c6ebe4b2ca291194f2975f7b7552750c18c5256") html nil (hardware make unread) "https://hackaday.com/rss" (:authors ((:name "Lewin Day")) :categories ("Toy Hacks" "Transportation Hacks" "hoverboard" "rideable" "unicorn"))) ("hackaday.com" . "https://hackaday.com/?p=394584") #s(elfeed-entry ("hackaday.com" . "https://hackaday.com/?p=394584") "Testing Your Grit: Tales of Hacking in Difficult Situations" "https://hackaday.com/2020/01/20/testing-your-grit-tales-of-hacking-in-difficult-situations/" 1579548696.0 #s(elfeed-ref "67ba051109a2ff73e66c2b3a12b0fd0eed79d348") html nil (hardware make unread) "https://hackaday.com/rss" (:authors ((:name "Dan Maloney")) :categories ("cons" "2019 Hackaday Superconference" "austere" "disaster" "emergency" "FIELD"))) ("hackaday.com" . "https://hackaday.com/?p=393079") #s(elfeed-entry ("hackaday.com" . "https://hackaday.com/?p=393079") "Teardown: BilBot Bluetooth Robot" "https://hackaday.com/2020/01/20/teardown-bilbot-bluetooth-robot/" 1579543231.0 #s(elfeed-ref "d88f7b7a23a4f349e178adbbdf1cdd5d160d1857") html nil (hardware make unread) "https://hackaday.com/rss" (:authors ((:name "Tom Nardi")) :categories ("Hackaday Columns" "Teardown" "Toy Hacks" "apktool" "bettercap" "ble" "bluetooth" "h-bridge motor controller" "MX1508L" "repurpose" "robotics"))) ("hackaday.com" . "https://hackaday.com/?p=394685") #s(elfeed-entry ("hackaday.com" . "https://hackaday.com/?p=394685") "Austere Engineering Hack Chat" "https://hackaday.com/2020/01/20/austere-engineering-hack-chat/" 1579539630.0 #s(elfeed-ref "1b9e26bfa1da75442f2043fda77c6a4da546be33") html nil (hardware make unread) "https://hackaday.com/rss" (:authors ((:name "Dan Maloney")) :categories ("Hackaday Columns" "austerity" "disaster" "field expedient" "flood" "hurricane" "improvisation" "The Hack Chat"))) ("hackaday.com" . "https://hackaday.com/?p=393654") #s(elfeed-entry ("hackaday.com" . "https://hackaday.com/?p=393654") "’75 Nixie Multimeter As Digital Dice" "https://hackaday.com/2020/01/20/75-nixie-multimeter-as-digital-dice/" 1579537800.0 #s(elfeed-ref "96566849a141cbf260b6a21f5c9e92997e049c7c") html nil (hardware make unread) "https://hackaday.com/rss" (:authors ((:name "Bryan Cockfield")) :categories ("Microcontrollers" "70s" "AVR" "dd" "dice" "heathkit" "microcontroller" "multimeter" "random number generator" "restomod" "rng"))) ("www.sebastiansylvan.com" . "https://www.sebastiansylvan.com/post/sudoku/") #s(elfeed-entry ("www.sebastiansylvan.com" . "https://www.sebastiansylvan.com/post/sudoku/") "A Fast Sudoku Solver" "https://www.sebastiansylvan.com/post/sudoku/" 1534475805.0 #s(elfeed-ref "62179a48d5a7c562b1f3a2d4e9f2fc9b5b4ed182") html nil (dev se unread) "https://www.sebastiansylvan.com/index.xml" nil) ("www.sebastiansylvan.com" . "https://www.sebastiansylvan.com/post/light_culling/") #s(elfeed-entry ("www.sebastiansylvan.com" . "https://www.sebastiansylvan.com/post/light_culling/") "Thoughts on light culling for clustered shading" "https://www.sebastiansylvan.com/post/light_culling/" 1512535759.0 #s(elfeed-ref "8166fa52647a1ac1bc5081efb0bf94ff0b913caa") html nil (dev se unread) "https://www.sebastiansylvan.com/index.xml" nil) ("www.sebastiansylvan.com" . "https://www.sebastiansylvan.com/post/matrix_naming_convention/") #s(elfeed-entry ("www.sebastiansylvan.com" . "https://www.sebastiansylvan.com/post/matrix_naming_convention/") "Naming Convention for Matrix Math" "https://www.sebastiansylvan.com/post/matrix_naming_convention/" 1501218112.0 #s(elfeed-ref "17d5eeb397d74b4f3252a5a5f45b0ed4582b9026") html nil (dev se unread) "https://www.sebastiansylvan.com/index.xml" nil) ("www.sebastiansylvan.com" . "https://www.sebastiansylvan.com/post/importancesampling/") #s(elfeed-entry ("www.sebastiansylvan.com" . "https://www.sebastiansylvan.com/post/importancesampling/") "Efficient Weighted Sampling" "https://www.sebastiansylvan.com/post/importancesampling/" 1485636991.0 #s(elfeed-ref "88616f42b4b8c9e3283b33187c34c9a45ebc8f2a") html nil (dev se unread) "https://www.sebastiansylvan.com/index.xml" nil) ("www.sebastiansylvan.com" . "https://www.sebastiansylvan.com/post/robustestimation/") #s(elfeed-entry ("www.sebastiansylvan.com" . "https://www.sebastiansylvan.com/post/robustestimation/") "Robust estimation" "https://www.sebastiansylvan.com/post/robustestimation/" 1470887907.0 #s(elfeed-ref "0d66cbb53d3985ee327f5f94dd0ab617221cb0c6") html nil (dev se unread) "https://www.sebastiansylvan.com/index.xml" nil) ("www.sebastiansylvan.com" . "https://www.sebastiansylvan.com/post/GCWithoutUniformRepr/") #s(elfeed-entry ("www.sebastiansylvan.com" . "https://www.sebastiansylvan.com/post/GCWithoutUniformRepr/") "Doing Garbage Collection Without Requiring Uniform Representation" "https://www.sebastiansylvan.com/post/GCWithoutUniformRepr/" 1467865979.0 #s(elfeed-ref "6a664ff3bf75ce29c9282e19065ecc0d5dbeb1bb") html nil (dev se unread) "https://www.sebastiansylvan.com/index.xml" nil) ("www.sebastiansylvan.com" . "https://www.sebastiansylvan.com/post/trackingspheres/") #s(elfeed-entry ("www.sebastiansylvan.com" . "https://www.sebastiansylvan.com/post/trackingspheres/") "Tracking spheres in images (aka Let's Build a Half-Assed Playstation Move tracker!)" "https://www.sebastiansylvan.com/post/trackingspheres/" 1463951978.0 #s(elfeed-ref "4d825ffd29593228053d394864992ff4ea715066") html nil (dev se unread) "https://www.sebastiansylvan.com/index.xml" nil) ("www.sebastiansylvan.com" . "https://www.sebastiansylvan.com/post/usingauto/") #s(elfeed-entry ("www.sebastiansylvan.com" . "https://www.sebastiansylvan.com/post/usingauto/") "On using 'auto' and 'var'" "https://www.sebastiansylvan.com/post/usingauto/" 1458259165.0 #s(elfeed-ref "f58602727d38eaa1570aced7a8110b0d8cb6f613") html nil (dev se unread) "https://www.sebastiansylvan.com/index.xml" nil) ("www.sebastiansylvan.com" . "https://www.sebastiansylvan.com/post/scalarsseintrinsics/") #s(elfeed-entry ("www.sebastiansylvan.com" . "https://www.sebastiansylvan.com/post/scalarsseintrinsics/") "Using SSE intrinsics to optimize scalar code" "https://www.sebastiansylvan.com/post/scalarsseintrinsics/" 1456252545.0 #s(elfeed-ref "a34fb1eaff63f2e962c1cf30deef6ec1cf575798") html nil (dev se unread) "https://www.sebastiansylvan.com/index.xml" nil) ("www.sebastiansylvan.com" . "https://www.sebastiansylvan.com/post/LeastSquaresTextureSeams/") #s(elfeed-entry ("www.sebastiansylvan.com" . "https://www.sebastiansylvan.com/post/LeastSquaresTextureSeams/") "Fixing Texture Seams With Linear Least-Squares" "https://www.sebastiansylvan.com/post/LeastSquaresTextureSeams/" 1447739976.0 #s(elfeed-ref "410feb076dd373f40a0f87932bcb64000c82ba41") html nil (dev se unread) "https://www.sebastiansylvan.com/index.xml" nil) ("www.sebastiansylvan.com" . "https://www.sebastiansylvan.com/post/Moving-Off-Wordpress/") #s(elfeed-entry ("www.sebastiansylvan.com" . "https://www.sebastiansylvan.com/post/Moving-Off-Wordpress/") "Moving off of WordPress!" "https://www.sebastiansylvan.com/post/Moving-Off-Wordpress/" 1446691981.0 #s(elfeed-ref "7da259cfda0629301b704adfc77d5cc54d0b57cc") html nil (dev se unread) "https://www.sebastiansylvan.com/index.xml" nil) ("www.sebastiansylvan.com" . "https://www.sebastiansylvan.com/post/brackets-are-awesome-dont-use-them/") #s(elfeed-entry ("www.sebastiansylvan.com" . "https://www.sebastiansylvan.com/post/brackets-are-awesome-dont-use-them/") "Brackets are awesome, don’t use them!" "https://www.sebastiansylvan.com/post/brackets-are-awesome-dont-use-them/" 1432185023.0 #s(elfeed-ref "370c45ec7758ade2c6ef552a01f68c2e08dfdefa") html nil (dev se unread) "https://www.sebastiansylvan.com/index.xml" nil) ("www.sebastiansylvan.com" . "https://www.sebastiansylvan.com/post/why-most-high-level-languages-are-slow/") #s(elfeed-entry ("www.sebastiansylvan.com" . "https://www.sebastiansylvan.com/post/why-most-high-level-languages-are-slow/") "Why (most) High Level Languages are Slow" "https://www.sebastiansylvan.com/post/why-most-high-level-languages-are-slow/" 1428906451.0 #s(elfeed-ref "adb0c824c6d2046e1ce30015bf6a22ad0c4cceae") html nil (dev se unread) "https://www.sebastiansylvan.com/index.xml" nil) ("www.sebastiansylvan.com" . "https://www.sebastiansylvan.com/post/variablerefresh/") #s(elfeed-entry ("www.sebastiansylvan.com" . "https://www.sebastiansylvan.com/post/variablerefresh/") "Variable Refresh Monitors and Animation" "https://www.sebastiansylvan.com/post/variablerefresh/" 1422060717.0 #s(elfeed-ref "30335f37091190958a71eb3f441b422d008de25c") html nil (dev se unread) "https://www.sebastiansylvan.com/index.xml" nil) ("www.sebastiansylvan.com" . "https://www.sebastiansylvan.com/post/2014-04-27-flags-are-a-code-smell/") #s(elfeed-entry ("www.sebastiansylvan.com" . "https://www.sebastiansylvan.com/post/2014-04-27-flags-are-a-code-smell/") "Flags are a code smell" "https://www.sebastiansylvan.com/post/2014-04-27-flags-are-a-code-smell/" 1398576129.0 #s(elfeed-ref "a10959ce4b1a906e017c0363e8d3b3089a120b82") html nil (dev se unread) "https://www.sebastiansylvan.com/index.xml" nil) ("www.sebastiansylvan.com" . "https://www.sebastiansylvan.com/post/the-perils-of-future-coding/") #s(elfeed-entry ("www.sebastiansylvan.com" . "https://www.sebastiansylvan.com/post/the-perils-of-future-coding/") "The Perils of Future-Coding" "https://www.sebastiansylvan.com/post/the-perils-of-future-coding/" 1376639258.0 #s(elfeed-ref "eebe88faf5a188c43758c93b27032a69ca625fff") html nil (dev se unread) "https://www.sebastiansylvan.com/index.xml" nil) ("www.sebastiansylvan.com" . "https://www.sebastiansylvan.com/post/more-on-robin-hood-hashing-2/") #s(elfeed-entry ("www.sebastiansylvan.com" . "https://www.sebastiansylvan.com/post/more-on-robin-hood-hashing-2/") "More on Robin Hood Hashing" "https://www.sebastiansylvan.com/post/more-on-robin-hood-hashing-2/" 1375680865.0 #s(elfeed-ref "38db41fcc3b7a18c41421f07a408fc17d8aaff21") html nil (dev se unread) "https://www.sebastiansylvan.com/index.xml" nil) ("www.sebastiansylvan.com" . "https://www.sebastiansylvan.com/post/language-design-deal-breakers/") #s(elfeed-entry ("www.sebastiansylvan.com" . "https://www.sebastiansylvan.com/post/language-design-deal-breakers/") "Language Design Deal Breakers" "https://www.sebastiansylvan.com/post/language-design-deal-breakers/" 1369510644.0 #s(elfeed-ref "e39e93064be76ca260b7e009ee9277d393991b39") html nil (dev se unread) "https://www.sebastiansylvan.com/index.xml" nil) ("www.sebastiansylvan.com" . "https://www.sebastiansylvan.com/post/robin-hood-hashing-should-be-your-default-hash-table-implementation/") #s(elfeed-entry ("www.sebastiansylvan.com" . "https://www.sebastiansylvan.com/post/robin-hood-hashing-should-be-your-default-hash-table-implementation/") "Robin Hood Hashing should be your default Hash Table implementation" "https://www.sebastiansylvan.com/post/robin-hood-hashing-should-be-your-default-hash-table-implementation/" 1367981083.0 #s(elfeed-ref "2ae76f2028ab0895bcbeee58921dd9ee4f734383") html nil (dev se unread) "https://www.sebastiansylvan.com/index.xml" nil) ("www.sebastiansylvan.com" . "https://www.sebastiansylvan.com/post/thoughts-on-game-data-formats/") #s(elfeed-entry ("www.sebastiansylvan.com" . "https://www.sebastiansylvan.com/post/thoughts-on-game-data-formats/") "Thoughts on Game Data Formats" "https://www.sebastiansylvan.com/post/thoughts-on-game-data-formats/" 1367630347.0 #s(elfeed-ref "cab9c3d352a1c50d004d67ba568dda86bf157d87") html nil (dev se unread) "https://www.sebastiansylvan.com/index.xml" nil) ("www.sebastiansylvan.com" . "https://www.sebastiansylvan.com/post/on-gc-in-games-response-to-jeff-and-casey/") #s(elfeed-entry ("www.sebastiansylvan.com" . "https://www.sebastiansylvan.com/post/on-gc-in-games-response-to-jeff-and-casey/") "On GC in Games (response to Jeff and Casey)" "https://www.sebastiansylvan.com/post/on-gc-in-games-response-to-jeff-and-casey/" 1366320987.0 #s(elfeed-ref "dc94603614e4a9b48dba9112bd86bd68f3a22a9f") html nil (dev se unread) "https://www.sebastiansylvan.com/index.xml" nil) ("www.sebastiansylvan.com" . "https://www.sebastiansylvan.com/post/runtime-code-specialization/") #s(elfeed-entry ("www.sebastiansylvan.com" . "https://www.sebastiansylvan.com/post/runtime-code-specialization/") "Runtime Code Specialization" "https://www.sebastiansylvan.com/post/runtime-code-specialization/" 1361511534.0 #s(elfeed-ref "d0d735bb2891a211192602a5e430ccde6c40d2a6") html nil (dev se unread) "https://www.sebastiansylvan.com/index.xml" nil) ("www.sebastiansylvan.com" . "https://www.sebastiansylvan.com/post/space-efficient-rresizable-arrays/") #s(elfeed-entry ("www.sebastiansylvan.com" . "https://www.sebastiansylvan.com/post/space-efficient-rresizable-arrays/") "Space-efficient Resizable Arrays" "https://www.sebastiansylvan.com/post/space-efficient-rresizable-arrays/" 1355878645.0 #s(elfeed-ref "79ddf2256466b8ea6460d9c574a75f2f56c02eed") html nil (dev se unread) "https://www.sebastiansylvan.com/index.xml" nil) ("www.sebastiansylvan.com" . "https://www.sebastiansylvan.com/post/garbage-collection-thoughts/") #s(elfeed-entry ("www.sebastiansylvan.com" . "https://www.sebastiansylvan.com/post/garbage-collection-thoughts/") "Garbage collection thoughts" "https://www.sebastiansylvan.com/post/garbage-collection-thoughts/" 1354391869.0 #s(elfeed-ref "84b06a6a681c449678d345fe5b3c407a50da4cee") html nil (dev se unread) "https://www.sebastiansylvan.com/index.xml" nil) ("www.sebastiansylvan.com" . "https://www.sebastiansylvan.com/post/onlive-and-cloud-gaming/") #s(elfeed-entry ("www.sebastiansylvan.com" . "https://www.sebastiansylvan.com/post/onlive-and-cloud-gaming/") "OnLive and cloud gaming" "https://www.sebastiansylvan.com/post/onlive-and-cloud-gaming/" 1345402058.0 #s(elfeed-ref "7c6262f1cfeb15cf21dde593466635912509b2c4") html nil (dev se unread) "https://www.sebastiansylvan.com/index.xml" nil) ("www.sebastiansylvan.com" . "https://www.sebastiansylvan.com/post/casting-a-critical-eye-on-gpu-ptex/") #s(elfeed-entry ("www.sebastiansylvan.com" . "https://www.sebastiansylvan.com/post/casting-a-critical-eye-on-gpu-ptex/") "Casting a Critical Eye on GPU PTex" "https://www.sebastiansylvan.com/post/casting-a-critical-eye-on-gpu-ptex/" 1340420204.0 #s(elfeed-ref "c916f158f6e0ab9f66938d38e1a32da4cdbfd381") html nil (dev se unread) "https://www.sebastiansylvan.com/index.xml" nil) ("www.sebastiansylvan.com" . "https://www.sebastiansylvan.com/post/idea-for-efficient-ao-type-raytracing-applications/") #s(elfeed-entry ("www.sebastiansylvan.com" . "https://www.sebastiansylvan.com/post/idea-for-efficient-ao-type-raytracing-applications/") "Idea for efficient AO type raytracing applications" "https://www.sebastiansylvan.com/post/idea-for-efficient-ao-type-raytracing-applications/" 1313124021.0 #s(elfeed-ref "8b4ba87c34e6a93052d6e9d42cb3afffe7c4465b") html nil (dev se unread) "https://www.sebastiansylvan.com/index.xml" nil) ("www.sebastiansylvan.com" . "https://www.sebastiansylvan.com/post/implementation-inheritance-considered-harmful/") #s(elfeed-entry ("www.sebastiansylvan.com" . "https://www.sebastiansylvan.com/post/implementation-inheritance-considered-harmful/") "Implementation Inheritance Considered Harmful?" "https://www.sebastiansylvan.com/post/implementation-inheritance-considered-harmful/" 1291402791.0 #s(elfeed-ref "24a1926ddee779ade5aad92291aa3f22aa83f6cc") html nil (dev se unread) "https://www.sebastiansylvan.com/index.xml" nil) ("www.sebastiansylvan.com" . "https://www.sebastiansylvan.com/post/the-inevitability-of-video-game-piracy/") #s(elfeed-entry ("www.sebastiansylvan.com" . "https://www.sebastiansylvan.com/post/the-inevitability-of-video-game-piracy/") "The \"inevitability\" of video game piracy" "https://www.sebastiansylvan.com/post/the-inevitability-of-video-game-piracy/" 1287229436.0 #s(elfeed-ref "0142cd435ebc6336bac608c45c1deef6584004c5") html nil (dev se unread) "https://www.sebastiansylvan.com/index.xml" nil) ("www.sebastiansylvan.com" . "https://www.sebastiansylvan.com/post/idea-for-globally-unique-texturing-without-uv-sets/") #s(elfeed-entry ("www.sebastiansylvan.com" . "https://www.sebastiansylvan.com/post/idea-for-globally-unique-texturing-without-uv-sets/") "Idea for globally unique texturing without UV sets" "https://www.sebastiansylvan.com/post/idea-for-globally-unique-texturing-without-uv-sets/" 1282765711.0 #s(elfeed-ref "1ff05d74fe4cc5e4869eaa4db5053fb120708eb8") html nil (dev se unread) "https://www.sebastiansylvan.com/index.xml" nil) ("www.sebastiansylvan.com" . "https://www.sebastiansylvan.com/post/how-to-teach-game-programming/") #s(elfeed-entry ("www.sebastiansylvan.com" . "https://www.sebastiansylvan.com/post/how-to-teach-game-programming/") "How to teach Game Programming" "https://www.sebastiansylvan.com/post/how-to-teach-game-programming/" 1282465851.0 #s(elfeed-ref "c7d637e70444ee1f676875e59fd7d191ff285ff4") html nil (dev se unread) "https://www.sebastiansylvan.com/index.xml" nil) ("www.sebastiansylvan.com" . "https://www.sebastiansylvan.com/post/r-trees--adapting-out-of-core-techniques-to-modern-memory-architectures/") #s(elfeed-entry ("www.sebastiansylvan.com" . "https://www.sebastiansylvan.com/post/r-trees--adapting-out-of-core-techniques-to-modern-memory-architectures/") "R-trees – adapting out-of-core techniques to modern memory architectures" "https://www.sebastiansylvan.com/post/r-trees--adapting-out-of-core-techniques-to-modern-memory-architectures/" 1278854280.0 #s(elfeed-ref "ff639e5dd822d878e7ac6a08da29ac9ec8d2ea70") html nil (dev se unread) "https://www.sebastiansylvan.com/index.xml" nil) ("www.sebastiansylvan.com" . "https://www.sebastiansylvan.com/post/improving-shadow-map-utilization-for-cascaded-shadow-maps/") #s(elfeed-entry ("www.sebastiansylvan.com" . "https://www.sebastiansylvan.com/post/improving-shadow-map-utilization-for-cascaded-shadow-maps/") "Improving shadow map utilization for cascaded shadow maps" "https://www.sebastiansylvan.com/post/improving-shadow-map-utilization-for-cascaded-shadow-maps/" 1272137204.0 #s(elfeed-ref "5e3cdf03cf5dbf4cbc9645a9eec0578361eab1d9") html nil (dev se unread) "https://www.sebastiansylvan.com/index.xml" nil) ("www.sebastiansylvan.com" . "https://www.sebastiansylvan.com/post/the-problem-with-tessellation-in-directx-11/") #s(elfeed-entry ("www.sebastiansylvan.com" . "https://www.sebastiansylvan.com/post/the-problem-with-tessellation-in-directx-11/") "The problem with tessellation in DirectX 11" "https://www.sebastiansylvan.com/post/the-problem-with-tessellation-in-directx-11/" 1271615564.0 #s(elfeed-ref "5483594d0a5c13c59ccd92a2f3c5735d5454c74e") html nil (dev se unread) "https://www.sebastiansylvan.com/index.xml" nil) ("www.sebastiansylvan.com" . "https://www.sebastiansylvan.com/post/two-performance-walls-approaching/") #s(elfeed-entry ("www.sebastiansylvan.com" . "https://www.sebastiansylvan.com/post/two-performance-walls-approaching/") "Two Performance Walls Approaching" "https://www.sebastiansylvan.com/post/two-performance-walls-approaching/" 1258858952.0 #s(elfeed-ref "53db7fad0d4b5eb516364e24c79e9a464aeb7bb8") html nil (dev se unread) "https://www.sebastiansylvan.com/index.xml" nil) ("www.sebastiansylvan.com" . "https://www.sebastiansylvan.com/post/ray-tracing-signed-distance-functions/") #s(elfeed-entry ("www.sebastiansylvan.com" . "https://www.sebastiansylvan.com/post/ray-tracing-signed-distance-functions/") "Ray tracing signed distance functions" "https://www.sebastiansylvan.com/post/ray-tracing-signed-distance-functions/" 1246748959.0 #s(elfeed-ref "42dd5f673ff66c614a4aeb5788e43d558a8609f3") html nil (dev se unread) "https://www.sebastiansylvan.com/index.xml" nil) ("www.sebastiansylvan.com" . "https://www.sebastiansylvan.com/post/why-sales-of-used-games-are-a-problem/") #s(elfeed-entry ("www.sebastiansylvan.com" . "https://www.sebastiansylvan.com/post/why-sales-of-used-games-are-a-problem/") "Why sales of used games are a problem" "https://www.sebastiansylvan.com/post/why-sales-of-used-games-are-a-problem/" 1246483243.0 #s(elfeed-ref "c545ce474e9069e9493042fd9c74f2604437f3da") html nil (dev se unread) "https://www.sebastiansylvan.com/index.xml" nil) ("www.sebastiansylvan.com" . "https://www.sebastiansylvan.com/post/2009-06-27-the-prosecutors-fallacy-and-the-iranian-elections/") #s(elfeed-entry ("www.sebastiansylvan.com" . "https://www.sebastiansylvan.com/post/2009-06-27-the-prosecutors-fallacy-and-the-iranian-elections/") "The prosecutor's fallacy and the Iranian elections" "https://www.sebastiansylvan.com/post/2009-06-27-the-prosecutors-fallacy-and-the-iranian-elections/" 1246126920.0 #s(elfeed-ref "727682434a9c4d446f1b2d70136af2c1a55aa50c") html nil (dev se unread) "https://www.sebastiansylvan.com/index.xml" nil) ("www.sebastiansylvan.com" . "https://www.sebastiansylvan.com/post/the-prosecutor%e2%80%99s-fallacy-and-the-iranian-elections/") #s(elfeed-entry ("www.sebastiansylvan.com" . "https://www.sebastiansylvan.com/post/the-prosecutor%e2%80%99s-fallacy-and-the-iranian-elections/") "The prosecutor’s fallacy and the Iranian elections" "https://www.sebastiansylvan.com/post/the-prosecutor%e2%80%99s-fallacy-and-the-iranian-elections/" 1246126920.0 #s(elfeed-ref "727682434a9c4d446f1b2d70136af2c1a55aa50c") html nil (dev se unread) "https://www.sebastiansylvan.com/index.xml" nil) ("www.sebastiansylvan.com" . "https://www.sebastiansylvan.com/about/") #s(elfeed-entry ("www.sebastiansylvan.com" . "https://www.sebastiansylvan.com/about/") "About" "https://www.sebastiansylvan.com/about/" 978307200.0 #s(elfeed-ref "8d9761c0feda34f19126a141b3768e50329a85d6") html nil (dev se unread) "https://www.sebastiansylvan.com/index.xml" nil))) :index #s(avl-tree- [[[[[[[[[[[[nil nil ("hackaday.com" . "https://hackaday.com/?p=394230") 0] [nil nil ("hackaday.com" . "https://hackaday.com/?p=393790") 0] ("hackaday.com" . "https://hackaday.com/?p=394726") 0] [nil nil ("hackaday.com" . "https://hackaday.com/?p=393079") 0] ("hackaday.com" . "https://hackaday.com/?p=394584") -1] [[[nil nil ("hackaday.com" . "https://hackaday.com/?p=393654") 0] nil ("mwl.io" . "https://mwl.io/?p=5327") -1] [[nil nil ("www.gregcons.com" . "http://www.gregcons.com/KateBlog/PermaLink.aspx?guid=d52b489d-f022-498f-a790-23314fbf7648") 0] [nil nil ("feeds.feedburner.com" . "5e23331833ff8500440fb9c7") 0] ("fabiensanglard.net" . "http://fabiensanglard.net/another_world_polygons_SNES/index.html") 0] ("blog.acolyer.org" . "http://blog.acolyer.org/?p=9489") 0] ("hackaday.com" . "https://hackaday.com/?p=394685") 0] [[[nil nil ("feeds.feedburner.com" . "tag:blogger.com,1999:blog-8520.post-2229218346688974820") 0] [nil nil ("thecrazyprogrammer.com" . "https://www.thecrazyprogrammer.com/?p=10001") 0] ("blogs.msdn.microsoft.com" . "http://devblogs.microsoft.com/oldnewthing/?p=103338") 0] [[nil nil ("feeds.feedburner.com" . "tag:words.steveklabnik.com,2014:Post/a-sad-day-for-rust") 0] [[nil nil ("drewdevault.com" . "https://drewdevault.com//2020/01/17/Effective-project-governance.html") 0] nil ("blogs.msdn.microsoft.com" . "http://devblogs.microsoft.com/oldnewthing/?p=103333") -1] ("blog.acolyer.org" . "http://blog.acolyer.org/?p=9480") 1] ("smalldatum.blogspot.com" . "tag:blogger.com,1999:blog-9149523927864751087.post-8226621479780219987") 1] ("blog.jessfraz.com" . "https://blog.jessfraz.com/post/network-booted-home-initialized/") 0] [[[nil nil ("smalldatum.blogspot.com" . "tag:blogger.com,1999:blog-9149523927864751087.post-2913039739111080353") 0] [nil [nil nil ("mwl.io" . "https://mwl.io/?p=5274") 0] ("blogs.msdn.microsoft.com" . "http://devblogs.microsoft.com/oldnewthing/?p=103329") 1] ("www.archlinux.org" . "tag:www.archlinux.org,2020-01-15:/news/rsync-compatibility/") 1] [[[nil nil ("drewdevault.com" . "https://drewdevault.com//2020/01/15/Status-update.html") 0] nil ("mwl.io" . "https://mwl.io/?p=5258") -1] [[nil nil ("blogs.msdn.microsoft.com" . "http://devblogs.microsoft.com/oldnewthing/?p=103322") 0] [[nil nil ("thecrazyprogrammer.com" . "https://www.thecrazyprogrammer.com/?p=9996") 0] nil ("blog.acolyer.org" . "http://blog.acolyer.org/?p=9478") -1] ("feeds.feedburner.com" . "5e15687d472cad0038a71a93") 1] ("blogs.msdn.microsoft.com" . "http://devblogs.microsoft.com/oldnewthing/?p=103327") 1] ("blog.acolyer.org" . "http://blog.acolyer.org/?p=9479") 1] ("smalldatum.blogspot.com" . "tag:blogger.com,1999:blog-9149523927864751087.post-2217684663514007630") 0] [[[[[nil nil ("blogs.msdn.microsoft.com" . "http://devblogs.microsoft.com/oldnewthing/?p=103316") 0] [nil nil ("thecrazyprogrammer.com" . "https://www.thecrazyprogrammer.com/?p=9993") 0] ("feeds.feedburner.com" . "5e18407d472cad0038a71b58") 0] [nil [nil nil ("blogs.msdn.microsoft.com" . "http://devblogs.microsoft.com/oldnewthing/?p=103309") 0] ("blog.acolyer.org" . "http://blog.acolyer.org/?p=9462") 1] ("www.freebsd.org" . "https://www.FreeBSD.org/news/newsflash.html#event20200110:01") 0] [[nil nil ("blogs.msdn.microsoft.com" . "http://devblogs.microsoft.com/oldnewthing/?p=103307") 0] [[nil nil ("blog.acolyer.org" . "http://blog.acolyer.org/?p=9460") 0] [nil nil ("blogs.msdn.microsoft.com" . "http://devblogs.microsoft.com/oldnewthing/?p=103304") 0] ("drewdevault.com" . "https://drewdevault.com//2020/01/08/Re-Slow.html") 0] ("feeds.feedburner.com" . "5e146db1472cad0038a7170d") 1] ("www.gregcons.com" . "http://www.gregcons.com/KateBlog/PermaLink.aspx?guid=36437e5e-52fa-4b00-9400-6218e508bdee") 0] [[[nil nil ("feeds.feedburner.com" . "tag:blogger.com,1999:blog-8520.post-6686093829514667862") 0] nil ("smalldatum.blogspot.com" . "tag:blogger.com,1999:blog-9149523927864751087.post-6550452315916667947") -1] [[nil nil ("mwl.io" . "https://mwl.io/?p=5164") 0] [nil nil ("blog.acolyer.org" . "http://blog.acolyer.org/?p=9458") 0] ("blogs.msdn.microsoft.com" . "http://devblogs.microsoft.com/oldnewthing/?p=103300") 0] ("eli.thegreenplace.net" . "tag:eli.thegreenplace.net,2020-01-07:/2020/pubsub-using-channels-in-go/") 0] ("www.bunniestudios.com" . "https://www.bunniestudios.com/blog/?p=5701") -1] ("smalldatum.blogspot.com" . "tag:blogger.com,1999:blog-9149523927864751087.post-6522189698665436169") -1] [[[[[[[nil nil ("www.archlinux.org" . "tag:www.archlinux.org,2020-01-04:/news/now-using-zstandard-instead-of-xz-for-package-compression/") 0] [nil nil ("drewdevault.com" . "https://drewdevault.com//2020/01/04/Slow.html") 0] ("fabiensanglard.net" . "http://fabiensanglard.net/another_world_polygons_PC_DOS/index.html") 0] [nil nil ("feeds.feedburner.com" . "5dfdc780472cad0038a7107c") 0] ("feeds.feedburner.com" . "5e0e25e2472cad0038a71592") -1] [[nil nil ("blog.rust-lang.org" . "https://blog.rust-lang.org/2020/01/03/reducing-support-for-32-bit-apple-targets.html") 0] [nil nil ("eli.thegreenplace.net" . "tag:eli.thegreenplace.net,2020-01-02:/2020/my-reading-habits/") 0] ("www.freebsd.org" . "https://www.FreeBSD.org/news/newsflash.html#event20200102:01") 0] ("fabiensanglard.net" . "http://fabiensanglard.net/another_world_polygons_atariST/index.html") -1] [[nil [nil nil ("lucumr.pocoo.org" . "http://lucumr.pocoo.org/2020/1/1/async-pressure") 0] ("smalldatum.blogspot.com" . "tag:blogger.com,1999:blog-9149523927864751087.post-7210599475371652283") 1] [[[nil nil ("thecrazyprogrammer.com" . "https://www.thecrazyprogrammer.com/?p=9983") 0] nil ("eli.thegreenplace.net" . "tag:eli.thegreenplace.net,2019-12-31:/2019/summary-of-reading-october-december-2019/") -1] [nil nil ("drewdevault.com" . "https://drewdevault.com//2019/12/30/dotfiles.html") 0] ("easyperf.net" . "https://easyperf.net/blog/2019/12/30/Comparing-performance-measurements") -1] ("fabiensanglard.net" . "http://fabiensanglard.net/another_world_polygons/index.html") 1] ("fabiensanglard.net" . "http://fabiensanglard.net/another_world_polygons_amiga500/index.html") 0] [[[nil [nil nil ("feeds.feedburner.com" . "5e075624472cad0038a7140d") 0] ("nullprogram.com" . "urn:uuid:721eda6d-a78a-41e1-9d78-db3666208a71") 1] [nil [nil nil ("thecrazyprogrammer.com" . "https://www.thecrazyprogrammer.com/?p=9970") 0] ("www.bunniestudios.com" . "https://www.bunniestudios.com/blog/?p=5706") 1] ("lucumr.pocoo.org" . "http://lucumr.pocoo.org/2019/12/28/open-source-migrates") 0] [[[nil nil ("www.bunniestudios.com" . "https://www.bunniestudios.com/blog/?p=5740") 0] [nil nil ("thecrazyprogrammer.com" . "https://www.thecrazyprogrammer.com/?p=9975") 0] ("feeds.feedburner.com" . "5e007785472cad0038a7113f") 0] [[[nil nil ("smalldatum.blogspot.com" . "tag:blogger.com,1999:blog-9149523927864751087.post-123066219805220001") 0] [nil nil ("bg.battletech.com" . "http://bg.battletech.com/?p=8270") 0] ("thecrazyprogrammer.com" . "https://www.thecrazyprogrammer.com/?p=9953") 0] [nil nil ("feeds.feedburner.com" . "tag:blogger.com,1999:blog-8520.post-8572381617015506818") 0] ("www.archlinux.org" . "tag:www.archlinux.org,2019-12-20:/news/xorg-cleanup-requires-manual-intervention/") -1] ("feeds.feedburner.com" . "5dfe2b83472cad0038a710fa") 1] ("www.bunniestudios.com" . "https://www.bunniestudios.com/blog/?p=5742") 1] ("nullprogram.com" . "urn:uuid:50300bbe-0939-4bcf-96ff-8fb96a9b12d5") 0] [[[[[nil nil ("blog.rust-lang.org" . "https://blog.rust-lang.org/2019/12/19/Rust-1.40.0.html") 0] [nil nil ("easyperf.net" . "https://easyperf.net/blog/2019/12/17/Detecting-false-sharing-using-perf") 0] ("drewdevault.com" . "https://drewdevault.com//2019/12/18/PinePhone-review.html") 0] [[[nil nil ("thecrazyprogrammer.com" . "https://www.thecrazyprogrammer.com/?p=9941") 0] [nil nil ("tim.mcnamara.nz" . "https://tim.mcnamara.nz/post/189698803212") 0] ("www.bunniestudios.com" . "https://www.bunniestudios.com/blog/?p=5689") 0] [[nil nil ("drewdevault.com" . "https://drewdevault.com//2019/12/15/Status-update.html") 0] [nil nil ("blog.acolyer.org" . "http://blog.acolyer.org/?p=9423") 0] ("feeds.feedburner.com" . "5df31ec00d6b2500388602f6") 0] ("blog.acolyer.org" . "http://blog.acolyer.org/?p=9427") 0] ("feeds.feedburner.com" . "5df0b7840d6b25003886027f") 1] [[[[nil nil ("mwl.io" . "https://mwl.io/?p=4928") 0] [nil nil ("blog.acolyer.org" . "http://blog.acolyer.org/?p=9417") 0] ("thecrazyprogrammer.com" . "https://www.thecrazyprogrammer.com/?p=9947") 0] [[nil nil ("smalldatum.blogspot.com" . "tag:blogger.com,1999:blog-9149523927864751087.post-3179085560140269720") 0] [nil nil ("smalldatum.blogspot.com" . "tag:blogger.com,1999:blog-9149523927864751087.post-6446876198638646964") 0] ("smalldatum.blogspot.com" . "tag:blogger.com,1999:blog-9149523927864751087.post-8077130179238626143") 0] ("feeds.feedburner.com" . "5deecf880d6b25003886000b") 0] [[nil nil ("smalldatum.blogspot.com" . "tag:blogger.com,1999:blog-9149523927864751087.post-879217958277500675") 0] [nil nil ("smalldatum.blogspot.com" . "tag:blogger.com,1999:blog-9149523927864751087.post-3758412576689349780") 0] ("smalldatum.blogspot.com" . "tag:blogger.com,1999:blog-9149523927864751087.post-3823848129207732098") 0] ("smalldatum.blogspot.com" . "tag:blogger.com,1999:blog-9149523927864751087.post-5557877034999655592") -1] ("easyperf.net" . "https://easyperf.net/blog/2019/12/13/How-sports-help-me-to-recharge") 0] [[[[nil nil ("smalldatum.blogspot.com" . "tag:blogger.com,1999:blog-9149523927864751087.post-241244452092425680") 0] [nil nil ("smalldatum.blogspot.com" . "tag:blogger.com,1999:blog-9149523927864751087.post-6820995205187575652") 0] ("smalldatum.blogspot.com" . "tag:blogger.com,1999:blog-9149523927864751087.post-5866390458397926847") 0] [[nil nil ("smalldatum.blogspot.com" . "tag:blogger.com,1999:blog-9149523927864751087.post-7099564692228495050") 0] [nil nil ("smalldatum.blogspot.com" . "tag:blogger.com,1999:blog-9149523927864751087.post-9164200877902060759") 0] ("smalldatum.blogspot.com" . "tag:blogger.com,1999:blog-9149523927864751087.post-7612074760889558705") 0] ("smalldatum.blogspot.com" . "tag:blogger.com,1999:blog-9149523927864751087.post-395187278455512430") 0] [[[[nil nil ("nullprogram.com" . "urn:uuid:15421609-2681-4b75-99b2-b2d6aaa835fe") 0] nil ("nullprogram.com" . "urn:uuid:961086fa-46af-42d4-bd69-6f4a326a1505") -1] [nil [nil nil ("drewdevault.com" . "https://drewdevault.com//2019/12/09/Developers-shouldnt-distribute.html") 0] ("feeds.feedburner.com" . "5ded82ac0d6b25003885ffd3") 1] ("smalldatum.blogspot.com" . "tag:blogger.com,1999:blog-9149523927864751087.post-5272935559778661672") 0] [[[nil nil ("idea.popcount.org" . "https://idea.popcount.org/2019-12-06-addressing") 0] [nil nil ("feeds.feedburner.com" . "tag:blogger.com,1999:blog-8520.post-7158064099987968072") 0] ("thecrazyprogrammer.com" . "https://www.thecrazyprogrammer.com/?p=9932") 0] [nil [nil nil ("feeds.feedburner.com" . "tag:blogger.com,1999:blog-8520.post-3982597027158551843") 0] ("blog.rust-lang.org" . "https://blog.rust-lang.org/2019/12/03/survey-launch.html") 1] ("fabiensanglard.net" . "http://fabiensanglard.net/sc_podcast/index.html") 0] ("kennykerr.ca" . "http://kennykerr.ca/?p=959") 0] ("smalldatum.blogspot.com" . "tag:blogger.com,1999:blog-9149523927864751087.post-3872994483923927806") 1] ("smalldatum.blogspot.com" . "tag:blogger.com,1999:blog-9149523927864751087.post-8276213081744752234") 0] ("smalldatum.blogspot.com" . "tag:blogger.com,1999:blog-9149523927864751087.post-6260446849337317597") 0] ("fabiensanglard.net" . "http://fabiensanglard.net/another_world_polygons_Genesis/index.html") 0] [[[[[[[nil [nil nil ("drewdevault.com" . "https://drewdevault.com//2019/11/29/dotorg.html") 0] ("feeds.feedburner.com" . "5de3828e538b5c0044f314a1") 1] [nil nil ("feeds.feedburner.com" . "5dbcc202dac39a0038f37a14") 0] ("www.gregcons.com" . "http://www.gregcons.com/KateBlog/PermaLink.aspx?guid=4ad70427-2c2d-4290-89f4-2a0ea2e87111") -1] [[nil nil ("drewdevault.com" . "https://drewdevault.com//2019/11/26/Avoid-traumatic-changes.html") 0] [nil nil ("www.archlinux.org" . "tag:www.archlinux.org,2019-11-25:/news/primus_vk13-1-update-requires-manual-intervention/") 0] ("kennykerr.ca" . "http://kennykerr.ca/?p=944") 0] ("easyperf.net" . "https://easyperf.net/blog/2019/11/27/data-driven-tuning-specialize-indirect-call") -1] [[[nil nil ("eli.thegreenplace.net" . "tag:eli.thegreenplace.net,2019-11-23:/2019/beating-c-with-400-lines-of-unoptimized-assembly/") 0] [nil nil ("bg.battletech.com" . "http://bg.battletech.com/?p=8241") 0] ("easyperf.net" . "https://easyperf.net/blog/2019/11/22/data-driven-tuning-specialize-switch") 0] [[nil nil ("kennykerr.ca" . "http://kennykerr.ca/?p=920") 0] [nil nil ("feeds.feedburner.com" . "tag:blogger.com,1999:blog-8520.post-3547365549105510316") 0] ("feeds.feedburner.com" . "tag:blogger.com,1999:blog-8520.post-3319552266672129851") 0] ("nullprogram.com" . "urn:uuid:13e56720-ef3a-4fa4-a4ff-0a6fef914504") 0] ("www.freebsd.org" . "https://www.FreeBSD.org/news/newsflash.html#event20191125:01") -1] [[[[nil nil ("bg.battletech.com" . "http://bg.battletech.com/?p=8235") 0] [nil nil ("www.archlinux.org" . "tag:www.archlinux.org,2019-11-10:/news/new-kernel-packages-and-mkinitcpio-hooks/") 0] ("feeds.feedburner.com" . "tag:blogger.com,1999:blog-8520.post-8902279872127503977") 0] [nil nil ("blog.cleancoder.com" . "http://blog.cleancoder.com/uncle-bob/2019/11/08/OpenLetterLinuxFoundation") 0] ("programmingisterrible.com" . "https://programmingisterrible.com/post/188942142748") -1] [[[nil nil ("blog.rust-lang.org" . "https://blog.rust-lang.org/2019/11/07/Async-await-stable.html") 0] [nil nil ("idea.popcount.org" . "https://idea.popcount.org/2019-11-06-creating-sockets") 0] ("eli.thegreenplace.net" . "tag:eli.thegreenplace.net,2019-11-06:/2019/how-to-send-good-pull-requests-on-github/") 0] [nil [nil nil ("lucumr.pocoo.org" . "http://lucumr.pocoo.org/2019/11/4/open-source-and-saas") 0] ("www.freebsd.org" . "https://www.FreeBSD.org/news/newsflash.html#event20191104:01") 1] ("kennykerr.ca" . "http://kennykerr.ca/?p=913") 0] ("blog.rust-lang.org" . "https://blog.rust-lang.org/2019/11/07/Rust-1.39.0.html") 0] ("nullprogram.com" . "urn:uuid:7266b2ea-f39e-4b9a-87c8-e4480374af41") -1] [[[[nil nil ("tim.mcnamara.nz" . "https://tim.mcnamara.nz/post/188733729327") 0] [nil [nil nil ("bg.battletech.com" . "http://bg.battletech.com/?p=8228") 0] ("feeds.feedburner.com" . "tag:blogger.com,1999:blog-8520.post-3020233577200615459") 1] ("blog.rust-lang.org" . "https://blog.rust-lang.org/2019/11/01/nll-hard-errors.html") 1] [[[nil nil ("mwl.io" . "https://mwl.io/?p=4772") 0] nil ("feeds.feedburner.com" . "tag:blogger.com,1999:blog-8520.post-3140451627024098055") -1] [[nil nil ("mwl.io" . "https://mwl.io/?p=4759") 0] nil ("nullprogram.com" . "urn:uuid:ce906d6f-b228-4dc6-bd02-34b845d3c5e2") -1] ("blog.rust-lang.org" . "https://blog.rust-lang.org/2019/10/29/A-call-for-blogs-2020.html") 0] ("blog.cleancoder.com" . "http://blog.cleancoder.com/uncle-bob/2019/10/31/Circulatory") 0] [[[nil nil ("nullprogram.com" . "urn:uuid:acf6af69-f18c-49a6-b3ae-a23ae537da6d") 0] [nil nil ("www.archlinux.org" . "tag:www.archlinux.org,2019-10-25:/news/clarification-regarding-recent-email-activity-on-the-arch-announce-list/") 0] ("250bpm.com" . "http://250bpm.com/blog:157") 0] [[[nil nil ("feeds.feedburner.com" . "tag:words.steveklabnik.com,2014:Post/c-is-not-how-the-computer-works-can-lead-to-inefficient-code") 0] [nil nil ("eli.thegreenplace.net" . "tag:eli.thegreenplace.net,2019-10-21:/2019/diffie-hellman-key-exchange/") 0] ("feeds.feedburner.com" . "tag:blogger.com,1999:blog-8520.post-901870891261608318") 0] [[nil nil ("www.archlinux.org" . "tag:www.archlinux.org,2019-10-16:/news/required-update-to-recent-libarchive/") 0] [nil nil ("blog.rust-lang.org" . "https://blog.rust-lang.org/2019/10/15/Rustup-1.20.0.html") 0] ("unixism.net" . "https://unixism.net/?p=378") 0] ("www.freebsd.org" . "https://www.FreeBSD.org/news/newsflash.html#event20191018:01") 0] ("tim.mcnamara.nz" . "https://tim.mcnamara.nz/post/188579994977") 1] ("fabiensanglard.net" . "http://fabiensanglard.net/nbajamte/index.html") 0] ("blog.cleancoder.com" . "http://blog.cleancoder.com/uncle-bob/2019/11/03/WhatTheyThoughtOfUs") -1] [[[[[nil nil ("www.freebsd.org" . "https://www.FreeBSD.org/news/newsflash.html#event20191011:02") 0] nil ("www.freebsd.org" . "https://www.FreeBSD.org/news/newsflash.html#event20191011:01") -1] [[nil [nil nil ("mwl.io" . "https://mwl.io/?p=4557") 0] ("unixism.net" . "https://unixism.net/?p=354") 1] [[nil nil ("mwl.io" . "https://mwl.io/?p=4671") 0] nil ("easyperf.net" . "https://easyperf.net/blog/2019/10/05/Performance-Analysis-Of-MT-apps") -1] ("www.archlinux.org" . "tag:www.archlinux.org,2019-10-06:/news/base-group-replaced-by-mandatory-base-package-manual-intervention-required/") 0] ("kennykerr.ca" . "http://kennykerr.ca/?p=908") 1] [[[nil nil ("blog.rust-lang.org" . "https://blog.rust-lang.org/2019/10/03/inside-rust-blog.html") 0] [nil nil ("feeds.feedburner.com" . "tag:blogger.com,1999:blog-8520.post-8141835333411392599") 0] ("eli.thegreenplace.net" . "tag:eli.thegreenplace.net,2019-10-01:/2019/simple-go-project-layout-with-modules/") 0] [[nil nil ("blog.rust-lang.org" . "https://blog.rust-lang.org/2019/09/30/Security-advisory-for-cargo.html") 0] [nil nil ("www.freebsd.org" . "https://www.FreeBSD.org/news/newsflash.html#event20190928:01") 0] ("idea.popcount.org" . "https://idea.popcount.org/2019-09-30-tcp-puzzles-1-2") 0] ("eli.thegreenplace.net" . "tag:eli.thegreenplace.net,2019-09-30:/2019/summary-of-reading-july-september-2019/") 0] ("www.freebsd.org" . "https://www.FreeBSD.org/news/newsflash.html#event20191004:01") -1] [[[nil [nil nil ("feeds.feedburner.com" . "tag:words.steveklabnik.com,2014:Post/porting-steveklabnik-com-to-workers-sites-and-zola") 0] ("feeds.feedburner.com" . "tag:blogger.com,1999:blog-8520.post-3192920820041855868") 1] [nil [nil nil ("feeds.feedburner.com" . "tag:blogger.com,1999:blog-8520.post-6874436449023685386") 0] ("feeds.feedburner.com" . "tag:blogger.com,1999:blog-8520.post-6227041716604156040") 1] ("www.freebsd.org" . "https://www.FreeBSD.org/news/newsflash.html#event20190926:01") 0] [[nil [nil nil ("idea.popcount.org" . "https://idea.popcount.org/2019-09-20-when-tcp-sockets-refuse-to-die") 0] ("hynek.me" . "https://hynek.me/articles/books-that-changed-my-life/") 1] [[nil nil ("bg.battletech.com" . "http://bg.battletech.com/?p=8199") 0] [nil nil ("mwl.io" . "https://mwl.io/?p=4569") 0] ("easyperf.net" . "https://easyperf.net/blog/2019/09/13/Intel-PT-part4") 0] ("eli.thegreenplace.net" . "tag:eli.thegreenplace.net,2019-09-16:/2019/go-internals-capturing-loop-variables-in-closures/") 0] ("250bpm.com" . "http://250bpm.com/blog:155") 0] ("250bpm.com" . "http://250bpm.com/blog:156") -1] ("easyperf.net" . "https://easyperf.net/blog/2019/10/12/MT-Perf-Analysis-part2") -1] ("blog.jessfraz.com" . "https://blog.jessfraz.com/post/born-in-a-garage/") 0] [[[[[[[nil nil ("easyperf.net" . "https://easyperf.net/blog/2019/09/06/Intel-PT-part3") 0] [nil nil ("eli.thegreenplace.net" . "tag:eli.thegreenplace.net,2019-09-03:/2019/rsa-theory-and-implementation/") 0] ("joeduffyblog.com" . "http://joeduffyblog.com/2019/09/05/journey-to-pulumi-1-0/") 0] [[nil nil ("unixism.net" . "https://unixism.net/?p=308") 0] [nil nil ("feeds.feedburner.com" . "tag:blogger.com,1999:blog-8520.post-4610446765525112516") 0] ("habitatchronicles.com" . "http://habitatchronicles.com/?p=511") 0] ("easyperf.net" . "https://easyperf.net/blog/2019/08/30/Intel-PT-part2") 0] [[[nil nil ("bg.battletech.com" . "http://bg.battletech.com/?p=8182") 0] [nil nil ("www.archlinux.org" . "tag:www.archlinux.org,2019-08-26:/news/astyle31-2-update-requires-manual-intervention/") 0] ("feeds.feedburner.com" . "tag:blogger.com,1999:blog-8520.post-5336974345699327947") 0] [[nil nil ("www.archlinux.org" . "tag:www.archlinux.org,2019-08-20:/news/tensorflow1140-5-update-requires-manual-intervention/") 0] nil ("feeds.feedburner.com" . "tag:blogger.com,1999:blog-8520.post-5882246688697377044") -1] ("blog.cleancoder.com" . "http://blog.cleancoder.com/uncle-bob/2019/08/22/WhyClojure") 0] ("eli.thegreenplace.net" . "tag:eli.thegreenplace.net,2019-08-28:/2019/the-chinese-remainder-theorem/") 0] [[[[nil nil ("bg.battletech.com" . "http://bg.battletech.com/?p=8178") 0] [nil nil ("unixism.net" . "https://unixism.net/?p=295") 0] ("bg.battletech.com" . "http://bg.battletech.com/?p=8174") 0] [[nil nil ("feeds.feedburner.com" . "tag:blogger.com,1999:blog-8520.post-4621905600709948175") 0] [nil nil ("www.gregcons.com" . "http://www.gregcons.com/KateBlog/PermaLink.aspx?guid=27832300-fca9-47a9-9e12-db72a33062ea") 0] ("lucumr.pocoo.org" . "http://lucumr.pocoo.org/2019/7/29/dependency-scaling") 0] ("eli.thegreenplace.net" . "tag:eli.thegreenplace.net,2019-08-03:/2019/aes-encryption-of-files-in-go/") 0] [[[nil nil ("eli.thegreenplace.net" . "tag:eli.thegreenplace.net,2019-07-22:/2019/faster-xml-stream-processing-in-go/") 0] nil ("blog.cleancoder.com" . "http://blog.cleancoder.com/uncle-bob/2019/07/22/WhyWontIt") -1] [[[nil nil ("bg.battletech.com" . "http://bg.battletech.com/?p=8164") 0] nil ("kennykerr.ca" . "http://kennykerr.ca/?p=903") -1] [[nil nil ("www.gregcons.com" . "http://www.gregcons.com/KateBlog/PermaLink.aspx?guid=d257b09e-847b-4bc8-bfdc-1e59dfeb7e30") 0] [nil nil ("bg.battletech.com" . "http://bg.battletech.com/?p=8154") 0] ("feeds.feedburner.com" . "tag:blogger.com,1999:blog-8520.post-6074168904828755246") 0] ("eli.thegreenplace.net" . "tag:eli.thegreenplace.net,2019-07-15:/2019/passing-callbacks-and-pointers-to-cgo/") 0] ("www.gregcons.com" . "http://www.gregcons.com/KateBlog/PermaLink.aspx?guid=d189f5d7-48c3-435f-ac7c-f7a56819fa7c") 1] ("blog.jessfraz.com" . "https://blog.jessfraz.com/post/the-business-executives-guide-to-kubernetes/") 1] ("blog.jessfraz.com" . "https://blog.jessfraz.com/post/transactional-memory-and-tech-hype-waves/") 1] [[[[[[nil nil ("idea.popcount.org" . "https://idea.popcount.org/2019-07-10-a-gentle-introduction-to-linux-kernel-fuzzing") 0] nil ("feeds.feedburner.com" . "tag:blogger.com,1999:blog-8520.post-5009252771627820904") -1] [nil nil ("eli.thegreenplace.net" . "tag:eli.thegreenplace.net,2019-07-03:/2019/go-compiler-internals-adding-a-new-statement-to-go-part-1/") 0] ("eli.thegreenplace.net" . "tag:eli.thegreenplace.net,2019-07-04:/2019/go-compiler-internals-adding-a-new-statement-to-go-part-2/") -1] [nil [nil nil ("eli.thegreenplace.net" . "tag:eli.thegreenplace.net,2019-06-29:/2019/summary-of-reading-april-june-2019/") 0] ("kennykerr.ca" . "http://kennykerr.ca/?p=899") 1] ("kennykerr.ca" . "http://kennykerr.ca/?p=901") -1] [[nil [nil nil ("feeds.feedburner.com" . "tag:blogger.com,1999:blog-8520.post-5850145450258307998") 0] ("kennykerr.ca" . "http://kennykerr.ca/?p=895") 1] [[nil nil ("feeds.feedburner.com" . "tag:blogger.com,1999:blog-8520.post-4241697215788925619") 0] nil ("kennykerr.ca" . "http://kennykerr.ca/?p=889") -1] ("blog.cleancoder.com" . "http://blog.cleancoder.com/uncle-bob/2019/06/16/ObjectsAndDataStructures") 0] ("www.gregcons.com" . "http://www.gregcons.com/KateBlog/PermaLink.aspx?guid=5cc89a5d-703a-4f83-ab0b-ecc13419d4ad") -1] [[[nil nil ("feeds.feedburner.com" . "tag:blogger.com,1999:blog-8520.post-2098597540963845979") 0] [nil nil ("hynek.me" . "https://hynek.me/articles/simple-python-azure-pipelines/") 0] ("feeds.feedburner.com" . "tag:blogger.com,1999:blog-8520.post-7160843106892467380") 0] [[nil [nil nil ("idea.popcount.org" . "https://idea.popcount.org/2019-05-18-cloudflare-architecture-and-how-bpf-eats-the-world") 0] ("blog.cleancoder.com" . "http://blog.cleancoder.com/uncle-bob/2019/05/18/737-Max-8") 1] [[nil nil ("hynek.me" . "https://hynek.me/articles/hallway-track/") 0] nil ("blog.jessfraz.com" . "https://blog.jessfraz.com/post/corollary-to-the-hard-thing-about-hard-things/") -1] ("fabiensanglard.net" . "http://fabiensanglard.net/gebb/index.html") 0] ("eli.thegreenplace.net" . "tag:eli.thegreenplace.net,2019-05-31:/2019/geoip-service-as-a-cloud-function/") 1] ("blog.cleancoder.com" . "http://blog.cleancoder.com/uncle-bob/2019/06/08/TestsAndTypes") -1] ("blog.jessfraz.com" . "https://blog.jessfraz.com/post/linux-observability-with-bpf/") 0] [[[[[[[nil nil ("blog.jessfraz.com" . "https://blog.jessfraz.com/post/why-open-source-firmware-is-important-for-security/") 0] [nil [nil nil ("vorpus.org" . "tag:vorpus.org,2019-05-04:/blog/why-im-not-collaborating-with-kenneth-reitz/") 0] ("www.gregcons.com" . "http://www.gregcons.com/KateBlog/PermaLink.aspx?guid=99f1609a-cab5-47d5-8000-2ca90a64f24a") 1] ("eli.thegreenplace.net" . "tag:eli.thegreenplace.net,2019-05-07:/2019/to-orm-or-not-to-orm/") 1] [[nil nil ("habitatchronicles.com" . "http://habitatchronicles.com/?p=505") 0] nil ("unixism.net" . "http://unixism.net/?p=183") -1] ("hynek.me" . "https://hynek.me/talks/python-foss/") -1] [[nil nil ("unixism.net" . "http://unixism.net/?p=169") 0] [nil [nil nil ("unixism.net" . "http://unixism.net/?p=47") 0] ("unixism.net" . "http://unixism.net/?p=158") 1] ("unixism.net" . "http://unixism.net/?p=172") 1] ("unixism.net" . "http://unixism.net/?p=166") -1] [[[nil nil ("eli.thegreenplace.net" . "tag:eli.thegreenplace.net,2019-04-25:/2019/implementing-reader-writer-locks/") 0] nil ("blog.jessfraz.com" . "https://blog.jessfraz.com/post/challenge-accepted-transposit/") -1] [[nil nil ("blog.jessfraz.com" . "https://blog.jessfraz.com/post/questions-id-ask-my-cloud-provider/") 0] [[nil nil ("eli.thegreenplace.net" . "tag:eli.thegreenplace.net,2019-04-09:/2019/sql-inner-and-outer-joins/") 0] [nil nil ("feeds.feedburner.com" . "tag:words.steveklabnik.com,2014:Post/i-m-joining-cloudflare") 0] ("blog.jessfraz.com" . "https://blog.jessfraz.com/post/the-truth-seekers/") 0] ("blog.jessfraz.com" . "https://blog.jessfraz.com/post/leadership-ci/") 1] ("250bpm.com" . "http://250bpm.com/blog:152") 1] ("250bpm.com" . "http://250bpm.com/blog:153") -1] [[[nil [nil nil ("feeds.feedburner.com" . "tag:words.steveklabnik.com,2014:Post/what-comes-after-open-source") 0] ("www.gregcons.com" . "http://www.gregcons.com/KateBlog/PermaLink.aspx?guid=7ac88a36-3abf-4128-b2dd-163b3c79703a") 1] [[nil nil ("eli.thegreenplace.net" . "tag:eli.thegreenplace.net,2019-03-30:/2019/summary-of-reading-january-march-2019/") 0] [[nil nil ("eli.thegreenplace.net" . "tag:eli.thegreenplace.net,2019-03-27:/2019/design-patterns-in-gos-databasesql-package/") 0] [nil nil ("feeds.feedburner.com" . "tag:words.steveklabnik.com,2014:Post/the-culture-war-at-the-heart-of-open-source") 0] ("feeds.feedburner.com" . "tag:words.steveklabnik.com,2014:Post/learning-ada") 0] ("feeds.feedburner.com" . "tag:words.steveklabnik.com,2014:Post/rust-has-finally-outgrown-me") 1] ("fabiensanglard.net" . "http://fabiensanglard.net/vquake/index.html") 1] [[[nil nil ("blog.jessfraz.com" . "https://blog.jessfraz.com/post/digging-into-risc-v-and-how-i-learn-new-things/") 0] [nil nil ("blog.jessfraz.com" . "https://blog.jessfraz.com/post/defining-a-distinguished-engineer/") 0] ("250bpm.com" . "http://250bpm.com/blog:151") 0] [[nil nil ("blog.jessfraz.com" . "https://blog.jessfraz.com/post/enigma-unikernels-risc-v-oh-my/") 0] [nil nil ("idea.popcount.org" . "https://idea.popcount.org/2019-03-15-rfc8482---saying-goodbye-to-dns-any") 0] ("neopythonic.blogspot.com" . "tag:blogger.com,1999:blog-4195135246107166251.post-775339472173253922") 0] ("eli.thegreenplace.net" . "tag:eli.thegreenplace.net,2019-03-19:/2019/does-a-concrete-type-implement-an-interface-in-go/") 0] ("blog.jessfraz.com" . "https://blog.jessfraz.com/post/thoughts-on-conways-law-and-the-software-stack/") -1] ("fabiensanglard.net" . "http://fabiensanglard.net/3dfx_sst1/index.html") -1] [[[[[nil nil ("habitatchronicles.com" . "http://habitatchronicles.com/?p=501") 0] [nil nil ("250bpm.com" . "http://250bpm.com/blog:149") 0] ("eli.thegreenplace.net" . "tag:eli.thegreenplace.net,2019-03-05:/2019/github-webhook-payload-as-a-cloud-function/") 0] [[nil nil ("blog.jessfraz.com" . "https://blog.jessfraz.com/post/government-medicine-capitalism/") 0] [nil nil ("blog.jessfraz.com" . "https://blog.jessfraz.com/post/books/") 0] ("250bpm.com" . "http://250bpm.com/blog:148") 0] ("blog.jessfraz.com" . "https://blog.jessfraz.com/post/trust-and-integrity/") 0] [[[nil nil ("www.gregcons.com" . "http://www.gregcons.com/KateBlog/PermaLink.aspx?guid=fbefbaee-e214-4a48-991d-7f9e089cc6ad") 0] nil ("250bpm.com" . "http://250bpm.com/blog:147") -1] [[nil nil ("idea.popcount.org" . "https://idea.popcount.org/2019-02-18-sockmap---tcp-splicing-of-the-future") 0] nil ("blog.jessfraz.com" . "https://blog.jessfraz.com/post/ld_preload/") -1] ("blog.jessfraz.com" . "https://blog.jessfraz.com/post/reflections-on-sgx/") 0] ("blog.jessfraz.com" . "https://blog.jessfraz.com/post/pharmy-tales/") 0] [[[[nil nil ("blog.jessfraz.com" . "https://blog.jessfraz.com/post/new-golden-age-of-building-with-soul/") 0] [[nil nil ("blog.jessfraz.com" . "https://blog.jessfraz.com/post/secret-design-docs-multi-tenant-orchestrator/") 0] [nil nil ("feeds.feedburner.com" . "tag:words.steveklabnik.com,2014:Post/what-s-next-for-semver") 0] ("eli.thegreenplace.net" . "tag:eli.thegreenplace.net,2019-02-12:/2019/unix-domain-sockets-in-go/") 0] ("blog.jessfraz.com" . "https://blog.jessfraz.com/post/the-firmware-rabbit-hole/") 1] [[[nil nil ("eli.thegreenplace.net" . "tag:eli.thegreenplace.net,2019-02-04:/2019/go-json-cookbook/") 0] nil ("ferrisellis.com" . "https://ferrisellis.com/content/well_find_a_better_future_in_2119_not_2019/") -1] [nil nil ("250bpm.com" . "http://250bpm.com/blog:144") 0] ("ferrisellis.com" . "https://ferrisellis.com/content/a_life_of_dreams/") -1] ("250bpm.com" . "http://250bpm.com/blog:145") 0] [[[nil nil ("eli.thegreenplace.net" . "tag:eli.thegreenplace.net,2019-01-17:/2019/on-concurrency-in-go-http-servers/") 0] [nil nil ("eli.thegreenplace.net" . "tag:eli.thegreenplace.net,2019-01-09:/2019/summary-of-reading-october-december-2018/") 0] ("blog.jessfraz.com" . "https://blog.jessfraz.com/post/the-life-of-a-github-action/") 0] [[[nil nil ("feeds.feedburner.com" . "tag:words.steveklabnik.com,2014:Post/thank-u-next") 0] [nil nil ("250bpm.com" . "http://250bpm.com/blog:143") 0] ("idea.popcount.org" . "https://idea.popcount.org/2019-01-04-io_submit---the-epoll-alternative") 0] [nil nil ("eli.thegreenplace.net" . "tag:eli.thegreenplace.net,2018-12-24:/2018/beware-of-copying-mutexes-in-go/") 0] ("fabiensanglard.net" . "http://fabiensanglard.net/doom_fire_psx/") -1] ("programmingisterrible.com" . "https://programmingisterrible.com/post/181841346708") 1] ("blog.jessfraz.com" . "https://blog.jessfraz.com/post/for-the-love-of-pipes/") 0] ("250bpm.com" . "http://250bpm.com/blog:146") 1] ("250bpm.com" . "http://250bpm.com/blog:150") -1] ("250bpm.com" . "http://250bpm.com/blog:154") 1] ("blog.jessfraz.com" . "https://blog.jessfraz.com/post/tales-from-firmware-camp/") 0] [[[[[[[[[nil nil ("fabiensanglard.net" . "http://fabiensanglard.net/postcard_pathtracer/") 0] [nil nil ("blog.cleancoder.com" . "http://blog.cleancoder.com/uncle-bob/2018/12/17/FPvsOO-List-processing") 0] ("250bpm.com" . "http://250bpm.com/blog:141") 0] [[nil nil ("blog.cleancoder.com" . "http://blog.cleancoder.com/uncle-bob/2018/12/14/SJWJS") 0] [nil nil ("fabiensanglard.net" . "http://fabiensanglard.net/gebbdoom/") 0] ("fabiensanglard.net" . "http://fabiensanglard.net/dreamcast_hacking/") 0] ("blog.cleancoder.com" . "http://blog.cleancoder.com/uncle-bob/2018/12/16/unoffended") 0] [[nil nil ("eli.thegreenplace.net" . "tag:eli.thegreenplace.net,2018-12-05:/2018/type-erasure-and-reification/") 0] [nil [nil nil ("idea.popcount.org" . "https://idea.popcount.org/2018-11-23-every-78us-your-memory-has-a-hiccup") 0] ("neopythonic.blogspot.com" . "tag:blogger.com,1999:blog-4195135246107166251.post-2471146972433715807") 1] ("hynek.me" . "https://hynek.me/articles/python-app-deps-2018/") 1] ("fabiensanglard.net" . "http://fabiensanglard.net/gebbwolf3d/") 0] [[[[[nil nil ("eli.thegreenplace.net" . "tag:eli.thegreenplace.net,2018-11-14:/2018/type-inference/") 0] [nil nil ("idea.popcount.org" . "https://idea.popcount.org/2018-11-12-the-rise-of-multivector-attacks") 0] ("eli.thegreenplace.net" . "tag:eli.thegreenplace.net,2018-11-12:/2018/unification/") 0] [nil nil ("250bpm.com" . "http://250bpm.com/blog:139") 0] ("blog.jessfraz.com" . "https://blog.jessfraz.com/post/you-might-not-need-k8s/") -1] [[nil nil ("eli.thegreenplace.net" . "tag:eli.thegreenplace.net,2018-10-17:/2018/covariance-and-contravariance-in-subtyping/") 0] [nil [nil nil ("eli.thegreenplace.net" . "tag:eli.thegreenplace.net,2018-09-30:/2018/summary-of-reading-july-september-2018/") 0] ("eli.thegreenplace.net" . "tag:eli.thegreenplace.net,2018-10-01:/2018/partial-and-total-orders/") 1] ("eli.thegreenplace.net" . "tag:eli.thegreenplace.net,2018-10-04:/2018/go-hits-the-concurrency-nail-right-on-the-head/") 1] ("250bpm.com" . "http://250bpm.com/blog:138") 0] [[[[nil nil ("fabiensanglard.net" . "http://fabiensanglard.net/bloated/") 0] nil ("eli.thegreenplace.net" . "tag:eli.thegreenplace.net,2018-09-13:/2018/go-and-algebraic-data-types/") -1] [[nil nil ("idea.popcount.org" . "https://idea.popcount.org/2018-09-10-why-we-are-bumping-the-ipv6-mtu") 0] [nil nil ("tim.mcnamara.nz" . "https://tim.mcnamara.nz/post/177648171567") 0] ("eli.thegreenplace.net" . "tag:eli.thegreenplace.net,2018-09-04:/2018/measuring-context-switching-and-memory-overheads-for-linux-threads/") 0] ("vorpus.org" . "tag:vorpus.org,2018-09-10:/blog/beautiful-tracebacks-in-trio-v070/") 0] [[nil nil ("blog.cleancoder.com" . "http://blog.cleancoder.com/uncle-bob/2018/08/28/CraftsmanshipMovement") 0] [nil nil ("www.sebastiansylvan.com" . "https://www.sebastiansylvan.com/post/sudoku/") 0] ("tim.mcnamara.nz" . "https://tim.mcnamara.nz/post/177172657187") 0] ("tim.mcnamara.nz" . "https://tim.mcnamara.nz/post/177562206357") -1] ("tim.mcnamara.nz" . "https://tim.mcnamara.nz/post/178475377027") 0] ("250bpm.com" . "http://250bpm.com/blog:140") 1] [[[[nil [nil nil ("eli.thegreenplace.net" . "tag:eli.thegreenplace.net,2018-08-08:/2018/on-the-uses-and-misuses-of-panics-in-go/") 0] ("tim.mcnamara.nz" . "https://tim.mcnamara.nz/post/176906903912") 1] [nil [nil nil ("eli.thegreenplace.net" . "tag:eli.thegreenplace.net,2018-08-01:/2018/launching-linux-threads-and-processes-with-clone/") 0] ("tim.mcnamara.nz" . "https://tim.mcnamara.nz/post/176613460297") 1] ("programmingisterrible.com" . "https://programmingisterrible.com/post/176657481103") 0] [[[[nil nil ("eli.thegreenplace.net" . "tag:eli.thegreenplace.net,2018-07-13:/2018/basics-of-futexes/") 0] [nil nil ("idea.popcount.org" . "https://idea.popcount.org/2018-07-06-how-to-drop-10-million-packets") 0] ("lucumr.pocoo.org" . "http://lucumr.pocoo.org/2018/7/13/python") 0] [nil [nil nil ("eli.thegreenplace.net" . "tag:eli.thegreenplace.net,2018-06-28:/2018/slow-and-fast-methods-for-generating-random-integers-in-python/") 0] ("eli.thegreenplace.net" . "tag:eli.thegreenplace.net,2018-06-30:/2018/summary-of-reading-april-june-2018/") 1] ("eli.thegreenplace.net" . "tag:eli.thegreenplace.net,2018-07-05:/2018/elegant-python-code-for-a-markov-chain-text-generator/") 0] [[nil nil ("blog.cleancoder.com" . "http://blog.cleancoder.com/uncle-bob/2018/06/21/IntegersAndEstimates") 0] [nil nil ("ferrisellis.com" . "https://ferrisellis.com/content/local_excellence/") 0] ("joeduffyblog.com" . "http://joeduffyblog.com/2018/06/18/hello-pulumi/") 0] ("toorcamp.toorcon.net" . "http://toorcamp.toorcon.net/?p=900") -1] ("joeduffyblog.com" . "http://joeduffyblog.com/2018/07/25/program-the-cloud-with-12-pulumi-pearls/") 1] [[[nil [nil nil ("toorcamp.toorcon.net" . "http://toorcamp.toorcon.net/?p=857") 0] ("toorcamp.toorcon.net" . "http://toorcamp.toorcon.net/?p=876") 1] [[nil nil ("eli.thegreenplace.net" . "tag:eli.thegreenplace.net,2018-06-07:/2018/minimal-character-based-lstm-implementation/") 0] [nil nil ("idea.popcount.org" . "https://idea.popcount.org/2018-06-01-today-we-mitigated-the-resolver") 0] ("blog.cleancoder.com" . "http://blog.cleancoder.com/uncle-bob/2018/06/06/PickledState") 0] ("blog.jessfraz.com" . "https://blog.jessfraz.com/post/talks/") 0] [[[nil nil ("ferrisellis.com" . "https://ferrisellis.com/content/other_days/") 0] [nil nil ("eli.thegreenplace.net" . "tag:eli.thegreenplace.net,2018-05-25:/2018/understanding-how-to-implement-a-character-based-rnn-language-model/") 0] ("ferrisellis.com" . "https://ferrisellis.com/content/canopy/") 0] [[nil nil ("vorpus.org" . "tag:vorpus.org,2018-05-25:/blog/a-farewell-to-the-berkeley-institute-for-data-science/") 0] nil ("eli.thegreenplace.net" . "tag:eli.thegreenplace.net,2018-05-22:/2018/backpropagation-through-a-fully-connected-layer/") -1] ("vorpus.org" . "tag:vorpus.org,2018-05-25:/blog/the-unreasonable-effectiveness-of-investment-in-open-source-infrastructure/") 0] ("toorcamp.toorcon.net" . "http://toorcamp.toorcon.net/?p=839") 0] ("blog.jessfraz.com" . "https://blog.jessfraz.com/post/installing-and-using-wireguard/") -1] ("blog.cleancoder.com" . "http://blog.cleancoder.com/uncle-bob/2018/08/13/TooClean") 0] [[[[[nil nil ("blog.jessfraz.com" . "https://blog.jessfraz.com/post/hard-multi-tenancy-in-kubernetes/") 0] nil ("ferrisellis.com" . "https://ferrisellis.com/content/noise/") -1] [[nil [nil nil ("vorpus.org" . "tag:vorpus.org,2018-05-11:/blog/companion-post-for-my-pycon-2018-talk-on-async-concurrency-using-trio/") 0] ("hynek.me" . "https://hynek.me/talks/deploy-friendly/") 1] [[nil nil ("blog.cleancoder.com" . "http://blog.cleancoder.com/uncle-bob/2018/05/02/Craftsman-Craftswoman-Craftsperson") 0] [nil nil ("idea.popcount.org" . "https://idea.popcount.org/2018-04-17-mmproxy---creative-linux-routing-hack") 0] ("vorpus.org" . "tag:vorpus.org,2018-04-25:/blog/notes-on-structured-concurrency-or-go-statement-considered-harmful/") 0] ("eli.thegreenplace.net" . "tag:eli.thegreenplace.net,2018-05-08:/2018/concurrent-servers-part-6-callbacks-promises-and-asyncawait/") 0] ("programmingisterrible.com" . "https://programmingisterrible.com/post/173883533613") 1] [[[[nil nil ("idea.popcount.org" . "https://idea.popcount.org/2018-04-12-using-tproxy-for-spectrum-product") 0] [nil nil ("toorcamp.toorcon.net" . "http://toorcamp.toorcon.net/?p=810") 0] ("eli.thegreenplace.net" . "tag:eli.thegreenplace.net,2018-04-04:/2018/depthwise-separable-convolutions-for-machine-learning/") 0] [[nil nil ("lucumr.pocoo.org" . "http://lucumr.pocoo.org/2018/3/31/you-cant-rust-that") 0] [nil nil ("idea.popcount.org" . "https://idea.popcount.org/2018-03-29-sockets-hop-distance-and-writing-ebpf-assembly") 0] ("blog.cleancoder.com" . "http://blog.cleancoder.com/uncle-bob/2018/03/29/WeProgrammers") 0] ("blog.cleancoder.com" . "http://blog.cleancoder.com/uncle-bob/2018/04/02/InTheLarge") 0] [[[[nil nil ("idea.popcount.org" . "https://idea.popcount.org/2018-03-06-the-real-cause-of-large-ddos---ip-spoofing") 0] [nil nil ("idea.popcount.org" . "https://idea.popcount.org/2018-02-27-memcrashed---amplification-attacks-from-11211udp") 0] ("blog.jessfraz.com" . "https://blog.jessfraz.com/post/nerd-sniped-by-binfmt_misc/") 0] [nil nil ("toorcamp.toorcon.net" . "http://toorcamp.toorcon.net/?p=791") 0] ("blog.cleancoder.com" . "http://blog.cleancoder.com/uncle-bob/2018/02/25/UncleBobFlyIn") -1] [[nil [nil nil ("idea.popcount.org" . "https://idea.popcount.org/2018-01-15-syn-packet-handling") 0] ("idea.popcount.org" . "https://idea.popcount.org/2018-01-26-ip-spoofing-at-packet-hacking-village") 1] [nil [nil nil ("idea.popcount.org" . "https://idea.popcount.org/2017-12-22-5-talks-in-5-weeks") 0] ("habitatchronicles.com" . "http://habitatchronicles.com/?p=493") 1] ("vorpus.org" . "tag:vorpus.org,2018-01-11:/blog/timeouts-and-cancellation-for-humans/") 0] ("ferrisellis.com" . "https://ferrisellis.com/content/lifecycle_versioning_v1_alpha/") 0] ("blog.jessfraz.com" . "https://blog.jessfraz.com/post/building-container-images-securely-on-kubernetes/") 1] ("blog.cleancoder.com" . "http://blog.cleancoder.com/uncle-bob/2018/04/13/FPvsOO") 1] [[[[[nil nil ("ferrisellis.com" . "https://ferrisellis.com/content/look_inward/") 0] [nil nil ("programmingisterrible.com" . "https://programmingisterrible.com/post/168165747673") 0] ("www.sebastiansylvan.com" . "https://www.sebastiansylvan.com/post/light_culling/") 0] [nil [nil nil ("habitatchronicles.com" . "http://habitatchronicles.com/?p=486") 0] ("bitbashing.io" . "/concurrency-primer.html") 1] ("blog.jessfraz.com" . "https://blog.jessfraz.com/post/home-lab-is-the-dopest-lab/") 0] [[[nil nil ("idea.popcount.org" . "https://idea.popcount.org/2017-11-06-perfect-locality-and-three-systemtap-scripts") 0] [nil nil ("bitbashing.io" . "/tex.html") 0] ("idea.popcount.org" . "https://idea.popcount.org/2017-10-24-the-sad-state-of-linux-socket-blancing") 0] [[[nil nil ("idea.popcount.org" . "https://idea.popcount.org/2017-09-25-meet-gatebot---a-bot-that-allows-us-to-sleep") 0] nil ("bitbashing.io" . "/std-visit.html") -1] [nil nil ("fabiensanglard.net" . "http://fabiensanglard.net/Game_Engine_Black_Book_Release/index.php") 0] ("blog.jessfraz.com" . "https://blog.jessfraz.com/post/windows-for-linux-nerds/") -1] ("ferrisellis.com" . "https://ferrisellis.com/content/unums_strange_loop_2017/") 1] ("hynek.me" . "https://hynek.me/articles/hashes-and-equality/") 1] [[[[nil nil ("idea.popcount.org" . "https://idea.popcount.org/2017-08-18-ip-fragmentation-is-fundamentally-broken") 0] [nil [nil nil ("www.sebastiansylvan.com" . "https://www.sebastiansylvan.com/post/matrix_naming_convention/") 0] ("fabiensanglard.net" . "http://fabiensanglard.net/Game_Engine_Black_Book_Release_Date/index.php") 1] ("bitbashing.io" . "/now-with-ssl.html") 1] [[nil nil ("idea.popcount.org" . "https://idea.popcount.org/2017-06-29-ssdp-attack-crossing-100gbps") 0] [nil nil ("hynek.me" . "https://hynek.me/articles/docker-signals/") 0] ("programmingisterrible.com" . "https://programmingisterrible.com/post/162346490883") 0] ("blog.jessfraz.com" . "https://blog.jessfraz.com/post/a-rant-on-usable-security/") -1] [[[nil nil ("joeduffyblog.com" . "http://joeduffyblog.com/2017/06/01/an-update-on-me-pulumi/") 0] [nil nil ("idea.popcount.org" . "https://idea.popcount.org/2017-05-25-reflections-on-reflection-attacks") 0] ("hynek.me" . "https://hynek.me/articles/speaking/") 0] [[nil nil ("hynek.me" . "https://hynek.me/talks/reliability/") 0] [[nil nil ("habitatchronicles.com" . "http://habitatchronicles.com/?p=475") 0] nil ("ferrisellis.com" . "https://ferrisellis.com/content/ebpf_past_present_future/") -1] ("ferrisellis.com" . "https://ferrisellis.com/content/ebpf_syscall_and_maps/") 1] ("ferrisellis.com" . "https://ferrisellis.com/content/project_lead_thoughts/") 1] ("lucumr.pocoo.org" . "http://lucumr.pocoo.org/2017/6/5/diversity-in-technology") 0] ("fabiensanglard.net" . "http://fabiensanglard.net/fizzlefade/index.php") 0] ("blog.jessfraz.com" . "https://blog.jessfraz.com/post/personal-infrastructure/") 0] ("blog.jessfraz.com" . "https://blog.jessfraz.com/post/containers-security-and-echo-chambers/") 0] [[[[[[[nil nil ("vorpus.org" . "tag:vorpus.org,2017-04-19:/blog/control-c-handling-in-python-and-trio/") 0] nil ("bitbashing.io" . "/comparing-floats.html") -1] [[nil [nil nil ("idea.popcount.org" . "https://idea.popcount.org/2017-03-20-epoll-is-fundamentally-broken-22") 0] ("idea.popcount.org" . "https://idea.popcount.org/2017-03-28-sandboxing-landscape") 1] [nil [nil nil ("idea.popcount.org" . "https://idea.popcount.org/2017-02-23-socket-api-thoughts") 0] ("ferrisellis.com" . "https://ferrisellis.com/content/rust-implementing-units-for-types/") 1] ("vorpus.org" . "tag:vorpus.org,2017-03-10:/blog/announcing-trio/") 0] ("blog.jessfraz.com" . "https://blog.jessfraz.com/post/containers-zones-jails-vms/") 1] [[[nil nil ("idea.popcount.org" . "https://idea.popcount.org/2017-02-20-epoll-is-fundamentally-broken-12") 0] [nil nil ("www.sebastiansylvan.com" . "https://www.sebastiansylvan.com/post/importancesampling/") 0] ("habitatchronicles.com" . "http://habitatchronicles.com/?p=467") 0] [[nil nil ("tim.mcnamara.nz" . "https://tim.mcnamara.nz/post/176613232677") 0] [[nil nil ("idea.popcount.org" . "https://idea.popcount.org/2017-01-06-select-is-fundamentally-broken") 0] nil ("lucumr.pocoo.org" . "http://lucumr.pocoo.org/2016/12/29/careful-with-str-format") -1] ("tim.mcnamara.nz" . "https://tim.mcnamara.nz/post/176613307022") 1] ("blog.jessfraz.com" . "https://blog.jessfraz.com/post/ultimate-linux-on-the-desktop/") 1] ("bitbashing.io" . "/embedded-cpp.html") 0] [[[[nil [nil nil ("idea.popcount.org" . "https://idea.popcount.org/2016-12-05-tld-glue-sticks-around-too-long") 0] ("vorpus.org" . "tag:vorpus.org,2016-12-05:/blog/why-does-calloc-exist/") 1] [[nil nil ("vorpus.org" . "tag:vorpus.org,2016-11-05:/blog/some-thoughts-on-asynchronous-api-design-in-a-post-asyncawait-world/") 0] [nil nil ("idea.popcount.org" . "https://idea.popcount.org/2016-11-01-a-brief-history-of-select2") 0] ("lucumr.pocoo.org" . "http://lucumr.pocoo.org/2016/11/5/be-careful-about-what-you-dislike") 0] ("joeduffyblog.com" . "http://joeduffyblog.com/2016/11/30/15-years-of-concurrency/") 0] [[[nil nil ("vorpus.org" . "tag:vorpus.org,2016-10-24:/blog/emerging-from-the-underworld/") 0] [nil nil ("tim.mcnamara.nz" . "https://tim.mcnamara.nz/post/176613027917") 0] ("vorpus.org" . "tag:vorpus.org,2016-10-22:/blog/stochastic-descent/") 0] [[nil nil ("idea.popcount.org" . "https://idea.popcount.org/2016-10-12-say-cheese-ddos-from-iot-devices") 0] [nil nil ("idea.popcount.org" . "https://idea.popcount.org/2016-09-20-strange-loop---ip-spoofing") 0] ("blog.jessfraz.com" . "https://blog.jessfraz.com/post/scripting-your-way-outta-hell/") 0] ("habitatchronicles.com" . "http://habitatchronicles.com/?p=452") 0] ("lucumr.pocoo.org" . "http://lucumr.pocoo.org/2016/10/30/i-dont-understand-asyncio") 0] [[[nil [nil nil ("hynek.me" . "https://hynek.me/articles/serialization/") 0] ("programmingisterrible.com" . "https://programmingisterrible.com/post/150486782003") 1] [[nil nil ("blog.jessfraz.com" . "https://blog.jessfraz.com/post/the-day-i-leave-the-tech-industry/") 0] [nil nil ("www.sebastiansylvan.com" . "https://www.sebastiansylvan.com/post/robustestimation/") 0] ("idea.popcount.org" . "https://idea.popcount.org/2016-08-12-this-is-strictly-a-violation-of-the-tcp-specification") 0] ("programmingisterrible.com" . "https://programmingisterrible.com/post/149316275123") 0] [[nil nil ("blog.jessfraz.com" . "https://blog.jessfraz.com/post/spontaneous-combustion/") 0] [nil nil ("neopythonic.blogspot.com" . "tag:blogger.com,1999:blog-4195135246107166251.post-2468107226962512288") 0] ("hynek.me" . "https://hynek.me/articles/decorators/") 0] ("blog.jessfraz.com" . "https://blog.jessfraz.com/post/analyzing-github-pull-request-data-with-big-query/") -1] ("blog.jessfraz.com" . "https://blog.jessfraz.com/post/blurred-lines/") 0] ("toorcamp.toorcon.net" . "http://toorcamp.toorcon.net/?p=627") 0] [[[[[[nil nil ("www.sebastiansylvan.com" . "https://www.sebastiansylvan.com/post/GCWithoutUniformRepr/") 0] [nil nil ("toorcamp.toorcon.net" . "http://toorcamp.toorcon.net/?p=604") 0] ("idea.popcount.org" . "https://idea.popcount.org/2016-07-07-why-we-use-the-linux-kernels-tcp-stack") 0] [nil nil ("toorcamp.toorcon.net" . "http://toorcamp.toorcon.net/?p=584") 0] ("toorcamp.toorcon.net" . "http://toorcamp.toorcon.net/?p=598") -1] [[[nil [nil nil ("www.sebastiansylvan.com" . "https://www.sebastiansylvan.com/post/trackingspheres/") 0] ("hynek.me" . "https://hynek.me/talks/prometheus/") 1] [nil nil ("hynek.me" . "https://hynek.me/articles/conditional-python-dependencies/") 0] ("programmingisterrible.com" . "https://programmingisterrible.com/post/144659440878") -1] [[nil nil ("neopythonic.blogspot.com" . "tag:blogger.com,1999:blog-4195135246107166251.post-8854185106045973213") 0] [nil nil ("programmingisterrible.com" . "https://programmingisterrible.com/post/144144276173") 0] ("neopythonic.blogspot.com" . "tag:blogger.com,1999:blog-4195135246107166251.post-1468618515324597653") 0] ("neopythonic.blogspot.com" . "tag:blogger.com,1999:blog-4195135246107166251.post-4387175608679924841") -1] ("blog.jessfraz.com" . "https://blog.jessfraz.com/post/the-art-of-closing/") 1] [[[nil [nil nil ("idea.popcount.org" . "https://idea.popcount.org/2016-04-11-the-curious-case-of-slow-downloads") 0] ("neopythonic.blogspot.com" . "tag:blogger.com,1999:blog-4195135246107166251.post-218945325011447228") 1] [[nil nil ("idea.popcount.org" . "https://idea.popcount.org/2016-04-05-the-revenge-of-the-listening-sockets") 0] [[nil nil ("www.sebastiansylvan.com" . "https://www.sebastiansylvan.com/post/usingauto/") 0] nil ("idea.popcount.org" . "https://idea.popcount.org/2016-03-11-web-archeology---itblog") -1] ("blog.jessfraz.com" . "https://blog.jessfraz.com/post/the-brutally-honest-guide-to-docker-graphdrivers/") 1] ("joeduffyblog.com" . "http://joeduffyblog.com/2016/04/10/performance-culture/") 1] [[[nil nil ("idea.popcount.org" . "https://idea.popcount.org/2016-03-02-the-winter-of-weekend-attacks") 0] [nil nil ("hynek.me" . "https://hynek.me/articles/python3-2016/") 0] ("www.sebastiansylvan.com" . "https://www.sebastiansylvan.com/post/scalarsseintrinsics/") 0] [nil [nil nil ("idea.popcount.org" . "https://idea.popcount.org/2016-02-01-enigma---building-a-dos-mitigation-pipeline") 0] ("joeduffyblog.com" . "http://joeduffyblog.com/2016/02/07/the-error-model/") 1] ("programmingisterrible.com" . "https://programmingisterrible.com/post/139222674273") 0] ("programmingisterrible.com" . "https://programmingisterrible.com/post/140636464108") -1] ("blog.jessfraz.com" . "https://blog.jessfraz.com/post/getting-towards-real-sandbox-containers/") 0] [[[[nil nil ("programmingisterrible.com" . "https://programmingisterrible.com/post/137848667118") 0] [nil [nil nil ("hynek.me" . "https://hynek.me/articles/storing-passwords/") 0] ("hynek.me" . "https://hynek.me/articles/hasattr/") 1] ("blog.jessfraz.com" . "https://blog.jessfraz.com/post/runc-containers-on-the-desktop/") 1] [[nil nil ("joeduffyblog.com" . "http://joeduffyblog.com/2015/12/19/safe-native-code/") 0] [[nil nil ("idea.popcount.org" . "https://idea.popcount.org/2015-11-19-a-story-of-one-latency-spike") 0] [nil nil ("idea.popcount.org" . "https://idea.popcount.org/2015-11-16-black-hat-eu---defending-the-indefensible") 0] ("www.sebastiansylvan.com" . "https://www.sebastiansylvan.com/post/LeastSquaresTextureSeams/") 0] ("joeduffyblog.com" . "http://joeduffyblog.com/2015/11/19/asynchronous-everything/") 1] ("blog.jessfraz.com" . "https://blog.jessfraz.com/post/how-to-use-new-docker-seccomp-profiles/") 0] [[[nil [nil nil ("www.sebastiansylvan.com" . "https://www.sebastiansylvan.com/post/Moving-Off-Wordpress/") 0] ("bitbashing.io" . "/terrible-style.html") 1] [nil nil ("hynek.me" . "https://hynek.me/articles/testing-packaging/") 0] ("tim.mcnamara.nz" . "https://tim.mcnamara.nz/post/131939605962") -1] [nil [nil nil ("idea.popcount.org" . "https://idea.popcount.org/2015-09-07-kernel-bypass") 0] ("blog.jessfraz.com" . "https://blog.jessfraz.com/post/tor-socks-proxy-and-privoxy-containers/") 1] ("idea.popcount.org" . "https://idea.popcount.org/2015-09-25-analysis-of-a-browser-based-ddos") -1] ("joeduffyblog.com" . "http://joeduffyblog.com/2015/11/10/objects-as-secure-capabilities/") 0] ("blog.jessfraz.com" . "https://blog.jessfraz.com/post/ips-for-all-the-things/") -1] ("blog.jessfraz.com" . "https://blog.jessfraz.com/post/top-10-favorite-ldflags/") 1] [[[[[nil nil ("idea.popcount.org" . "https://idea.popcount.org/2015-08-16-turtles-all-the-way-down") 0] [nil nil ("blog.jessfraz.com" . "https://blog.jessfraz.com/post/this-industry-is-fucked/") 0] ("bitbashing.io" . "/be-lazy-use-ranges.html") 0] [[nil nil ("idea.popcount.org" . "https://idea.popcount.org/2015-06-30-how-to-achieve-low-latency") 0] [[nil nil ("idea.popcount.org" . "https://idea.popcount.org/2015-06-16-how-to-receive-a-million-packets-per-second") 0] nil ("bitbashing.io" . "/smoke-tests.html") -1] ("blog.jessfraz.com" . "https://blog.jessfraz.com/post/routing-traffic-through-tor-docker-container/") 1] ("blog.jessfraz.com" . "https://blog.jessfraz.com/post/r-containers-for-data-science/") 1] [[[[nil nil ("www.sebastiansylvan.com" . "https://www.sebastiansylvan.com/post/brackets-are-awesome-dont-use-them/") 0] nil ("programmingisterrible.com" . "https://programmingisterrible.com/post/118990527288") -1] [[nil nil ("idea.popcount.org" . "https://idea.popcount.org/2015-05-11-cloudflare-interview-questions") 0] [nil nil ("programmingisterrible.com" . "https://programmingisterrible.com/post/116698171738") 0] ("bitbashing.io" . "/time-for-d-to-own-up.html") 0] ("idea.popcount.org" . "https://idea.popcount.org/2015-05-11-oarc---dealing-with-dns-packet-floods") 0] [[nil nil ("programmingisterrible.com" . "https://programmingisterrible.com/post/116589898878") 0] [[nil nil ("programmingisterrible.com" . "https://programmingisterrible.com/post/116342157158") 0] [nil nil ("hynek.me" . "https://hynek.me/talks/beyond-grep/") 0] ("www.sebastiansylvan.com" . "https://www.sebastiansylvan.com/post/why-most-high-level-languages-are-slow/") 0] ("tim.mcnamara.nz" . "https://tim.mcnamara.nz/post/116520925447") 1] ("programmingisterrible.com" . "https://programmingisterrible.com/post/116678132013") 0] ("blog.jessfraz.com" . "https://blog.jessfraz.com/post/dogfooding-docker-to-test-docker/") 0] [[[[[nil nil ("idea.popcount.org" . "https://idea.popcount.org/2015-03-06-deprecating-the-dns-any") 0] nil ("programmingisterrible.com" . "https://programmingisterrible.com/post/112612689998") -1] [[nil nil ("idea.popcount.org" . "https://idea.popcount.org/2015-02-04-path-mtu-discovery-in-practice") 0] [nil nil ("tim.mcnamara.nz" . "https://tim.mcnamara.nz/post/103846216302") 0] ("www.sebastiansylvan.com" . "https://www.sebastiansylvan.com/post/variablerefresh/") 0] ("blog.jessfraz.com" . "https://blog.jessfraz.com/post/docker-containers-on-the-desktop/") 0] [[nil nil ("tim.mcnamara.nz" . "https://tim.mcnamara.nz/post/103333814732") 0] [nil nil ("habitatchronicles.com" . "http://habitatchronicles.com/?p=437") 0] ("habitatchronicles.com" . "http://habitatchronicles.com/?p=446") 0] ("blog.jessfraz.com" . "https://blog.jessfraz.com/post/linux-on-mac/") -1] [[[nil nil ("hynek.me" . "https://hynek.me/articles/virtualenv-lives/") 0] [nil [nil nil ("tim.mcnamara.nz" . "https://tim.mcnamara.nz/post/96670713097") 0] ("tim.mcnamara.nz" . "https://tim.mcnamara.nz/post/96687595307") 1] ("tim.mcnamara.nz" . "https://tim.mcnamara.nz/post/97038312997") 1] [[[[nil nil ("fabiensanglard.net" . "http://fabiensanglard.net/Game_Engine_Black_Book/index.php") 0] nil ("fabiensanglard.net" . "http://fabiensanglard.net/trespasser/index.php") -1] [[nil nil ("www.sebastiansylvan.com" . "https://www.sebastiansylvan.com/post/2014-04-27-flags-are-a-code-smell/") 0] [nil nil ("idea.popcount.org" . "https://idea.popcount.org/2014-04-03-bind-before-connect") 0] ("hynek.me" . "https://hynek.me/talks/tls/") 0] ("idea.popcount.org" . "https://idea.popcount.org/2014-05-21-bpf-the-forgotten-bytecode") 0] [[nil nil ("fabiensanglard.net" . "http://fabiensanglard.net/Computer_Graphics_Principles_and_Practices/index.php") 0] [nil nil ("idea.popcount.org" . "https://idea.popcount.org/2014-02-28-improving-containerlist") 0] ("hynek.me" . "https://hynek.me/articles/apple-openssl-verification-surprises/") 0] ("fabiensanglard.net" . "http://fabiensanglard.net/git_code_review/index.php") -1] ("fabiensanglard.net" . "http://fabiensanglard.net/Compile_Like_Its_1992/index.php") 1] ("tim.mcnamara.nz" . "https://tim.mcnamara.nz/post/100278999587") 1] ("programmingisterrible.com" . "https://programmingisterrible.com/post/113428268598") 1] ("blog.jessfraz.com" . "https://blog.jessfraz.com/post/running-a-tor-relay-with-docker/") -1] ("blog.jessfraz.com" . "https://blog.jessfraz.com/post/two-objects-not-namespaced-linux-kernel/") 1] [[[[[[[[nil nil ("idea.popcount.org" . "https://idea.popcount.org/2013-12-31-logging-best-practises") 0] [nil nil ("neopythonic.blogspot.com" . "tag:blogger.com,1999:blog-4195135246107166251.post-3167655459813772349") 0] ("idea.popcount.org" . "https://idea.popcount.org/2013-11-28-how-to-resolve-a-million-domains") 0] [[nil nil ("idea.popcount.org" . "https://idea.popcount.org/2013-10-09-visualising-siphash") 0] nil ("fabiensanglard.net" . "http://fabiensanglard.net/learning_legendary_hardware/index.php") -1] ("neopythonic.blogspot.com" . "tag:blogger.com,1999:blog-4195135246107166251.post-1365333064034396988") 0] [[[[nil nil ("idea.popcount.org" . "https://idea.popcount.org/2013-09-05-it-aint-about-the-callbacks") 0] [nil nil ("www.sebastiansylvan.com" . "https://www.sebastiansylvan.com/post/the-perils-of-future-coding/") 0] ("fabiensanglard.net" . "http://fabiensanglard.net/doom3_documentation/index.php") 0] [nil [nil nil ("www.sebastiansylvan.com" . "https://www.sebastiansylvan.com/post/more-on-robin-hood-hashing-2/") 0] ("idea.popcount.org" . "https://idea.popcount.org/2013-08-15-fortify_source") 1] ("fabiensanglard.net" . "http://fabiensanglard.net/second_reality/index.php") 0] [[nil nil ("idea.popcount.org" . "https://idea.popcount.org/2013-07-24-ir-is-better-than-assembly") 0] [[nil nil ("idea.popcount.org" . "https://idea.popcount.org/2013-07-16-baby-steps-in-x86-assembly") 0] [nil nil ("hynek.me" . "https://hynek.me/articles/life-after-google-reader/") 0] ("idea.popcount.org" . "https://idea.popcount.org/2013-07-11-fun-with-the-great-firewall") 0] ("idea.popcount.org" . "https://idea.popcount.org/2013-07-19-how-to-sleep-a-million-years") 1] ("hynek.me" . "https://hynek.me/articles/sharing-your-labor-of-love-pypi-quick-and-dirty/") 0] ("fabiensanglard.net" . "http://fabiensanglard.net/rayTracing_back_of_business_card/index.php") 1] [[[nil [nil nil ("www.sebastiansylvan.com" . "https://www.sebastiansylvan.com/post/language-design-deal-breakers/") 0] ("hynek.me" . "https://hynek.me/articles/a-short-summary-on-sybase-sql-anywhere-python/") 1] [[nil nil ("hynek.me" . "https://hynek.me/articles/know-your-models/") 0] [[nil nil ("www.sebastiansylvan.com" . "https://www.sebastiansylvan.com/post/thoughts-on-game-data-formats/") 0] [nil nil ("idea.popcount.org" . "https://idea.popcount.org/2013-03-25-hardware-entropy-rdrand") 0] ("www.sebastiansylvan.com" . "https://www.sebastiansylvan.com/post/on-gc-in-games-response-to-jeff-and-casey/") 0] ("www.sebastiansylvan.com" . "https://www.sebastiansylvan.com/post/robin-hood-hashing-should-be-your-default-hash-table-implementation/") 1] ("fabiensanglard.net" . "http://fabiensanglard.net/doom3_bfg/index.php") 1] [[[nil [nil nil ("www.sebastiansylvan.com" . "https://www.sebastiansylvan.com/post/runtime-code-specialization/") 0] ("hynek.me" . "https://hynek.me/articles/taking-some-pain-out-of-python-logging/") 1] [nil nil ("idea.popcount.org" . "https://idea.popcount.org/2013-01-30-bitsliced-siphash") 0] ("hynek.me" . "https://hynek.me/articles/hardening-your-web-servers-ssl-ciphers/") -1] [nil [nil nil ("idea.popcount.org" . "https://idea.popcount.org/2013-01-24-siphash") 0] ("idea.popcount.org" . "https://idea.popcount.org/2013-01-28-counting-cycles---rdtsc") 1] ("idea.popcount.org" . "https://idea.popcount.org/2013-01-29-stripping-layer-2-in-pcap") -1] ("hynek.me" . "https://hynek.me/talks/python-deployments/") 0] ("fabiensanglard.net" . "http://fabiensanglard.net/prince_of_persia/index.php") 0] [[[[[nil nil ("fabiensanglard.net" . "http://fabiensanglard.net/duke3d/index.php") 0] nil ("fabiensanglard.net" . "http://fabiensanglard.net/books_recommendations/index.php") -1] [[nil nil ("www.sebastiansylvan.com" . "https://www.sebastiansylvan.com/post/space-efficient-rresizable-arrays/") 0] nil ("idea.popcount.org" . "https://idea.popcount.org/2012-12-11-linux-process-states") -1] ("fabiensanglard.net" . "http://fabiensanglard.net/timer_and_framerate/index.php") 0] [[[nil nil ("www.sebastiansylvan.com" . "https://www.sebastiansylvan.com/post/garbage-collection-thoughts/") 0] nil ("idea.popcount.org" . "https://idea.popcount.org/2012-11-23-too-much-erlang") -1] [[nil nil ("idea.popcount.org" . "https://idea.popcount.org/2012-11-12-ssl-scanners") 0] [nil nil ("idea.popcount.org" . "https://idea.popcount.org/2012-09-21-django-with-sockjs") 0] ("idea.popcount.org" . "https://idea.popcount.org/2012-09-24-aes-support-in-westmere") 0] ("idea.popcount.org" . "https://idea.popcount.org/2012-11-13-how-to-crash-gdb-on-os-x") 0] ("idea.popcount.org" . "https://idea.popcount.org/2012-12-09-lsof-cant-identify-protocol") 0] [[[nil [nil nil ("www.sebastiansylvan.com" . "https://www.sebastiansylvan.com/post/onlive-and-cloud-gaming/") 0] ("idea.popcount.org" . "https://idea.popcount.org/2012-09-11-concurrent-queue-in-c") 1] [nil nil ("idea.popcount.org" . "https://idea.popcount.org/2012-07-25-introduction-to-hamt") 0] ("idea.popcount.org" . "https://idea.popcount.org/2012-07-28-am-i-a-cyborg-now") -1] [[nil [nil nil ("idea.popcount.org" . "https://idea.popcount.org/2012-07-02-rethinking-full-text-search") 0] ("hynek.me" . "https://hynek.me/articles/how-i-stopped-worrying-and-started-loving-pyladies/") 1] [[nil [nil nil ("www.sebastiansylvan.com" . "https://www.sebastiansylvan.com/post/casting-a-critical-eye-on-gpu-ptex/") 0] ("fabiensanglard.net" . "http://fabiensanglard.net/quake3/index.php") 1] [nil nil ("idea.popcount.org" . "https://idea.popcount.org/2012-06-16-dissecting-ssl-handshake") 0] ("idea.popcount.org" . "https://idea.popcount.org/2012-06-17-ssl-fingerprinting-for-p0f") -1] ("fabiensanglard.net" . "http://fabiensanglard.net/vr_headset/index.php") 1] ("hynek.me" . "https://hynek.me/articles/using-celery-with-pyramid/") 1] ("idea.popcount.org" . "https://idea.popcount.org/2012-09-12-reinventing-spinlocks") 1] ("fabiensanglard.net" . "http://fabiensanglard.net/reverse_engineering_strike_commander/index.php") 0] [[[[[nil nil ("idea.popcount.org" . "https://idea.popcount.org/2012-06-01-hello-world") 0] nil ("hynek.me" . "https://hynek.me/articles/my-road-to-the-python-commit-bit/") -1] [[nil nil ("hynek.me" . "https://hynek.me/articles/python-app-deployment-with-native-packages/") 0] [nil nil ("fabiensanglard.net" . "http://fabiensanglard.net/gift_of_life/index.php") 0] ("hynek.me" . "https://hynek.me/articles/python-deployment-anti-patterns/") 0] ("fabiensanglard.net" . "http://fabiensanglard.net/Ghost_in_the_Wires_Paperback/index.php") 0] [[[nil nil ("hynek.me" . "https://hynek.me/articles/celery-and-sybase/") 0] nil ("fabiensanglard.net" . "http://fabiensanglard.net/shmup_android/index.php") -1] [[[nil nil ("hynek.me" . "https://hynek.me/articles/my-2011/") 0] [nil nil ("hynek.me" . "https://hynek.me/articles/macvim-and-the-clipboard/") 0] ("hynek.me" . "https://hynek.me/articles/dead-simple-connection-pooling-with-twisted/") 0] [nil nil ("blog.jessfraz.com" . "https://blog.jessfraz.com/post/what-would-2pac-do/") 0] ("blog.jessfraz.com" . "https://blog.jessfraz.com/post/how-to-make-foursquare-your-bitch/") -1] ("hynek.me" . "https://hynek.me/articles/fleeing-from-gmail/") 1] ("fabiensanglard.net" . "http://fabiensanglard.net/ssd/index.php") 1] [[[nil nil ("fabiensanglard.net" . "http://fabiensanglard.net/anotherWorld_code_review/index.php") 0] [[nil nil ("hynek.me" . "https://hynek.me/articles/why-tomatoes-are-awesome/") 0] nil ("fabiensanglard.net" . "http://fabiensanglard.net/quake2/index.php") -1] ("fabiensanglard.net" . "http://fabiensanglard.net/doom3_macosx/index.php") 1] [[[nil nil ("fabiensanglard.net" . "http://fabiensanglard.net/Ghost_in_the_Wires/index.php") 0] [nil [nil nil ("www.sebastiansylvan.com" . "https://www.sebastiansylvan.com/post/idea-for-efficient-ao-type-raytracing-applications/") 0] ("hynek.me" . "https://hynek.me/articles/my-mutt-gmail-setup/") 1] ("neopythonic.blogspot.com" . "tag:blogger.com,1999:blog-4195135246107166251.post-466875216353064816") 1] [[nil nil ("fabiensanglard.net" . "http://fabiensanglard.net/hackerMonthly/index.php") 0] [nil nil ("fabiensanglard.net" . "http://fabiensanglard.net/shmup_source_code/index.php") 0] ("hynek.me" . "https://hynek.me/articles/solarized-love-on-first-sight/") 0] ("neopythonic.blogspot.com" . "tag:blogger.com,1999:blog-4195135246107166251.post-1297815584959918832") -1] ("fabiensanglard.net" . "http://fabiensanglard.net/Ghost_in_the_Wires/index.php2") 1] ("fabiensanglard.net" . "http://fabiensanglard.net/mobile_progressive_playback/index.php") 0] ("fabiensanglard.net" . "http://fabiensanglard.net/doom3/index.php") -1] [[[[[nil [nil nil ("rhettinger.wordpress.com" . "http://rhettinger.wordpress.com/?p=134") 0] ("neopythonic.blogspot.com" . "tag:blogger.com,1999:blog-4195135246107166251.post-9216930950165013030") 1] [nil nil ("fabiensanglard.net" . "http://fabiensanglard.net/dEngineSourceCodeRelease/index.php") 0] ("hynek.me" . "https://hynek.me/articles/mercurial-to-git/") -1] [nil [nil nil ("hynek.me" . "https://hynek.me/articles/information-diet/") 0] ("hynek.me" . "https://hynek.me/articles/django-postgres-ssl/") 1] ("hynek.me" . "https://hynek.me/articles/twisted-sybase/") -1] [[[[nil nil ("hynek.me" . "https://hynek.me/articles/django-and-remote-sybase-servers/") 0] [nil nil ("rhettinger.wordpress.com" . "http://rhettinger.wordpress.com/?p=40") 0] ("fabiensanglard.net" . "http://fabiensanglard.net/c/index.php") 0] [nil nil ("neopythonic.blogspot.com" . "tag:blogger.com,1999:blog-4195135246107166251.post-4493381985776030546") 0] ("neopythonic.blogspot.com" . "tag:blogger.com,1999:blog-4195135246107166251.post-255580926374362830") -1] [[[[nil nil ("fabiensanglard.net" . "http://fabiensanglard.net/fillrate_issues/") 0] [nil nil ("www.sebastiansylvan.com" . "https://www.sebastiansylvan.com/post/implementation-inheritance-considered-harmful/") 0] ("hynek.me" . "https://hynek.me/articles/freezing-kindle/") 0] [[nil nil ("www.sebastiansylvan.com" . "https://www.sebastiansylvan.com/post/idea-for-globally-unique-texturing-without-uv-sets/") 0] [nil nil ("www.sebastiansylvan.com" . "https://www.sebastiansylvan.com/post/r-trees--adapting-out-of-core-techniques-to-modern-memory-architectures/") 0] ("www.sebastiansylvan.com" . "https://www.sebastiansylvan.com/post/how-to-teach-game-programming/") 0] ("www.sebastiansylvan.com" . "https://www.sebastiansylvan.com/post/the-inevitability-of-video-game-piracy/") 0] [[nil [nil nil ("www.sebastiansylvan.com" . "https://www.sebastiansylvan.com/post/the-problem-with-tessellation-in-directx-11/") 0] ("www.sebastiansylvan.com" . "https://www.sebastiansylvan.com/post/improving-shadow-map-utilization-for-cascaded-shadow-maps/") 1] [nil nil ("fabiensanglard.net" . "http://fabiensanglard.net/doomIphone/index.php") 0] ("rhettinger.wordpress.com" . "https://rhettinger.wordpress.com/2010/02/06/lost-knowledge/") -1] ("fabiensanglard.net" . "http://fabiensanglard.net/cellphoneModem/index.php") 0] ("fabiensanglard.net" . "http://fabiensanglard.net/shmupLite/") 1] ("fabiensanglard.net" . "http://fabiensanglard.net/shmup_generate_videos/index.php") 1] [[[[[nil [nil nil ("neopythonic.blogspot.com" . "tag:blogger.com,1999:blog-4195135246107166251.post-677348085577431332") 0] ("fabiensanglard.net" . "http://fabiensanglard.net/macosxassembly/index.php") 1] [[nil nil ("www.sebastiansylvan.com" . "https://www.sebastiansylvan.com/post/two-performance-walls-approaching/") 0] [nil nil ("fabiensanglard.net" . "http://fabiensanglard.net/dEngine/index.php") 0] ("neopythonic.blogspot.com" . "tag:blogger.com,1999:blog-4195135246107166251.post-6686408606508944888") 0] ("fabiensanglard.net" . "http://fabiensanglard.net/appleTechTalk2009/index.php") 0] [[nil nil ("neopythonic.blogspot.com" . "tag:blogger.com,1999:blog-4195135246107166251.post-7278397071139257786") 0] [[nil nil ("neopythonic.blogspot.com" . "tag:blogger.com,1999:blog-4195135246107166251.post-6051448894535598481") 0] [nil nil ("www.sebastiansylvan.com" . "https://www.sebastiansylvan.com/post/why-sales-of-used-games-are-a-problem/") 0] ("www.sebastiansylvan.com" . "https://www.sebastiansylvan.com/post/ray-tracing-signed-distance-functions/") 0] ("neopythonic.blogspot.com" . "tag:blogger.com,1999:blog-4195135246107166251.post-2874247659060782299") 1] ("fabiensanglard.net" . "http://fabiensanglard.net/armadilloSpace/index.php") 0] [[[[nil nil ("www.sebastiansylvan.com" . "https://www.sebastiansylvan.com/post/the-prosecutor%e2%80%99s-fallacy-and-the-iranian-elections/") 0] [nil nil ("neopythonic.blogspot.com" . "tag:blogger.com,1999:blog-4195135246107166251.post-8117106389970387149") 0] ("www.sebastiansylvan.com" . "https://www.sebastiansylvan.com/post/2009-06-27-the-prosecutors-fallacy-and-the-iranian-elections/") 0] [nil nil ("neopythonic.blogspot.com" . "tag:blogger.com,1999:blog-4195135246107166251.post-7726509872610193829") 0] ("neopythonic.blogspot.com" . "tag:blogger.com,1999:blog-4195135246107166251.post-566392419873568850") -1] [[nil nil ("neopythonic.blogspot.com" . "tag:blogger.com,1999:blog-4195135246107166251.post-3285747448942201250") 0] nil ("fabiensanglard.net" . "http://fabiensanglard.net/fluide/././index.php") -1] ("fabiensanglard.net" . "http://fabiensanglard.net/fluide/index.php/.") -1] ("fabiensanglard.net" . "http://fabiensanglard.net/fluide/index.php") 0] [[[[nil nil ("fabiensanglard.net" . "http://fabiensanglard.net/fluide/./././index.php") 0] [[nil nil ("neopythonic.blogspot.com" . "tag:blogger.com,1999:blog-4195135246107166251.post-1180522963260162790") 0] nil ("fabiensanglard.net" . "http://fabiensanglard.net/fluide/././././index.php") -1] ("neopythonic.blogspot.com" . "tag:blogger.com,1999:blog-4195135246107166251.post-2448992805347535879") 1] [[[nil nil ("hynek.me" . "https://hynek.me/articles/ldap-a-gentle-introduction/") 0] [nil [nil nil ("www.sebastiansylvan.com" . "https://www.sebastiansylvan.com/about/") 0] ("hynek.me" . "https://hynek.me/articles/pcap-format-for-logs/") 1] ("hynek.me" . "https://hynek.me/articles/mysql-replication/") 1] [nil [nil nil ("ferrisellis.com" . "https://ferrisellis.com/writings/noise/") 0] ("ferrisellis.com" . "https://ferrisellis.com/writings/other_days/") 1] ("ferrisellis.com" . "https://ferrisellis.com/writings/well_find_a_better_future_in_2119_not_2019/") -1] ("fabiensanglard.net" . "http://fabiensanglard.net/bumpMapping/index.php") 1] [[[nil nil ("ferrisellis.com" . "https://ferrisellis.com/writings/local_excellence/") 0] [nil nil ("ferrisellis.com" . "https://ferrisellis.com/writings/a_life_of_dreams/") 0] ("ferrisellis.com" . "https://ferrisellis.com/writings/canopy/") 0] [[nil nil ("ferrisellis.com" . "https://ferrisellis.com/posts/rust-implementing-units-for-types/") 0] [[nil nil ("ferrisellis.com" . "https://ferrisellis.com/posts/lifecycle_versioning_v1_alpha/") 0] [nil nil ("ferrisellis.com" . "https://ferrisellis.com/posts/ebpf_past_present_future/") 0] ("ferrisellis.com" . "https://ferrisellis.com/posts/ebpf_syscall_and_maps/") 0] ("ferrisellis.com" . "https://ferrisellis.com/posts/project_lead_thoughts/") 1] ("ferrisellis.com" . "https://ferrisellis.com/talks/unums_strange_loop_2017/") 1] ("ferrisellis.com" . "https://ferrisellis.com/writings/look_inward/") -1] ("fabiensanglard.net" . "http://www.fabiensanglard.net/wolf3d/index.php") 1] ("fabiensanglard.net" . "http://fabiensanglard.net/doomIphone/doomClassicRenderer.php") 1] ("fabiensanglard.net" . "http://fabiensanglard.net/polygon_codec/index.php") 0] ("fabiensanglard.net" . "http://fabiensanglard.net/algorithms_and_datastructures/index.php") -1] ("250bpm.com" . "http://250bpm.com/blog:142") 1] nil nil 0] elfeed-db-compare) :last-update 1579577747.121115)